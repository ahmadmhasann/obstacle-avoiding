
obstacle-avoider.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000227e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000100  00800060  0000227e  00002312  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000010  00800160  00800160  00002412  2**0
                  ALLOC
  3 .debug_aranges 000001e0  00000000  00000000  00002412  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000419  00000000  00000000  000025f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001cdc  00000000  00000000  00002a0b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009f2  00000000  00000000  000046e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000013d6  00000000  00000000  000050d9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002a0  00000000  00000000  000064b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005eb  00000000  00000000  00006750  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001a4e  00000000  00000000  00006d3b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001f8  00000000  00000000  00008789  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
		PORTD = value;
		break;
	}
}

u8 dio_u8_read_port_value (u8 portNumber) {
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
void timer_vid_set_isr_timer0_ctc (void (*callback_function) (void))
{
	timer0_ctc_isr=callback_function;
}
void timer_vid_set_isr_timer1a_ctc (void (*callback_function) (void))
{
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 4e 0c 	jmp	0x189c	; 0x189c <__vector_4>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 00 0c 	jmp	0x1800	; 0x1800 <__vector_7>
      20:	0c 94 27 0c 	jmp	0x184e	; 0x184e <__vector_8>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 d9 0b 	jmp	0x17b2	; 0x17b2 <__vector_10>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b1 e0       	ldi	r27, 0x01	; 1
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	a0 37       	cpi	r26, 0x70	; 112
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
      70:	11 e0       	ldi	r17, 0x01	; 1
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	ee e7       	ldi	r30, 0x7E	; 126
      78:	f2 e2       	ldi	r31, 0x22	; 34
      7a:	02 c0       	rjmp	.+4      	; 0x80 <.do_copy_data_start>

0000007c <.do_copy_data_loop>:
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0

00000080 <.do_copy_data_start>:
      80:	a0 36       	cpi	r26, 0x60	; 96
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <.do_copy_data_loop>
      86:	0e 94 36 0b 	call	0x166c	; 0x166c <main>
      8a:	0c 94 3d 11 	jmp	0x227a	; 0x227a <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__muldi3>:
      92:	a0 e3       	ldi	r26, 0x30	; 48
      94:	b0 e0       	ldi	r27, 0x00	; 0
      96:	ef e4       	ldi	r30, 0x4F	; 79
      98:	f0 e0       	ldi	r31, 0x00	; 0
      9a:	0c 94 06 11 	jmp	0x220c	; 0x220c <__prologue_saves__>
      9e:	a8 e0       	ldi	r26, 0x08	; 8
      a0:	4e 01       	movw	r8, r28
      a2:	08 94       	sec
      a4:	81 1c       	adc	r8, r1
      a6:	91 1c       	adc	r9, r1
      a8:	f4 01       	movw	r30, r8
      aa:	ba 2f       	mov	r27, r26
      ac:	11 92       	st	Z+, r1
      ae:	ba 95       	dec	r27
      b0:	e9 f7       	brne	.-6      	; 0xac <__muldi3+0x1a>
      b2:	29 83       	std	Y+1, r18	; 0x01
      b4:	3a 83       	std	Y+2, r19	; 0x02
      b6:	4b 83       	std	Y+3, r20	; 0x03
      b8:	5c 83       	std	Y+4, r21	; 0x04
      ba:	6d 83       	std	Y+5, r22	; 0x05
      bc:	7e 83       	std	Y+6, r23	; 0x06
      be:	8f 83       	std	Y+7, r24	; 0x07
      c0:	98 87       	std	Y+8, r25	; 0x08
      c2:	ce 01       	movw	r24, r28
      c4:	09 96       	adiw	r24, 0x09	; 9
      c6:	fc 01       	movw	r30, r24
      c8:	11 92       	st	Z+, r1
      ca:	aa 95       	dec	r26
      cc:	e9 f7       	brne	.-6      	; 0xc8 <__muldi3+0x36>
      ce:	a9 86       	std	Y+9, r10	; 0x09
      d0:	ba 86       	std	Y+10, r11	; 0x0a
      d2:	cb 86       	std	Y+11, r12	; 0x0b
      d4:	dc 86       	std	Y+12, r13	; 0x0c
      d6:	ed 86       	std	Y+13, r14	; 0x0d
      d8:	fe 86       	std	Y+14, r15	; 0x0e
      da:	0f 87       	std	Y+15, r16	; 0x0f
      dc:	18 8b       	std	Y+16, r17	; 0x10
      de:	29 81       	ldd	r18, Y+1	; 0x01
      e0:	3a 81       	ldd	r19, Y+2	; 0x02
      e2:	4b 81       	ldd	r20, Y+3	; 0x03
      e4:	5c 81       	ldd	r21, Y+4	; 0x04
      e6:	2d a7       	std	Y+45, r18	; 0x2d
      e8:	3e a7       	std	Y+46, r19	; 0x2e
      ea:	4f a7       	std	Y+47, r20	; 0x2f
      ec:	58 ab       	std	Y+48, r21	; 0x30
      ee:	79 01       	movw	r14, r18
      f0:	8a 01       	movw	r16, r20
      f2:	8f ef       	ldi	r24, 0xFF	; 255
      f4:	9f ef       	ldi	r25, 0xFF	; 255
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b0 e0       	ldi	r27, 0x00	; 0
      fa:	e8 22       	and	r14, r24
      fc:	f9 22       	and	r15, r25
      fe:	0a 23       	and	r16, r26
     100:	1b 23       	and	r17, r27
     102:	1a 01       	movw	r2, r20
     104:	44 24       	eor	r4, r4
     106:	55 24       	eor	r5, r5
     108:	29 85       	ldd	r18, Y+9	; 0x09
     10a:	3a 85       	ldd	r19, Y+10	; 0x0a
     10c:	4b 85       	ldd	r20, Y+11	; 0x0b
     10e:	5c 85       	ldd	r21, Y+12	; 0x0c
     110:	29 a7       	std	Y+41, r18	; 0x29
     112:	3a a7       	std	Y+42, r19	; 0x2a
     114:	4b a7       	std	Y+43, r20	; 0x2b
     116:	5c a7       	std	Y+44, r21	; 0x2c
     118:	59 01       	movw	r10, r18
     11a:	6a 01       	movw	r12, r20
     11c:	a8 22       	and	r10, r24
     11e:	b9 22       	and	r11, r25
     120:	ca 22       	and	r12, r26
     122:	db 22       	and	r13, r27
     124:	3a 01       	movw	r6, r20
     126:	88 24       	eor	r8, r8
     128:	99 24       	eor	r9, r9
     12a:	c6 01       	movw	r24, r12
     12c:	b5 01       	movw	r22, r10
     12e:	a8 01       	movw	r20, r16
     130:	97 01       	movw	r18, r14
     132:	0e 94 c5 10 	call	0x218a	; 0x218a <__mulsi3>
     136:	6d a3       	std	Y+37, r22	; 0x25
     138:	7e a3       	std	Y+38, r23	; 0x26
     13a:	8f a3       	std	Y+39, r24	; 0x27
     13c:	98 a7       	std	Y+40, r25	; 0x28
     13e:	c4 01       	movw	r24, r8
     140:	b3 01       	movw	r22, r6
     142:	0e 94 c5 10 	call	0x218a	; 0x218a <__mulsi3>
     146:	69 a3       	std	Y+33, r22	; 0x21
     148:	7a a3       	std	Y+34, r23	; 0x22
     14a:	8b a3       	std	Y+35, r24	; 0x23
     14c:	9c a3       	std	Y+36, r25	; 0x24
     14e:	c6 01       	movw	r24, r12
     150:	b5 01       	movw	r22, r10
     152:	a2 01       	movw	r20, r4
     154:	91 01       	movw	r18, r2
     156:	0e 94 c5 10 	call	0x218a	; 0x218a <__mulsi3>
     15a:	7b 01       	movw	r14, r22
     15c:	8c 01       	movw	r16, r24
     15e:	c4 01       	movw	r24, r8
     160:	b3 01       	movw	r22, r6
     162:	0e 94 c5 10 	call	0x218a	; 0x218a <__mulsi3>
     166:	5b 01       	movw	r10, r22
     168:	6c 01       	movw	r12, r24
     16a:	89 a1       	ldd	r24, Y+33	; 0x21
     16c:	9a a1       	ldd	r25, Y+34	; 0x22
     16e:	ab a1       	ldd	r26, Y+35	; 0x23
     170:	bc a1       	ldd	r27, Y+36	; 0x24
     172:	8e 0d       	add	r24, r14
     174:	9f 1d       	adc	r25, r15
     176:	a0 1f       	adc	r26, r16
     178:	b1 1f       	adc	r27, r17
     17a:	89 a3       	std	Y+33, r24	; 0x21
     17c:	9a a3       	std	Y+34, r25	; 0x22
     17e:	ab a3       	std	Y+35, r26	; 0x23
     180:	bc a3       	std	Y+36, r27	; 0x24
     182:	2d a1       	ldd	r18, Y+37	; 0x25
     184:	3e a1       	ldd	r19, Y+38	; 0x26
     186:	4f a1       	ldd	r20, Y+39	; 0x27
     188:	58 a5       	ldd	r21, Y+40	; 0x28
     18a:	ca 01       	movw	r24, r20
     18c:	aa 27       	eor	r26, r26
     18e:	bb 27       	eor	r27, r27
     190:	29 a1       	ldd	r18, Y+33	; 0x21
     192:	3a a1       	ldd	r19, Y+34	; 0x22
     194:	4b a1       	ldd	r20, Y+35	; 0x23
     196:	5c a1       	ldd	r21, Y+36	; 0x24
     198:	28 0f       	add	r18, r24
     19a:	39 1f       	adc	r19, r25
     19c:	4a 1f       	adc	r20, r26
     19e:	5b 1f       	adc	r21, r27
     1a0:	29 a3       	std	Y+33, r18	; 0x21
     1a2:	3a a3       	std	Y+34, r19	; 0x22
     1a4:	4b a3       	std	Y+35, r20	; 0x23
     1a6:	5c a3       	std	Y+36, r21	; 0x24
     1a8:	2e 15       	cp	r18, r14
     1aa:	3f 05       	cpc	r19, r15
     1ac:	40 07       	cpc	r20, r16
     1ae:	51 07       	cpc	r21, r17
     1b0:	40 f4       	brcc	.+16     	; 0x1c2 <__muldi3+0x130>
     1b2:	80 e0       	ldi	r24, 0x00	; 0
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	a1 e0       	ldi	r26, 0x01	; 1
     1b8:	b0 e0       	ldi	r27, 0x00	; 0
     1ba:	a8 0e       	add	r10, r24
     1bc:	b9 1e       	adc	r11, r25
     1be:	ca 1e       	adc	r12, r26
     1c0:	db 1e       	adc	r13, r27
     1c2:	89 a1       	ldd	r24, Y+33	; 0x21
     1c4:	9a a1       	ldd	r25, Y+34	; 0x22
     1c6:	ab a1       	ldd	r26, Y+35	; 0x23
     1c8:	bc a1       	ldd	r27, Y+36	; 0x24
     1ca:	9d 01       	movw	r18, r26
     1cc:	44 27       	eor	r20, r20
     1ce:	55 27       	eor	r21, r21
     1d0:	2a 0d       	add	r18, r10
     1d2:	3b 1d       	adc	r19, r11
     1d4:	4c 1d       	adc	r20, r12
     1d6:	5d 1d       	adc	r21, r13
     1d8:	2d 8f       	std	Y+29, r18	; 0x1d
     1da:	3e 8f       	std	Y+30, r19	; 0x1e
     1dc:	4f 8f       	std	Y+31, r20	; 0x1f
     1de:	58 a3       	std	Y+32, r21	; 0x20
     1e0:	6c 01       	movw	r12, r24
     1e2:	bb 24       	eor	r11, r11
     1e4:	aa 24       	eor	r10, r10
     1e6:	8d a1       	ldd	r24, Y+37	; 0x25
     1e8:	9e a1       	ldd	r25, Y+38	; 0x26
     1ea:	af a1       	ldd	r26, Y+39	; 0x27
     1ec:	b8 a5       	ldd	r27, Y+40	; 0x28
     1ee:	a0 70       	andi	r26, 0x00	; 0
     1f0:	b0 70       	andi	r27, 0x00	; 0
     1f2:	a8 0e       	add	r10, r24
     1f4:	b9 1e       	adc	r11, r25
     1f6:	ca 1e       	adc	r12, r26
     1f8:	db 1e       	adc	r13, r27
     1fa:	a9 8e       	std	Y+25, r10	; 0x19
     1fc:	ba 8e       	std	Y+26, r11	; 0x1a
     1fe:	cb 8e       	std	Y+27, r12	; 0x1b
     200:	dc 8e       	std	Y+28, r13	; 0x1c
     202:	9a 8c       	ldd	r9, Y+26	; 0x1a
     204:	8b 8c       	ldd	r8, Y+27	; 0x1b
     206:	7c 8c       	ldd	r7, Y+28	; 0x1c
     208:	9e 8d       	ldd	r25, Y+30	; 0x1e
     20a:	6f 8d       	ldd	r22, Y+31	; 0x1f
     20c:	78 a1       	ldd	r23, Y+32	; 0x20
     20e:	fe 01       	movw	r30, r28
     210:	71 96       	adiw	r30, 0x11	; 17
     212:	88 e0       	ldi	r24, 0x08	; 8
     214:	df 01       	movw	r26, r30
     216:	1d 92       	st	X+, r1
     218:	8a 95       	dec	r24
     21a:	e9 f7       	brne	.-6      	; 0x216 <__muldi3+0x184>
     21c:	2d 8b       	std	Y+21, r18	; 0x15
     21e:	9e 8b       	std	Y+22, r25	; 0x16
     220:	6f 8b       	std	Y+23, r22	; 0x17
     222:	78 8f       	std	Y+24, r23	; 0x18
     224:	2d 85       	ldd	r18, Y+13	; 0x0d
     226:	3e 85       	ldd	r19, Y+14	; 0x0e
     228:	4f 85       	ldd	r20, Y+15	; 0x0f
     22a:	58 89       	ldd	r21, Y+16	; 0x10
     22c:	6d a5       	ldd	r22, Y+45	; 0x2d
     22e:	7e a5       	ldd	r23, Y+46	; 0x2e
     230:	8f a5       	ldd	r24, Y+47	; 0x2f
     232:	98 a9       	ldd	r25, Y+48	; 0x30
     234:	0e 94 c5 10 	call	0x218a	; 0x218a <__mulsi3>
     238:	7b 01       	movw	r14, r22
     23a:	8c 01       	movw	r16, r24
     23c:	2d 81       	ldd	r18, Y+5	; 0x05
     23e:	3e 81       	ldd	r19, Y+6	; 0x06
     240:	4f 81       	ldd	r20, Y+7	; 0x07
     242:	58 85       	ldd	r21, Y+8	; 0x08
     244:	69 a5       	ldd	r22, Y+41	; 0x29
     246:	7a a5       	ldd	r23, Y+42	; 0x2a
     248:	8b a5       	ldd	r24, Y+43	; 0x2b
     24a:	9c a5       	ldd	r25, Y+44	; 0x2c
     24c:	0e 94 c5 10 	call	0x218a	; 0x218a <__mulsi3>
     250:	e6 0e       	add	r14, r22
     252:	f7 1e       	adc	r15, r23
     254:	08 1f       	adc	r16, r24
     256:	19 1f       	adc	r17, r25
     258:	6d 89       	ldd	r22, Y+21	; 0x15
     25a:	7e 89       	ldd	r23, Y+22	; 0x16
     25c:	8f 89       	ldd	r24, Y+23	; 0x17
     25e:	98 8d       	ldd	r25, Y+24	; 0x18
     260:	6e 0d       	add	r22, r14
     262:	7f 1d       	adc	r23, r15
     264:	80 1f       	adc	r24, r16
     266:	91 1f       	adc	r25, r17
     268:	6d 8b       	std	Y+21, r22	; 0x15
     26a:	7e 8b       	std	Y+22, r23	; 0x16
     26c:	8f 8b       	std	Y+23, r24	; 0x17
     26e:	98 8f       	std	Y+24, r25	; 0x18
     270:	ee 89       	ldd	r30, Y+22	; 0x16
     272:	2a 2d       	mov	r18, r10
     274:	39 2d       	mov	r19, r9
     276:	48 2d       	mov	r20, r8
     278:	57 2d       	mov	r21, r7
     27a:	7e 2f       	mov	r23, r30
     27c:	8f 89       	ldd	r24, Y+23	; 0x17
     27e:	98 8d       	ldd	r25, Y+24	; 0x18
     280:	e0 96       	adiw	r28, 0x30	; 48
     282:	e2 e1       	ldi	r30, 0x12	; 18
     284:	0c 94 22 11 	jmp	0x2244	; 0x2244 <__epilogue_restores__>

00000288 <__lshrdi3>:
     288:	ef 92       	push	r14
     28a:	ff 92       	push	r15
     28c:	0f 93       	push	r16
     28e:	df 93       	push	r29
     290:	cf 93       	push	r28
     292:	cd b7       	in	r28, 0x3d	; 61
     294:	de b7       	in	r29, 0x3e	; 62
     296:	60 97       	sbiw	r28, 0x10	; 16
     298:	0f b6       	in	r0, 0x3f	; 63
     29a:	f8 94       	cli
     29c:	de bf       	out	0x3e, r29	; 62
     29e:	0f be       	out	0x3f, r0	; 63
     2a0:	cd bf       	out	0x3d, r28	; 61
     2a2:	a8 2f       	mov	r26, r24
     2a4:	00 23       	and	r16, r16
     2a6:	09 f4       	brne	.+2      	; 0x2aa <__lshrdi3+0x22>
     2a8:	61 c0       	rjmp	.+194    	; 0x36c <__lshrdi3+0xe4>
     2aa:	7e 01       	movw	r14, r28
     2ac:	08 94       	sec
     2ae:	e1 1c       	adc	r14, r1
     2b0:	f1 1c       	adc	r15, r1
     2b2:	88 e0       	ldi	r24, 0x08	; 8
     2b4:	f7 01       	movw	r30, r14
     2b6:	11 92       	st	Z+, r1
     2b8:	8a 95       	dec	r24
     2ba:	e9 f7       	brne	.-6      	; 0x2b6 <__lshrdi3+0x2e>
     2bc:	29 83       	std	Y+1, r18	; 0x01
     2be:	3a 83       	std	Y+2, r19	; 0x02
     2c0:	4b 83       	std	Y+3, r20	; 0x03
     2c2:	5c 83       	std	Y+4, r21	; 0x04
     2c4:	6d 83       	std	Y+5, r22	; 0x05
     2c6:	7e 83       	std	Y+6, r23	; 0x06
     2c8:	af 83       	std	Y+7, r26	; 0x07
     2ca:	98 87       	std	Y+8, r25	; 0x08
     2cc:	80 e2       	ldi	r24, 0x20	; 32
     2ce:	80 1b       	sub	r24, r16
     2d0:	e8 2f       	mov	r30, r24
     2d2:	ff 27       	eor	r31, r31
     2d4:	e7 fd       	sbrc	r30, 7
     2d6:	f0 95       	com	r31
     2d8:	4d 81       	ldd	r20, Y+5	; 0x05
     2da:	5e 81       	ldd	r21, Y+6	; 0x06
     2dc:	6f 81       	ldd	r22, Y+7	; 0x07
     2de:	78 85       	ldd	r23, Y+8	; 0x08
     2e0:	18 16       	cp	r1, r24
     2e2:	84 f0       	brlt	.+32     	; 0x304 <__lshrdi3+0x7c>
     2e4:	1d 86       	std	Y+13, r1	; 0x0d
     2e6:	1e 86       	std	Y+14, r1	; 0x0e
     2e8:	1f 86       	std	Y+15, r1	; 0x0f
     2ea:	18 8a       	std	Y+16, r1	; 0x10
     2ec:	88 27       	eor	r24, r24
     2ee:	99 27       	eor	r25, r25
     2f0:	8e 1b       	sub	r24, r30
     2f2:	9f 0b       	sbc	r25, r31
     2f4:	04 c0       	rjmp	.+8      	; 0x2fe <__lshrdi3+0x76>
     2f6:	76 95       	lsr	r23
     2f8:	67 95       	ror	r22
     2fa:	57 95       	ror	r21
     2fc:	47 95       	ror	r20
     2fe:	8a 95       	dec	r24
     300:	d2 f7       	brpl	.-12     	; 0x2f6 <__lshrdi3+0x6e>
     302:	28 c0       	rjmp	.+80     	; 0x354 <__lshrdi3+0xcc>
     304:	20 2f       	mov	r18, r16
     306:	33 27       	eor	r19, r19
     308:	27 fd       	sbrc	r18, 7
     30a:	30 95       	com	r19
     30c:	db 01       	movw	r26, r22
     30e:	ca 01       	movw	r24, r20
     310:	02 2e       	mov	r0, r18
     312:	04 c0       	rjmp	.+8      	; 0x31c <__lshrdi3+0x94>
     314:	b6 95       	lsr	r27
     316:	a7 95       	ror	r26
     318:	97 95       	ror	r25
     31a:	87 95       	ror	r24
     31c:	0a 94       	dec	r0
     31e:	d2 f7       	brpl	.-12     	; 0x314 <__lshrdi3+0x8c>
     320:	8d 87       	std	Y+13, r24	; 0x0d
     322:	9e 87       	std	Y+14, r25	; 0x0e
     324:	af 87       	std	Y+15, r26	; 0x0f
     326:	b8 8b       	std	Y+16, r27	; 0x10
     328:	04 c0       	rjmp	.+8      	; 0x332 <__lshrdi3+0xaa>
     32a:	44 0f       	add	r20, r20
     32c:	55 1f       	adc	r21, r21
     32e:	66 1f       	adc	r22, r22
     330:	77 1f       	adc	r23, r23
     332:	ea 95       	dec	r30
     334:	d2 f7       	brpl	.-12     	; 0x32a <__lshrdi3+0xa2>
     336:	89 81       	ldd	r24, Y+1	; 0x01
     338:	9a 81       	ldd	r25, Y+2	; 0x02
     33a:	ab 81       	ldd	r26, Y+3	; 0x03
     33c:	bc 81       	ldd	r27, Y+4	; 0x04
     33e:	04 c0       	rjmp	.+8      	; 0x348 <__lshrdi3+0xc0>
     340:	b6 95       	lsr	r27
     342:	a7 95       	ror	r26
     344:	97 95       	ror	r25
     346:	87 95       	ror	r24
     348:	2a 95       	dec	r18
     34a:	d2 f7       	brpl	.-12     	; 0x340 <__lshrdi3+0xb8>
     34c:	48 2b       	or	r20, r24
     34e:	59 2b       	or	r21, r25
     350:	6a 2b       	or	r22, r26
     352:	7b 2b       	or	r23, r27
     354:	49 87       	std	Y+9, r20	; 0x09
     356:	5a 87       	std	Y+10, r21	; 0x0a
     358:	6b 87       	std	Y+11, r22	; 0x0b
     35a:	7c 87       	std	Y+12, r23	; 0x0c
     35c:	29 85       	ldd	r18, Y+9	; 0x09
     35e:	3a 85       	ldd	r19, Y+10	; 0x0a
     360:	4b 85       	ldd	r20, Y+11	; 0x0b
     362:	5c 85       	ldd	r21, Y+12	; 0x0c
     364:	6d 85       	ldd	r22, Y+13	; 0x0d
     366:	7e 85       	ldd	r23, Y+14	; 0x0e
     368:	af 85       	ldd	r26, Y+15	; 0x0f
     36a:	98 89       	ldd	r25, Y+16	; 0x10
     36c:	8a 2f       	mov	r24, r26
     36e:	60 96       	adiw	r28, 0x10	; 16
     370:	0f b6       	in	r0, 0x3f	; 63
     372:	f8 94       	cli
     374:	de bf       	out	0x3e, r29	; 62
     376:	0f be       	out	0x3f, r0	; 63
     378:	cd bf       	out	0x3d, r28	; 61
     37a:	cf 91       	pop	r28
     37c:	df 91       	pop	r29
     37e:	0f 91       	pop	r16
     380:	ff 90       	pop	r15
     382:	ef 90       	pop	r14
     384:	08 95       	ret

00000386 <__ashldi3>:
     386:	ef 92       	push	r14
     388:	ff 92       	push	r15
     38a:	0f 93       	push	r16
     38c:	df 93       	push	r29
     38e:	cf 93       	push	r28
     390:	cd b7       	in	r28, 0x3d	; 61
     392:	de b7       	in	r29, 0x3e	; 62
     394:	60 97       	sbiw	r28, 0x10	; 16
     396:	0f b6       	in	r0, 0x3f	; 63
     398:	f8 94       	cli
     39a:	de bf       	out	0x3e, r29	; 62
     39c:	0f be       	out	0x3f, r0	; 63
     39e:	cd bf       	out	0x3d, r28	; 61
     3a0:	a8 2f       	mov	r26, r24
     3a2:	00 23       	and	r16, r16
     3a4:	09 f4       	brne	.+2      	; 0x3a8 <__ashldi3+0x22>
     3a6:	61 c0       	rjmp	.+194    	; 0x46a <__ashldi3+0xe4>
     3a8:	7e 01       	movw	r14, r28
     3aa:	08 94       	sec
     3ac:	e1 1c       	adc	r14, r1
     3ae:	f1 1c       	adc	r15, r1
     3b0:	88 e0       	ldi	r24, 0x08	; 8
     3b2:	f7 01       	movw	r30, r14
     3b4:	11 92       	st	Z+, r1
     3b6:	8a 95       	dec	r24
     3b8:	e9 f7       	brne	.-6      	; 0x3b4 <__ashldi3+0x2e>
     3ba:	29 83       	std	Y+1, r18	; 0x01
     3bc:	3a 83       	std	Y+2, r19	; 0x02
     3be:	4b 83       	std	Y+3, r20	; 0x03
     3c0:	5c 83       	std	Y+4, r21	; 0x04
     3c2:	6d 83       	std	Y+5, r22	; 0x05
     3c4:	7e 83       	std	Y+6, r23	; 0x06
     3c6:	af 83       	std	Y+7, r26	; 0x07
     3c8:	98 87       	std	Y+8, r25	; 0x08
     3ca:	80 e2       	ldi	r24, 0x20	; 32
     3cc:	80 1b       	sub	r24, r16
     3ce:	e8 2f       	mov	r30, r24
     3d0:	ff 27       	eor	r31, r31
     3d2:	e7 fd       	sbrc	r30, 7
     3d4:	f0 95       	com	r31
     3d6:	49 81       	ldd	r20, Y+1	; 0x01
     3d8:	5a 81       	ldd	r21, Y+2	; 0x02
     3da:	6b 81       	ldd	r22, Y+3	; 0x03
     3dc:	7c 81       	ldd	r23, Y+4	; 0x04
     3de:	18 16       	cp	r1, r24
     3e0:	84 f0       	brlt	.+32     	; 0x402 <__ashldi3+0x7c>
     3e2:	19 86       	std	Y+9, r1	; 0x09
     3e4:	1a 86       	std	Y+10, r1	; 0x0a
     3e6:	1b 86       	std	Y+11, r1	; 0x0b
     3e8:	1c 86       	std	Y+12, r1	; 0x0c
     3ea:	88 27       	eor	r24, r24
     3ec:	99 27       	eor	r25, r25
     3ee:	8e 1b       	sub	r24, r30
     3f0:	9f 0b       	sbc	r25, r31
     3f2:	04 c0       	rjmp	.+8      	; 0x3fc <__ashldi3+0x76>
     3f4:	44 0f       	add	r20, r20
     3f6:	55 1f       	adc	r21, r21
     3f8:	66 1f       	adc	r22, r22
     3fa:	77 1f       	adc	r23, r23
     3fc:	8a 95       	dec	r24
     3fe:	d2 f7       	brpl	.-12     	; 0x3f4 <__ashldi3+0x6e>
     400:	28 c0       	rjmp	.+80     	; 0x452 <__ashldi3+0xcc>
     402:	20 2f       	mov	r18, r16
     404:	33 27       	eor	r19, r19
     406:	27 fd       	sbrc	r18, 7
     408:	30 95       	com	r19
     40a:	db 01       	movw	r26, r22
     40c:	ca 01       	movw	r24, r20
     40e:	02 2e       	mov	r0, r18
     410:	04 c0       	rjmp	.+8      	; 0x41a <__ashldi3+0x94>
     412:	88 0f       	add	r24, r24
     414:	99 1f       	adc	r25, r25
     416:	aa 1f       	adc	r26, r26
     418:	bb 1f       	adc	r27, r27
     41a:	0a 94       	dec	r0
     41c:	d2 f7       	brpl	.-12     	; 0x412 <__ashldi3+0x8c>
     41e:	89 87       	std	Y+9, r24	; 0x09
     420:	9a 87       	std	Y+10, r25	; 0x0a
     422:	ab 87       	std	Y+11, r26	; 0x0b
     424:	bc 87       	std	Y+12, r27	; 0x0c
     426:	04 c0       	rjmp	.+8      	; 0x430 <__ashldi3+0xaa>
     428:	76 95       	lsr	r23
     42a:	67 95       	ror	r22
     42c:	57 95       	ror	r21
     42e:	47 95       	ror	r20
     430:	ea 95       	dec	r30
     432:	d2 f7       	brpl	.-12     	; 0x428 <__ashldi3+0xa2>
     434:	8d 81       	ldd	r24, Y+5	; 0x05
     436:	9e 81       	ldd	r25, Y+6	; 0x06
     438:	af 81       	ldd	r26, Y+7	; 0x07
     43a:	b8 85       	ldd	r27, Y+8	; 0x08
     43c:	04 c0       	rjmp	.+8      	; 0x446 <__ashldi3+0xc0>
     43e:	88 0f       	add	r24, r24
     440:	99 1f       	adc	r25, r25
     442:	aa 1f       	adc	r26, r26
     444:	bb 1f       	adc	r27, r27
     446:	2a 95       	dec	r18
     448:	d2 f7       	brpl	.-12     	; 0x43e <__ashldi3+0xb8>
     44a:	48 2b       	or	r20, r24
     44c:	59 2b       	or	r21, r25
     44e:	6a 2b       	or	r22, r26
     450:	7b 2b       	or	r23, r27
     452:	4d 87       	std	Y+13, r20	; 0x0d
     454:	5e 87       	std	Y+14, r21	; 0x0e
     456:	6f 87       	std	Y+15, r22	; 0x0f
     458:	78 8b       	std	Y+16, r23	; 0x10
     45a:	29 85       	ldd	r18, Y+9	; 0x09
     45c:	3a 85       	ldd	r19, Y+10	; 0x0a
     45e:	4b 85       	ldd	r20, Y+11	; 0x0b
     460:	5c 85       	ldd	r21, Y+12	; 0x0c
     462:	6d 85       	ldd	r22, Y+13	; 0x0d
     464:	7e 85       	ldd	r23, Y+14	; 0x0e
     466:	af 85       	ldd	r26, Y+15	; 0x0f
     468:	98 89       	ldd	r25, Y+16	; 0x10
     46a:	8a 2f       	mov	r24, r26
     46c:	60 96       	adiw	r28, 0x10	; 16
     46e:	0f b6       	in	r0, 0x3f	; 63
     470:	f8 94       	cli
     472:	de bf       	out	0x3e, r29	; 62
     474:	0f be       	out	0x3f, r0	; 63
     476:	cd bf       	out	0x3d, r28	; 61
     478:	cf 91       	pop	r28
     47a:	df 91       	pop	r29
     47c:	0f 91       	pop	r16
     47e:	ff 90       	pop	r15
     480:	ef 90       	pop	r14
     482:	08 95       	ret

00000484 <__udivdi3>:
     484:	ae e5       	ldi	r26, 0x5E	; 94
     486:	b0 e0       	ldi	r27, 0x00	; 0
     488:	e8 e4       	ldi	r30, 0x48	; 72
     48a:	f2 e0       	ldi	r31, 0x02	; 2
     48c:	0c 94 06 11 	jmp	0x220c	; 0x220c <__prologue_saves__>
     490:	a8 e0       	ldi	r26, 0x08	; 8
     492:	4e 01       	movw	r8, r28
     494:	08 94       	sec
     496:	81 1c       	adc	r8, r1
     498:	91 1c       	adc	r9, r1
     49a:	f4 01       	movw	r30, r8
     49c:	6a 2e       	mov	r6, r26
     49e:	11 92       	st	Z+, r1
     4a0:	6a 94       	dec	r6
     4a2:	e9 f7       	brne	.-6      	; 0x49e <__udivdi3+0x1a>
     4a4:	29 83       	std	Y+1, r18	; 0x01
     4a6:	3a 83       	std	Y+2, r19	; 0x02
     4a8:	4b 83       	std	Y+3, r20	; 0x03
     4aa:	5c 83       	std	Y+4, r21	; 0x04
     4ac:	6d 83       	std	Y+5, r22	; 0x05
     4ae:	7e 83       	std	Y+6, r23	; 0x06
     4b0:	8f 83       	std	Y+7, r24	; 0x07
     4b2:	98 87       	std	Y+8, r25	; 0x08
     4b4:	ce 01       	movw	r24, r28
     4b6:	09 96       	adiw	r24, 0x09	; 9
     4b8:	fc 01       	movw	r30, r24
     4ba:	11 92       	st	Z+, r1
     4bc:	aa 95       	dec	r26
     4be:	e9 f7       	brne	.-6      	; 0x4ba <__udivdi3+0x36>
     4c0:	a9 86       	std	Y+9, r10	; 0x09
     4c2:	ba 86       	std	Y+10, r11	; 0x0a
     4c4:	cb 86       	std	Y+11, r12	; 0x0b
     4c6:	dc 86       	std	Y+12, r13	; 0x0c
     4c8:	ed 86       	std	Y+13, r14	; 0x0d
     4ca:	fe 86       	std	Y+14, r15	; 0x0e
     4cc:	0f 87       	std	Y+15, r16	; 0x0f
     4ce:	18 8b       	std	Y+16, r17	; 0x10
     4d0:	29 84       	ldd	r2, Y+9	; 0x09
     4d2:	3a 84       	ldd	r3, Y+10	; 0x0a
     4d4:	4b 84       	ldd	r4, Y+11	; 0x0b
     4d6:	5c 84       	ldd	r5, Y+12	; 0x0c
     4d8:	ed 84       	ldd	r14, Y+13	; 0x0d
     4da:	fe 84       	ldd	r15, Y+14	; 0x0e
     4dc:	0f 85       	ldd	r16, Y+15	; 0x0f
     4de:	18 89       	ldd	r17, Y+16	; 0x10
     4e0:	69 80       	ldd	r6, Y+1	; 0x01
     4e2:	7a 80       	ldd	r7, Y+2	; 0x02
     4e4:	8b 80       	ldd	r8, Y+3	; 0x03
     4e6:	9c 80       	ldd	r9, Y+4	; 0x04
     4e8:	6d a6       	std	Y+45, r6	; 0x2d
     4ea:	7e a6       	std	Y+46, r7	; 0x2e
     4ec:	8f a6       	std	Y+47, r8	; 0x2f
     4ee:	98 aa       	std	Y+48, r9	; 0x30
     4f0:	6d 80       	ldd	r6, Y+5	; 0x05
     4f2:	7e 80       	ldd	r7, Y+6	; 0x06
     4f4:	8f 80       	ldd	r8, Y+7	; 0x07
     4f6:	98 84       	ldd	r9, Y+8	; 0x08
     4f8:	e1 14       	cp	r14, r1
     4fa:	f1 04       	cpc	r15, r1
     4fc:	01 05       	cpc	r16, r1
     4fe:	11 05       	cpc	r17, r1
     500:	09 f0       	breq	.+2      	; 0x504 <__udivdi3+0x80>
     502:	b3 c3       	rjmp	.+1894   	; 0xc6a <__stack+0x40b>
     504:	62 14       	cp	r6, r2
     506:	73 04       	cpc	r7, r3
     508:	84 04       	cpc	r8, r4
     50a:	95 04       	cpc	r9, r5
     50c:	08 f0       	brcs	.+2      	; 0x510 <__udivdi3+0x8c>
     50e:	3d c1       	rjmp	.+634    	; 0x78a <__udivdi3+0x306>
     510:	00 e0       	ldi	r16, 0x00	; 0
     512:	20 16       	cp	r2, r16
     514:	00 e0       	ldi	r16, 0x00	; 0
     516:	30 06       	cpc	r3, r16
     518:	01 e0       	ldi	r16, 0x01	; 1
     51a:	40 06       	cpc	r4, r16
     51c:	00 e0       	ldi	r16, 0x00	; 0
     51e:	50 06       	cpc	r5, r16
     520:	88 f4       	brcc	.+34     	; 0x544 <__udivdi3+0xc0>
     522:	1f ef       	ldi	r17, 0xFF	; 255
     524:	21 16       	cp	r2, r17
     526:	31 04       	cpc	r3, r1
     528:	41 04       	cpc	r4, r1
     52a:	51 04       	cpc	r5, r1
     52c:	39 f0       	breq	.+14     	; 0x53c <__udivdi3+0xb8>
     52e:	30 f0       	brcs	.+12     	; 0x53c <__udivdi3+0xb8>
     530:	48 e0       	ldi	r20, 0x08	; 8
     532:	e4 2e       	mov	r14, r20
     534:	f1 2c       	mov	r15, r1
     536:	01 2d       	mov	r16, r1
     538:	11 2d       	mov	r17, r1
     53a:	18 c0       	rjmp	.+48     	; 0x56c <__udivdi3+0xe8>
     53c:	ee 24       	eor	r14, r14
     53e:	ff 24       	eor	r15, r15
     540:	87 01       	movw	r16, r14
     542:	14 c0       	rjmp	.+40     	; 0x56c <__udivdi3+0xe8>
     544:	20 e0       	ldi	r18, 0x00	; 0
     546:	22 16       	cp	r2, r18
     548:	20 e0       	ldi	r18, 0x00	; 0
     54a:	32 06       	cpc	r3, r18
     54c:	20 e0       	ldi	r18, 0x00	; 0
     54e:	42 06       	cpc	r4, r18
     550:	21 e0       	ldi	r18, 0x01	; 1
     552:	52 06       	cpc	r5, r18
     554:	30 f0       	brcs	.+12     	; 0x562 <__udivdi3+0xde>
     556:	38 e1       	ldi	r19, 0x18	; 24
     558:	e3 2e       	mov	r14, r19
     55a:	f1 2c       	mov	r15, r1
     55c:	01 2d       	mov	r16, r1
     55e:	11 2d       	mov	r17, r1
     560:	05 c0       	rjmp	.+10     	; 0x56c <__udivdi3+0xe8>
     562:	20 e1       	ldi	r18, 0x10	; 16
     564:	e2 2e       	mov	r14, r18
     566:	f1 2c       	mov	r15, r1
     568:	01 2d       	mov	r16, r1
     56a:	11 2d       	mov	r17, r1
     56c:	d2 01       	movw	r26, r4
     56e:	c1 01       	movw	r24, r2
     570:	0e 2c       	mov	r0, r14
     572:	04 c0       	rjmp	.+8      	; 0x57c <__udivdi3+0xf8>
     574:	b6 95       	lsr	r27
     576:	a7 95       	ror	r26
     578:	97 95       	ror	r25
     57a:	87 95       	ror	r24
     57c:	0a 94       	dec	r0
     57e:	d2 f7       	brpl	.-12     	; 0x574 <__udivdi3+0xf0>
     580:	80 5a       	subi	r24, 0xA0	; 160
     582:	9f 4f       	sbci	r25, 0xFF	; 255
     584:	dc 01       	movw	r26, r24
     586:	2c 91       	ld	r18, X
     588:	80 e2       	ldi	r24, 0x20	; 32
     58a:	90 e0       	ldi	r25, 0x00	; 0
     58c:	a0 e0       	ldi	r26, 0x00	; 0
     58e:	b0 e0       	ldi	r27, 0x00	; 0
     590:	8e 19       	sub	r24, r14
     592:	9f 09       	sbc	r25, r15
     594:	a0 0b       	sbc	r26, r16
     596:	b1 0b       	sbc	r27, r17
     598:	7c 01       	movw	r14, r24
     59a:	8d 01       	movw	r16, r26
     59c:	e2 1a       	sub	r14, r18
     59e:	f1 08       	sbc	r15, r1
     5a0:	01 09       	sbc	r16, r1
     5a2:	11 09       	sbc	r17, r1
     5a4:	e1 14       	cp	r14, r1
     5a6:	f1 04       	cpc	r15, r1
     5a8:	01 05       	cpc	r16, r1
     5aa:	11 05       	cpc	r17, r1
     5ac:	a1 f1       	breq	.+104    	; 0x616 <__udivdi3+0x192>
     5ae:	0e 2c       	mov	r0, r14
     5b0:	04 c0       	rjmp	.+8      	; 0x5ba <__udivdi3+0x136>
     5b2:	22 0c       	add	r2, r2
     5b4:	33 1c       	adc	r3, r3
     5b6:	44 1c       	adc	r4, r4
     5b8:	55 1c       	adc	r5, r5
     5ba:	0a 94       	dec	r0
     5bc:	d2 f7       	brpl	.-12     	; 0x5b2 <__udivdi3+0x12e>
     5be:	a4 01       	movw	r20, r8
     5c0:	93 01       	movw	r18, r6
     5c2:	0e 2c       	mov	r0, r14
     5c4:	04 c0       	rjmp	.+8      	; 0x5ce <__udivdi3+0x14a>
     5c6:	22 0f       	add	r18, r18
     5c8:	33 1f       	adc	r19, r19
     5ca:	44 1f       	adc	r20, r20
     5cc:	55 1f       	adc	r21, r21
     5ce:	0a 94       	dec	r0
     5d0:	d2 f7       	brpl	.-12     	; 0x5c6 <__udivdi3+0x142>
     5d2:	80 e2       	ldi	r24, 0x20	; 32
     5d4:	90 e0       	ldi	r25, 0x00	; 0
     5d6:	8e 19       	sub	r24, r14
     5d8:	9f 09       	sbc	r25, r15
     5da:	6d a4       	ldd	r6, Y+45	; 0x2d
     5dc:	7e a4       	ldd	r7, Y+46	; 0x2e
     5de:	8f a4       	ldd	r8, Y+47	; 0x2f
     5e0:	98 a8       	ldd	r9, Y+48	; 0x30
     5e2:	04 c0       	rjmp	.+8      	; 0x5ec <__udivdi3+0x168>
     5e4:	96 94       	lsr	r9
     5e6:	87 94       	ror	r8
     5e8:	77 94       	ror	r7
     5ea:	67 94       	ror	r6
     5ec:	8a 95       	dec	r24
     5ee:	d2 f7       	brpl	.-12     	; 0x5e4 <__udivdi3+0x160>
     5f0:	62 2a       	or	r6, r18
     5f2:	73 2a       	or	r7, r19
     5f4:	84 2a       	or	r8, r20
     5f6:	95 2a       	or	r9, r21
     5f8:	ad a4       	ldd	r10, Y+45	; 0x2d
     5fa:	be a4       	ldd	r11, Y+46	; 0x2e
     5fc:	cf a4       	ldd	r12, Y+47	; 0x2f
     5fe:	d8 a8       	ldd	r13, Y+48	; 0x30
     600:	04 c0       	rjmp	.+8      	; 0x60a <__udivdi3+0x186>
     602:	aa 0c       	add	r10, r10
     604:	bb 1c       	adc	r11, r11
     606:	cc 1c       	adc	r12, r12
     608:	dd 1c       	adc	r13, r13
     60a:	ea 94       	dec	r14
     60c:	d2 f7       	brpl	.-12     	; 0x602 <__udivdi3+0x17e>
     60e:	ad a6       	std	Y+45, r10	; 0x2d
     610:	be a6       	std	Y+46, r11	; 0x2e
     612:	cf a6       	std	Y+47, r12	; 0x2f
     614:	d8 aa       	std	Y+48, r13	; 0x30
     616:	62 01       	movw	r12, r4
     618:	ee 24       	eor	r14, r14
     61a:	ff 24       	eor	r15, r15
     61c:	cd aa       	std	Y+53, r12	; 0x35
     61e:	de aa       	std	Y+54, r13	; 0x36
     620:	ef aa       	std	Y+55, r14	; 0x37
     622:	f8 ae       	std	Y+56, r15	; 0x38
     624:	92 01       	movw	r18, r4
     626:	81 01       	movw	r16, r2
     628:	20 70       	andi	r18, 0x00	; 0
     62a:	30 70       	andi	r19, 0x00	; 0
     62c:	09 af       	std	Y+57, r16	; 0x39
     62e:	1a af       	std	Y+58, r17	; 0x3a
     630:	2b af       	std	Y+59, r18	; 0x3b
     632:	3c af       	std	Y+60, r19	; 0x3c
     634:	c4 01       	movw	r24, r8
     636:	b3 01       	movw	r22, r6
     638:	a7 01       	movw	r20, r14
     63a:	96 01       	movw	r18, r12
     63c:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <__udivmodsi4>
     640:	7b 01       	movw	r14, r22
     642:	8c 01       	movw	r16, r24
     644:	c4 01       	movw	r24, r8
     646:	b3 01       	movw	r22, r6
     648:	2d a9       	ldd	r18, Y+53	; 0x35
     64a:	3e a9       	ldd	r19, Y+54	; 0x36
     64c:	4f a9       	ldd	r20, Y+55	; 0x37
     64e:	58 ad       	ldd	r21, Y+56	; 0x38
     650:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <__udivmodsi4>
     654:	c9 01       	movw	r24, r18
     656:	da 01       	movw	r26, r20
     658:	3c 01       	movw	r6, r24
     65a:	4d 01       	movw	r8, r26
     65c:	c4 01       	movw	r24, r8
     65e:	b3 01       	movw	r22, r6
     660:	29 ad       	ldd	r18, Y+57	; 0x39
     662:	3a ad       	ldd	r19, Y+58	; 0x3a
     664:	4b ad       	ldd	r20, Y+59	; 0x3b
     666:	5c ad       	ldd	r21, Y+60	; 0x3c
     668:	0e 94 c5 10 	call	0x218a	; 0x218a <__mulsi3>
     66c:	9b 01       	movw	r18, r22
     66e:	ac 01       	movw	r20, r24
     670:	87 01       	movw	r16, r14
     672:	ff 24       	eor	r15, r15
     674:	ee 24       	eor	r14, r14
     676:	ad a4       	ldd	r10, Y+45	; 0x2d
     678:	be a4       	ldd	r11, Y+46	; 0x2e
     67a:	cf a4       	ldd	r12, Y+47	; 0x2f
     67c:	d8 a8       	ldd	r13, Y+48	; 0x30
     67e:	c6 01       	movw	r24, r12
     680:	aa 27       	eor	r26, r26
     682:	bb 27       	eor	r27, r27
     684:	57 01       	movw	r10, r14
     686:	68 01       	movw	r12, r16
     688:	a8 2a       	or	r10, r24
     68a:	b9 2a       	or	r11, r25
     68c:	ca 2a       	or	r12, r26
     68e:	db 2a       	or	r13, r27
     690:	a2 16       	cp	r10, r18
     692:	b3 06       	cpc	r11, r19
     694:	c4 06       	cpc	r12, r20
     696:	d5 06       	cpc	r13, r21
     698:	e0 f4       	brcc	.+56     	; 0x6d2 <__udivdi3+0x24e>
     69a:	08 94       	sec
     69c:	61 08       	sbc	r6, r1
     69e:	71 08       	sbc	r7, r1
     6a0:	81 08       	sbc	r8, r1
     6a2:	91 08       	sbc	r9, r1
     6a4:	a2 0c       	add	r10, r2
     6a6:	b3 1c       	adc	r11, r3
     6a8:	c4 1c       	adc	r12, r4
     6aa:	d5 1c       	adc	r13, r5
     6ac:	a2 14       	cp	r10, r2
     6ae:	b3 04       	cpc	r11, r3
     6b0:	c4 04       	cpc	r12, r4
     6b2:	d5 04       	cpc	r13, r5
     6b4:	70 f0       	brcs	.+28     	; 0x6d2 <__udivdi3+0x24e>
     6b6:	a2 16       	cp	r10, r18
     6b8:	b3 06       	cpc	r11, r19
     6ba:	c4 06       	cpc	r12, r20
     6bc:	d5 06       	cpc	r13, r21
     6be:	48 f4       	brcc	.+18     	; 0x6d2 <__udivdi3+0x24e>
     6c0:	08 94       	sec
     6c2:	61 08       	sbc	r6, r1
     6c4:	71 08       	sbc	r7, r1
     6c6:	81 08       	sbc	r8, r1
     6c8:	91 08       	sbc	r9, r1
     6ca:	a2 0c       	add	r10, r2
     6cc:	b3 1c       	adc	r11, r3
     6ce:	c4 1c       	adc	r12, r4
     6d0:	d5 1c       	adc	r13, r5
     6d2:	a2 1a       	sub	r10, r18
     6d4:	b3 0a       	sbc	r11, r19
     6d6:	c4 0a       	sbc	r12, r20
     6d8:	d5 0a       	sbc	r13, r21
     6da:	c6 01       	movw	r24, r12
     6dc:	b5 01       	movw	r22, r10
     6de:	2d a9       	ldd	r18, Y+53	; 0x35
     6e0:	3e a9       	ldd	r19, Y+54	; 0x36
     6e2:	4f a9       	ldd	r20, Y+55	; 0x37
     6e4:	58 ad       	ldd	r21, Y+56	; 0x38
     6e6:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <__udivmodsi4>
     6ea:	7b 01       	movw	r14, r22
     6ec:	8c 01       	movw	r16, r24
     6ee:	c6 01       	movw	r24, r12
     6f0:	b5 01       	movw	r22, r10
     6f2:	2d a9       	ldd	r18, Y+53	; 0x35
     6f4:	3e a9       	ldd	r19, Y+54	; 0x36
     6f6:	4f a9       	ldd	r20, Y+55	; 0x37
     6f8:	58 ad       	ldd	r21, Y+56	; 0x38
     6fa:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <__udivmodsi4>
     6fe:	c9 01       	movw	r24, r18
     700:	da 01       	movw	r26, r20
     702:	5c 01       	movw	r10, r24
     704:	6d 01       	movw	r12, r26
     706:	c6 01       	movw	r24, r12
     708:	b5 01       	movw	r22, r10
     70a:	29 ad       	ldd	r18, Y+57	; 0x39
     70c:	3a ad       	ldd	r19, Y+58	; 0x3a
     70e:	4b ad       	ldd	r20, Y+59	; 0x3b
     710:	5c ad       	ldd	r21, Y+60	; 0x3c
     712:	0e 94 c5 10 	call	0x218a	; 0x218a <__mulsi3>
     716:	9b 01       	movw	r18, r22
     718:	ac 01       	movw	r20, r24
     71a:	87 01       	movw	r16, r14
     71c:	ff 24       	eor	r15, r15
     71e:	ee 24       	eor	r14, r14
     720:	8d a5       	ldd	r24, Y+45	; 0x2d
     722:	9e a5       	ldd	r25, Y+46	; 0x2e
     724:	af a5       	ldd	r26, Y+47	; 0x2f
     726:	b8 a9       	ldd	r27, Y+48	; 0x30
     728:	a0 70       	andi	r26, 0x00	; 0
     72a:	b0 70       	andi	r27, 0x00	; 0
     72c:	e8 2a       	or	r14, r24
     72e:	f9 2a       	or	r15, r25
     730:	0a 2b       	or	r16, r26
     732:	1b 2b       	or	r17, r27
     734:	e2 16       	cp	r14, r18
     736:	f3 06       	cpc	r15, r19
     738:	04 07       	cpc	r16, r20
     73a:	15 07       	cpc	r17, r21
     73c:	c0 f4       	brcc	.+48     	; 0x76e <__udivdi3+0x2ea>
     73e:	08 94       	sec
     740:	a1 08       	sbc	r10, r1
     742:	b1 08       	sbc	r11, r1
     744:	c1 08       	sbc	r12, r1
     746:	d1 08       	sbc	r13, r1
     748:	e2 0c       	add	r14, r2
     74a:	f3 1c       	adc	r15, r3
     74c:	04 1d       	adc	r16, r4
     74e:	15 1d       	adc	r17, r5
     750:	e2 14       	cp	r14, r2
     752:	f3 04       	cpc	r15, r3
     754:	04 05       	cpc	r16, r4
     756:	15 05       	cpc	r17, r5
     758:	50 f0       	brcs	.+20     	; 0x76e <__udivdi3+0x2ea>
     75a:	e2 16       	cp	r14, r18
     75c:	f3 06       	cpc	r15, r19
     75e:	04 07       	cpc	r16, r20
     760:	15 07       	cpc	r17, r21
     762:	28 f4       	brcc	.+10     	; 0x76e <__udivdi3+0x2ea>
     764:	08 94       	sec
     766:	a1 08       	sbc	r10, r1
     768:	b1 08       	sbc	r11, r1
     76a:	c1 08       	sbc	r12, r1
     76c:	d1 08       	sbc	r13, r1
     76e:	d3 01       	movw	r26, r6
     770:	99 27       	eor	r25, r25
     772:	88 27       	eor	r24, r24
     774:	86 01       	movw	r16, r12
     776:	75 01       	movw	r14, r10
     778:	e8 2a       	or	r14, r24
     77a:	f9 2a       	or	r15, r25
     77c:	0a 2b       	or	r16, r26
     77e:	1b 2b       	or	r17, r27
     780:	e9 aa       	std	Y+49, r14	; 0x31
     782:	fa aa       	std	Y+50, r15	; 0x32
     784:	0b ab       	std	Y+51, r16	; 0x33
     786:	1c ab       	std	Y+52, r17	; 0x34
     788:	cf c4       	rjmp	.+2462   	; 0x1128 <__stack+0x8c9>
     78a:	21 14       	cp	r2, r1
     78c:	31 04       	cpc	r3, r1
     78e:	41 04       	cpc	r4, r1
     790:	51 04       	cpc	r5, r1
     792:	71 f4       	brne	.+28     	; 0x7b0 <__udivdi3+0x32c>
     794:	61 e0       	ldi	r22, 0x01	; 1
     796:	70 e0       	ldi	r23, 0x00	; 0
     798:	80 e0       	ldi	r24, 0x00	; 0
     79a:	90 e0       	ldi	r25, 0x00	; 0
     79c:	20 e0       	ldi	r18, 0x00	; 0
     79e:	30 e0       	ldi	r19, 0x00	; 0
     7a0:	40 e0       	ldi	r20, 0x00	; 0
     7a2:	50 e0       	ldi	r21, 0x00	; 0
     7a4:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <__udivmodsi4>
     7a8:	c9 01       	movw	r24, r18
     7aa:	da 01       	movw	r26, r20
     7ac:	1c 01       	movw	r2, r24
     7ae:	2d 01       	movw	r4, r26
     7b0:	00 e0       	ldi	r16, 0x00	; 0
     7b2:	20 16       	cp	r2, r16
     7b4:	00 e0       	ldi	r16, 0x00	; 0
     7b6:	30 06       	cpc	r3, r16
     7b8:	01 e0       	ldi	r16, 0x01	; 1
     7ba:	40 06       	cpc	r4, r16
     7bc:	00 e0       	ldi	r16, 0x00	; 0
     7be:	50 06       	cpc	r5, r16
     7c0:	88 f4       	brcc	.+34     	; 0x7e4 <__udivdi3+0x360>
     7c2:	1f ef       	ldi	r17, 0xFF	; 255
     7c4:	21 16       	cp	r2, r17
     7c6:	31 04       	cpc	r3, r1
     7c8:	41 04       	cpc	r4, r1
     7ca:	51 04       	cpc	r5, r1
     7cc:	31 f0       	breq	.+12     	; 0x7da <__udivdi3+0x356>
     7ce:	28 f0       	brcs	.+10     	; 0x7da <__udivdi3+0x356>
     7d0:	48 e0       	ldi	r20, 0x08	; 8
     7d2:	50 e0       	ldi	r21, 0x00	; 0
     7d4:	60 e0       	ldi	r22, 0x00	; 0
     7d6:	70 e0       	ldi	r23, 0x00	; 0
     7d8:	17 c0       	rjmp	.+46     	; 0x808 <__udivdi3+0x384>
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e0       	ldi	r21, 0x00	; 0
     7de:	60 e0       	ldi	r22, 0x00	; 0
     7e0:	70 e0       	ldi	r23, 0x00	; 0
     7e2:	12 c0       	rjmp	.+36     	; 0x808 <__udivdi3+0x384>
     7e4:	20 e0       	ldi	r18, 0x00	; 0
     7e6:	22 16       	cp	r2, r18
     7e8:	20 e0       	ldi	r18, 0x00	; 0
     7ea:	32 06       	cpc	r3, r18
     7ec:	20 e0       	ldi	r18, 0x00	; 0
     7ee:	42 06       	cpc	r4, r18
     7f0:	21 e0       	ldi	r18, 0x01	; 1
     7f2:	52 06       	cpc	r5, r18
     7f4:	28 f0       	brcs	.+10     	; 0x800 <__udivdi3+0x37c>
     7f6:	48 e1       	ldi	r20, 0x18	; 24
     7f8:	50 e0       	ldi	r21, 0x00	; 0
     7fa:	60 e0       	ldi	r22, 0x00	; 0
     7fc:	70 e0       	ldi	r23, 0x00	; 0
     7fe:	04 c0       	rjmp	.+8      	; 0x808 <__udivdi3+0x384>
     800:	40 e1       	ldi	r20, 0x10	; 16
     802:	50 e0       	ldi	r21, 0x00	; 0
     804:	60 e0       	ldi	r22, 0x00	; 0
     806:	70 e0       	ldi	r23, 0x00	; 0
     808:	d2 01       	movw	r26, r4
     80a:	c1 01       	movw	r24, r2
     80c:	04 2e       	mov	r0, r20
     80e:	04 c0       	rjmp	.+8      	; 0x818 <__udivdi3+0x394>
     810:	b6 95       	lsr	r27
     812:	a7 95       	ror	r26
     814:	97 95       	ror	r25
     816:	87 95       	ror	r24
     818:	0a 94       	dec	r0
     81a:	d2 f7       	brpl	.-12     	; 0x810 <__udivdi3+0x38c>
     81c:	80 5a       	subi	r24, 0xA0	; 160
     81e:	9f 4f       	sbci	r25, 0xFF	; 255
     820:	dc 01       	movw	r26, r24
     822:	2c 91       	ld	r18, X
     824:	e0 e2       	ldi	r30, 0x20	; 32
     826:	ee 2e       	mov	r14, r30
     828:	f1 2c       	mov	r15, r1
     82a:	01 2d       	mov	r16, r1
     82c:	11 2d       	mov	r17, r1
     82e:	d8 01       	movw	r26, r16
     830:	c7 01       	movw	r24, r14
     832:	84 1b       	sub	r24, r20
     834:	95 0b       	sbc	r25, r21
     836:	a6 0b       	sbc	r26, r22
     838:	b7 0b       	sbc	r27, r23
     83a:	82 1b       	sub	r24, r18
     83c:	91 09       	sbc	r25, r1
     83e:	a1 09       	sbc	r26, r1
     840:	b1 09       	sbc	r27, r1
     842:	00 97       	sbiw	r24, 0x00	; 0
     844:	a1 05       	cpc	r26, r1
     846:	b1 05       	cpc	r27, r1
     848:	61 f4       	brne	.+24     	; 0x862 <__stack+0x3>
     84a:	64 01       	movw	r12, r8
     84c:	53 01       	movw	r10, r6
     84e:	a2 18       	sub	r10, r2
     850:	b3 08       	sbc	r11, r3
     852:	c4 08       	sbc	r12, r4
     854:	d5 08       	sbc	r13, r5
     856:	31 e0       	ldi	r19, 0x01	; 1
     858:	63 2e       	mov	r6, r19
     85a:	71 2c       	mov	r7, r1
     85c:	81 2c       	mov	r8, r1
     85e:	91 2c       	mov	r9, r1
     860:	1e c1       	rjmp	.+572    	; 0xa9e <__stack+0x23f>
     862:	6f 96       	adiw	r28, 0x1f	; 31
     864:	8f af       	std	Y+63, r24	; 0x3f
     866:	6f 97       	sbiw	r28, 0x1f	; 31
     868:	08 2e       	mov	r0, r24
     86a:	04 c0       	rjmp	.+8      	; 0x874 <__stack+0x15>
     86c:	22 0c       	add	r2, r2
     86e:	33 1c       	adc	r3, r3
     870:	44 1c       	adc	r4, r4
     872:	55 1c       	adc	r5, r5
     874:	0a 94       	dec	r0
     876:	d2 f7       	brpl	.-12     	; 0x86c <__stack+0xd>
     878:	ee 2d       	mov	r30, r14
     87a:	e8 1b       	sub	r30, r24
     87c:	64 01       	movw	r12, r8
     87e:	53 01       	movw	r10, r6
     880:	0e 2e       	mov	r0, r30
     882:	04 c0       	rjmp	.+8      	; 0x88c <__stack+0x2d>
     884:	d6 94       	lsr	r13
     886:	c7 94       	ror	r12
     888:	b7 94       	ror	r11
     88a:	a7 94       	ror	r10
     88c:	0a 94       	dec	r0
     88e:	d2 f7       	brpl	.-12     	; 0x884 <__stack+0x25>
     890:	a4 01       	movw	r20, r8
     892:	93 01       	movw	r18, r6
     894:	6f 96       	adiw	r28, 0x1f	; 31
     896:	0f ac       	ldd	r0, Y+63	; 0x3f
     898:	6f 97       	sbiw	r28, 0x1f	; 31
     89a:	04 c0       	rjmp	.+8      	; 0x8a4 <__stack+0x45>
     89c:	22 0f       	add	r18, r18
     89e:	33 1f       	adc	r19, r19
     8a0:	44 1f       	adc	r20, r20
     8a2:	55 1f       	adc	r21, r21
     8a4:	0a 94       	dec	r0
     8a6:	d2 f7       	brpl	.-12     	; 0x89c <__stack+0x3d>
     8a8:	6d a4       	ldd	r6, Y+45	; 0x2d
     8aa:	7e a4       	ldd	r7, Y+46	; 0x2e
     8ac:	8f a4       	ldd	r8, Y+47	; 0x2f
     8ae:	98 a8       	ldd	r9, Y+48	; 0x30
     8b0:	0e 2e       	mov	r0, r30
     8b2:	04 c0       	rjmp	.+8      	; 0x8bc <__stack+0x5d>
     8b4:	96 94       	lsr	r9
     8b6:	87 94       	ror	r8
     8b8:	77 94       	ror	r7
     8ba:	67 94       	ror	r6
     8bc:	0a 94       	dec	r0
     8be:	d2 f7       	brpl	.-12     	; 0x8b4 <__stack+0x55>
     8c0:	84 01       	movw	r16, r8
     8c2:	73 01       	movw	r14, r6
     8c4:	e2 2a       	or	r14, r18
     8c6:	f3 2a       	or	r15, r19
     8c8:	04 2b       	or	r16, r20
     8ca:	15 2b       	or	r17, r21
     8cc:	e9 a6       	std	Y+41, r14	; 0x29
     8ce:	fa a6       	std	Y+42, r15	; 0x2a
     8d0:	0b a7       	std	Y+43, r16	; 0x2b
     8d2:	1c a7       	std	Y+44, r17	; 0x2c
     8d4:	32 01       	movw	r6, r4
     8d6:	88 24       	eor	r8, r8
     8d8:	99 24       	eor	r9, r9
     8da:	92 01       	movw	r18, r4
     8dc:	81 01       	movw	r16, r2
     8de:	20 70       	andi	r18, 0x00	; 0
     8e0:	30 70       	andi	r19, 0x00	; 0
     8e2:	21 96       	adiw	r28, 0x01	; 1
     8e4:	0c af       	std	Y+60, r16	; 0x3c
     8e6:	1d af       	std	Y+61, r17	; 0x3d
     8e8:	2e af       	std	Y+62, r18	; 0x3e
     8ea:	3f af       	std	Y+63, r19	; 0x3f
     8ec:	21 97       	sbiw	r28, 0x01	; 1
     8ee:	c6 01       	movw	r24, r12
     8f0:	b5 01       	movw	r22, r10
     8f2:	a4 01       	movw	r20, r8
     8f4:	93 01       	movw	r18, r6
     8f6:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <__udivmodsi4>
     8fa:	7b 01       	movw	r14, r22
     8fc:	8c 01       	movw	r16, r24
     8fe:	c6 01       	movw	r24, r12
     900:	b5 01       	movw	r22, r10
     902:	a4 01       	movw	r20, r8
     904:	93 01       	movw	r18, r6
     906:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <__udivmodsi4>
     90a:	c9 01       	movw	r24, r18
     90c:	da 01       	movw	r26, r20
     90e:	25 96       	adiw	r28, 0x05	; 5
     910:	8c af       	std	Y+60, r24	; 0x3c
     912:	9d af       	std	Y+61, r25	; 0x3d
     914:	ae af       	std	Y+62, r26	; 0x3e
     916:	bf af       	std	Y+63, r27	; 0x3f
     918:	25 97       	sbiw	r28, 0x05	; 5
     91a:	bc 01       	movw	r22, r24
     91c:	cd 01       	movw	r24, r26
     91e:	21 96       	adiw	r28, 0x01	; 1
     920:	2c ad       	ldd	r18, Y+60	; 0x3c
     922:	3d ad       	ldd	r19, Y+61	; 0x3d
     924:	4e ad       	ldd	r20, Y+62	; 0x3e
     926:	5f ad       	ldd	r21, Y+63	; 0x3f
     928:	21 97       	sbiw	r28, 0x01	; 1
     92a:	0e 94 c5 10 	call	0x218a	; 0x218a <__mulsi3>
     92e:	9b 01       	movw	r18, r22
     930:	ac 01       	movw	r20, r24
     932:	87 01       	movw	r16, r14
     934:	ff 24       	eor	r15, r15
     936:	ee 24       	eor	r14, r14
     938:	a9 a4       	ldd	r10, Y+41	; 0x29
     93a:	ba a4       	ldd	r11, Y+42	; 0x2a
     93c:	cb a4       	ldd	r12, Y+43	; 0x2b
     93e:	dc a4       	ldd	r13, Y+44	; 0x2c
     940:	c6 01       	movw	r24, r12
     942:	aa 27       	eor	r26, r26
     944:	bb 27       	eor	r27, r27
     946:	5c 01       	movw	r10, r24
     948:	6d 01       	movw	r12, r26
     94a:	ae 28       	or	r10, r14
     94c:	bf 28       	or	r11, r15
     94e:	c0 2a       	or	r12, r16
     950:	d1 2a       	or	r13, r17
     952:	a2 16       	cp	r10, r18
     954:	b3 06       	cpc	r11, r19
     956:	c4 06       	cpc	r12, r20
     958:	d5 06       	cpc	r13, r21
     95a:	60 f5       	brcc	.+88     	; 0x9b4 <__stack+0x155>
     95c:	25 96       	adiw	r28, 0x05	; 5
     95e:	6c ad       	ldd	r22, Y+60	; 0x3c
     960:	7d ad       	ldd	r23, Y+61	; 0x3d
     962:	8e ad       	ldd	r24, Y+62	; 0x3e
     964:	9f ad       	ldd	r25, Y+63	; 0x3f
     966:	25 97       	sbiw	r28, 0x05	; 5
     968:	61 50       	subi	r22, 0x01	; 1
     96a:	70 40       	sbci	r23, 0x00	; 0
     96c:	80 40       	sbci	r24, 0x00	; 0
     96e:	90 40       	sbci	r25, 0x00	; 0
     970:	25 96       	adiw	r28, 0x05	; 5
     972:	6c af       	std	Y+60, r22	; 0x3c
     974:	7d af       	std	Y+61, r23	; 0x3d
     976:	8e af       	std	Y+62, r24	; 0x3e
     978:	9f af       	std	Y+63, r25	; 0x3f
     97a:	25 97       	sbiw	r28, 0x05	; 5
     97c:	a2 0c       	add	r10, r2
     97e:	b3 1c       	adc	r11, r3
     980:	c4 1c       	adc	r12, r4
     982:	d5 1c       	adc	r13, r5
     984:	a2 14       	cp	r10, r2
     986:	b3 04       	cpc	r11, r3
     988:	c4 04       	cpc	r12, r4
     98a:	d5 04       	cpc	r13, r5
     98c:	98 f0       	brcs	.+38     	; 0x9b4 <__stack+0x155>
     98e:	a2 16       	cp	r10, r18
     990:	b3 06       	cpc	r11, r19
     992:	c4 06       	cpc	r12, r20
     994:	d5 06       	cpc	r13, r21
     996:	70 f4       	brcc	.+28     	; 0x9b4 <__stack+0x155>
     998:	61 50       	subi	r22, 0x01	; 1
     99a:	70 40       	sbci	r23, 0x00	; 0
     99c:	80 40       	sbci	r24, 0x00	; 0
     99e:	90 40       	sbci	r25, 0x00	; 0
     9a0:	25 96       	adiw	r28, 0x05	; 5
     9a2:	6c af       	std	Y+60, r22	; 0x3c
     9a4:	7d af       	std	Y+61, r23	; 0x3d
     9a6:	8e af       	std	Y+62, r24	; 0x3e
     9a8:	9f af       	std	Y+63, r25	; 0x3f
     9aa:	25 97       	sbiw	r28, 0x05	; 5
     9ac:	a2 0c       	add	r10, r2
     9ae:	b3 1c       	adc	r11, r3
     9b0:	c4 1c       	adc	r12, r4
     9b2:	d5 1c       	adc	r13, r5
     9b4:	a2 1a       	sub	r10, r18
     9b6:	b3 0a       	sbc	r11, r19
     9b8:	c4 0a       	sbc	r12, r20
     9ba:	d5 0a       	sbc	r13, r21
     9bc:	c6 01       	movw	r24, r12
     9be:	b5 01       	movw	r22, r10
     9c0:	a4 01       	movw	r20, r8
     9c2:	93 01       	movw	r18, r6
     9c4:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <__udivmodsi4>
     9c8:	7b 01       	movw	r14, r22
     9ca:	8c 01       	movw	r16, r24
     9cc:	c6 01       	movw	r24, r12
     9ce:	b5 01       	movw	r22, r10
     9d0:	a4 01       	movw	r20, r8
     9d2:	93 01       	movw	r18, r6
     9d4:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <__udivmodsi4>
     9d8:	c9 01       	movw	r24, r18
     9da:	da 01       	movw	r26, r20
     9dc:	3c 01       	movw	r6, r24
     9de:	4d 01       	movw	r8, r26
     9e0:	c4 01       	movw	r24, r8
     9e2:	b3 01       	movw	r22, r6
     9e4:	21 96       	adiw	r28, 0x01	; 1
     9e6:	2c ad       	ldd	r18, Y+60	; 0x3c
     9e8:	3d ad       	ldd	r19, Y+61	; 0x3d
     9ea:	4e ad       	ldd	r20, Y+62	; 0x3e
     9ec:	5f ad       	ldd	r21, Y+63	; 0x3f
     9ee:	21 97       	sbiw	r28, 0x01	; 1
     9f0:	0e 94 c5 10 	call	0x218a	; 0x218a <__mulsi3>
     9f4:	9b 01       	movw	r18, r22
     9f6:	ac 01       	movw	r20, r24
     9f8:	87 01       	movw	r16, r14
     9fa:	ff 24       	eor	r15, r15
     9fc:	ee 24       	eor	r14, r14
     9fe:	89 a5       	ldd	r24, Y+41	; 0x29
     a00:	9a a5       	ldd	r25, Y+42	; 0x2a
     a02:	ab a5       	ldd	r26, Y+43	; 0x2b
     a04:	bc a5       	ldd	r27, Y+44	; 0x2c
     a06:	a0 70       	andi	r26, 0x00	; 0
     a08:	b0 70       	andi	r27, 0x00	; 0
     a0a:	57 01       	movw	r10, r14
     a0c:	68 01       	movw	r12, r16
     a0e:	a8 2a       	or	r10, r24
     a10:	b9 2a       	or	r11, r25
     a12:	ca 2a       	or	r12, r26
     a14:	db 2a       	or	r13, r27
     a16:	a2 16       	cp	r10, r18
     a18:	b3 06       	cpc	r11, r19
     a1a:	c4 06       	cpc	r12, r20
     a1c:	d5 06       	cpc	r13, r21
     a1e:	e0 f4       	brcc	.+56     	; 0xa58 <__stack+0x1f9>
     a20:	08 94       	sec
     a22:	61 08       	sbc	r6, r1
     a24:	71 08       	sbc	r7, r1
     a26:	81 08       	sbc	r8, r1
     a28:	91 08       	sbc	r9, r1
     a2a:	a2 0c       	add	r10, r2
     a2c:	b3 1c       	adc	r11, r3
     a2e:	c4 1c       	adc	r12, r4
     a30:	d5 1c       	adc	r13, r5
     a32:	a2 14       	cp	r10, r2
     a34:	b3 04       	cpc	r11, r3
     a36:	c4 04       	cpc	r12, r4
     a38:	d5 04       	cpc	r13, r5
     a3a:	70 f0       	brcs	.+28     	; 0xa58 <__stack+0x1f9>
     a3c:	a2 16       	cp	r10, r18
     a3e:	b3 06       	cpc	r11, r19
     a40:	c4 06       	cpc	r12, r20
     a42:	d5 06       	cpc	r13, r21
     a44:	48 f4       	brcc	.+18     	; 0xa58 <__stack+0x1f9>
     a46:	08 94       	sec
     a48:	61 08       	sbc	r6, r1
     a4a:	71 08       	sbc	r7, r1
     a4c:	81 08       	sbc	r8, r1
     a4e:	91 08       	sbc	r9, r1
     a50:	a2 0c       	add	r10, r2
     a52:	b3 1c       	adc	r11, r3
     a54:	c4 1c       	adc	r12, r4
     a56:	d5 1c       	adc	r13, r5
     a58:	8d a5       	ldd	r24, Y+45	; 0x2d
     a5a:	9e a5       	ldd	r25, Y+46	; 0x2e
     a5c:	af a5       	ldd	r26, Y+47	; 0x2f
     a5e:	b8 a9       	ldd	r27, Y+48	; 0x30
     a60:	6f 96       	adiw	r28, 0x1f	; 31
     a62:	0f ac       	ldd	r0, Y+63	; 0x3f
     a64:	6f 97       	sbiw	r28, 0x1f	; 31
     a66:	04 c0       	rjmp	.+8      	; 0xa70 <__stack+0x211>
     a68:	88 0f       	add	r24, r24
     a6a:	99 1f       	adc	r25, r25
     a6c:	aa 1f       	adc	r26, r26
     a6e:	bb 1f       	adc	r27, r27
     a70:	0a 94       	dec	r0
     a72:	d2 f7       	brpl	.-12     	; 0xa68 <__stack+0x209>
     a74:	8d a7       	std	Y+45, r24	; 0x2d
     a76:	9e a7       	std	Y+46, r25	; 0x2e
     a78:	af a7       	std	Y+47, r26	; 0x2f
     a7a:	b8 ab       	std	Y+48, r27	; 0x30
     a7c:	a2 1a       	sub	r10, r18
     a7e:	b3 0a       	sbc	r11, r19
     a80:	c4 0a       	sbc	r12, r20
     a82:	d5 0a       	sbc	r13, r21
     a84:	25 96       	adiw	r28, 0x05	; 5
     a86:	ec ac       	ldd	r14, Y+60	; 0x3c
     a88:	fd ac       	ldd	r15, Y+61	; 0x3d
     a8a:	0e ad       	ldd	r16, Y+62	; 0x3e
     a8c:	1f ad       	ldd	r17, Y+63	; 0x3f
     a8e:	25 97       	sbiw	r28, 0x05	; 5
     a90:	d7 01       	movw	r26, r14
     a92:	99 27       	eor	r25, r25
     a94:	88 27       	eor	r24, r24
     a96:	68 2a       	or	r6, r24
     a98:	79 2a       	or	r7, r25
     a9a:	8a 2a       	or	r8, r26
     a9c:	9b 2a       	or	r9, r27
     a9e:	82 01       	movw	r16, r4
     aa0:	22 27       	eor	r18, r18
     aa2:	33 27       	eor	r19, r19
     aa4:	29 96       	adiw	r28, 0x09	; 9
     aa6:	0c af       	std	Y+60, r16	; 0x3c
     aa8:	1d af       	std	Y+61, r17	; 0x3d
     aaa:	2e af       	std	Y+62, r18	; 0x3e
     aac:	3f af       	std	Y+63, r19	; 0x3f
     aae:	29 97       	sbiw	r28, 0x09	; 9
     ab0:	a2 01       	movw	r20, r4
     ab2:	91 01       	movw	r18, r2
     ab4:	40 70       	andi	r20, 0x00	; 0
     ab6:	50 70       	andi	r21, 0x00	; 0
     ab8:	2d 96       	adiw	r28, 0x0d	; 13
     aba:	2c af       	std	Y+60, r18	; 0x3c
     abc:	3d af       	std	Y+61, r19	; 0x3d
     abe:	4e af       	std	Y+62, r20	; 0x3e
     ac0:	5f af       	std	Y+63, r21	; 0x3f
     ac2:	2d 97       	sbiw	r28, 0x0d	; 13
     ac4:	c6 01       	movw	r24, r12
     ac6:	b5 01       	movw	r22, r10
     ac8:	29 96       	adiw	r28, 0x09	; 9
     aca:	2c ad       	ldd	r18, Y+60	; 0x3c
     acc:	3d ad       	ldd	r19, Y+61	; 0x3d
     ace:	4e ad       	ldd	r20, Y+62	; 0x3e
     ad0:	5f ad       	ldd	r21, Y+63	; 0x3f
     ad2:	29 97       	sbiw	r28, 0x09	; 9
     ad4:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <__udivmodsi4>
     ad8:	7b 01       	movw	r14, r22
     ada:	8c 01       	movw	r16, r24
     adc:	c6 01       	movw	r24, r12
     ade:	b5 01       	movw	r22, r10
     ae0:	29 96       	adiw	r28, 0x09	; 9
     ae2:	2c ad       	ldd	r18, Y+60	; 0x3c
     ae4:	3d ad       	ldd	r19, Y+61	; 0x3d
     ae6:	4e ad       	ldd	r20, Y+62	; 0x3e
     ae8:	5f ad       	ldd	r21, Y+63	; 0x3f
     aea:	29 97       	sbiw	r28, 0x09	; 9
     aec:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <__udivmodsi4>
     af0:	c9 01       	movw	r24, r18
     af2:	da 01       	movw	r26, r20
     af4:	61 96       	adiw	r28, 0x11	; 17
     af6:	8c af       	std	Y+60, r24	; 0x3c
     af8:	9d af       	std	Y+61, r25	; 0x3d
     afa:	ae af       	std	Y+62, r26	; 0x3e
     afc:	bf af       	std	Y+63, r27	; 0x3f
     afe:	61 97       	sbiw	r28, 0x11	; 17
     b00:	bc 01       	movw	r22, r24
     b02:	cd 01       	movw	r24, r26
     b04:	2d 96       	adiw	r28, 0x0d	; 13
     b06:	2c ad       	ldd	r18, Y+60	; 0x3c
     b08:	3d ad       	ldd	r19, Y+61	; 0x3d
     b0a:	4e ad       	ldd	r20, Y+62	; 0x3e
     b0c:	5f ad       	ldd	r21, Y+63	; 0x3f
     b0e:	2d 97       	sbiw	r28, 0x0d	; 13
     b10:	0e 94 c5 10 	call	0x218a	; 0x218a <__mulsi3>
     b14:	9b 01       	movw	r18, r22
     b16:	ac 01       	movw	r20, r24
     b18:	87 01       	movw	r16, r14
     b1a:	ff 24       	eor	r15, r15
     b1c:	ee 24       	eor	r14, r14
     b1e:	ad a4       	ldd	r10, Y+45	; 0x2d
     b20:	be a4       	ldd	r11, Y+46	; 0x2e
     b22:	cf a4       	ldd	r12, Y+47	; 0x2f
     b24:	d8 a8       	ldd	r13, Y+48	; 0x30
     b26:	c6 01       	movw	r24, r12
     b28:	aa 27       	eor	r26, r26
     b2a:	bb 27       	eor	r27, r27
     b2c:	57 01       	movw	r10, r14
     b2e:	68 01       	movw	r12, r16
     b30:	a8 2a       	or	r10, r24
     b32:	b9 2a       	or	r11, r25
     b34:	ca 2a       	or	r12, r26
     b36:	db 2a       	or	r13, r27
     b38:	a2 16       	cp	r10, r18
     b3a:	b3 06       	cpc	r11, r19
     b3c:	c4 06       	cpc	r12, r20
     b3e:	d5 06       	cpc	r13, r21
     b40:	60 f5       	brcc	.+88     	; 0xb9a <__stack+0x33b>
     b42:	61 96       	adiw	r28, 0x11	; 17
     b44:	6c ad       	ldd	r22, Y+60	; 0x3c
     b46:	7d ad       	ldd	r23, Y+61	; 0x3d
     b48:	8e ad       	ldd	r24, Y+62	; 0x3e
     b4a:	9f ad       	ldd	r25, Y+63	; 0x3f
     b4c:	61 97       	sbiw	r28, 0x11	; 17
     b4e:	61 50       	subi	r22, 0x01	; 1
     b50:	70 40       	sbci	r23, 0x00	; 0
     b52:	80 40       	sbci	r24, 0x00	; 0
     b54:	90 40       	sbci	r25, 0x00	; 0
     b56:	61 96       	adiw	r28, 0x11	; 17
     b58:	6c af       	std	Y+60, r22	; 0x3c
     b5a:	7d af       	std	Y+61, r23	; 0x3d
     b5c:	8e af       	std	Y+62, r24	; 0x3e
     b5e:	9f af       	std	Y+63, r25	; 0x3f
     b60:	61 97       	sbiw	r28, 0x11	; 17
     b62:	a2 0c       	add	r10, r2
     b64:	b3 1c       	adc	r11, r3
     b66:	c4 1c       	adc	r12, r4
     b68:	d5 1c       	adc	r13, r5
     b6a:	a2 14       	cp	r10, r2
     b6c:	b3 04       	cpc	r11, r3
     b6e:	c4 04       	cpc	r12, r4
     b70:	d5 04       	cpc	r13, r5
     b72:	98 f0       	brcs	.+38     	; 0xb9a <__stack+0x33b>
     b74:	a2 16       	cp	r10, r18
     b76:	b3 06       	cpc	r11, r19
     b78:	c4 06       	cpc	r12, r20
     b7a:	d5 06       	cpc	r13, r21
     b7c:	70 f4       	brcc	.+28     	; 0xb9a <__stack+0x33b>
     b7e:	61 50       	subi	r22, 0x01	; 1
     b80:	70 40       	sbci	r23, 0x00	; 0
     b82:	80 40       	sbci	r24, 0x00	; 0
     b84:	90 40       	sbci	r25, 0x00	; 0
     b86:	61 96       	adiw	r28, 0x11	; 17
     b88:	6c af       	std	Y+60, r22	; 0x3c
     b8a:	7d af       	std	Y+61, r23	; 0x3d
     b8c:	8e af       	std	Y+62, r24	; 0x3e
     b8e:	9f af       	std	Y+63, r25	; 0x3f
     b90:	61 97       	sbiw	r28, 0x11	; 17
     b92:	a2 0c       	add	r10, r2
     b94:	b3 1c       	adc	r11, r3
     b96:	c4 1c       	adc	r12, r4
     b98:	d5 1c       	adc	r13, r5
     b9a:	a2 1a       	sub	r10, r18
     b9c:	b3 0a       	sbc	r11, r19
     b9e:	c4 0a       	sbc	r12, r20
     ba0:	d5 0a       	sbc	r13, r21
     ba2:	c6 01       	movw	r24, r12
     ba4:	b5 01       	movw	r22, r10
     ba6:	29 96       	adiw	r28, 0x09	; 9
     ba8:	2c ad       	ldd	r18, Y+60	; 0x3c
     baa:	3d ad       	ldd	r19, Y+61	; 0x3d
     bac:	4e ad       	ldd	r20, Y+62	; 0x3e
     bae:	5f ad       	ldd	r21, Y+63	; 0x3f
     bb0:	29 97       	sbiw	r28, 0x09	; 9
     bb2:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <__udivmodsi4>
     bb6:	7b 01       	movw	r14, r22
     bb8:	8c 01       	movw	r16, r24
     bba:	c6 01       	movw	r24, r12
     bbc:	b5 01       	movw	r22, r10
     bbe:	29 96       	adiw	r28, 0x09	; 9
     bc0:	2c ad       	ldd	r18, Y+60	; 0x3c
     bc2:	3d ad       	ldd	r19, Y+61	; 0x3d
     bc4:	4e ad       	ldd	r20, Y+62	; 0x3e
     bc6:	5f ad       	ldd	r21, Y+63	; 0x3f
     bc8:	29 97       	sbiw	r28, 0x09	; 9
     bca:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <__udivmodsi4>
     bce:	c9 01       	movw	r24, r18
     bd0:	da 01       	movw	r26, r20
     bd2:	5c 01       	movw	r10, r24
     bd4:	6d 01       	movw	r12, r26
     bd6:	c6 01       	movw	r24, r12
     bd8:	b5 01       	movw	r22, r10
     bda:	2d 96       	adiw	r28, 0x0d	; 13
     bdc:	2c ad       	ldd	r18, Y+60	; 0x3c
     bde:	3d ad       	ldd	r19, Y+61	; 0x3d
     be0:	4e ad       	ldd	r20, Y+62	; 0x3e
     be2:	5f ad       	ldd	r21, Y+63	; 0x3f
     be4:	2d 97       	sbiw	r28, 0x0d	; 13
     be6:	0e 94 c5 10 	call	0x218a	; 0x218a <__mulsi3>
     bea:	9b 01       	movw	r18, r22
     bec:	ac 01       	movw	r20, r24
     bee:	87 01       	movw	r16, r14
     bf0:	ff 24       	eor	r15, r15
     bf2:	ee 24       	eor	r14, r14
     bf4:	8d a5       	ldd	r24, Y+45	; 0x2d
     bf6:	9e a5       	ldd	r25, Y+46	; 0x2e
     bf8:	af a5       	ldd	r26, Y+47	; 0x2f
     bfa:	b8 a9       	ldd	r27, Y+48	; 0x30
     bfc:	a0 70       	andi	r26, 0x00	; 0
     bfe:	b0 70       	andi	r27, 0x00	; 0
     c00:	e8 2a       	or	r14, r24
     c02:	f9 2a       	or	r15, r25
     c04:	0a 2b       	or	r16, r26
     c06:	1b 2b       	or	r17, r27
     c08:	e2 16       	cp	r14, r18
     c0a:	f3 06       	cpc	r15, r19
     c0c:	04 07       	cpc	r16, r20
     c0e:	15 07       	cpc	r17, r21
     c10:	c0 f4       	brcc	.+48     	; 0xc42 <__stack+0x3e3>
     c12:	08 94       	sec
     c14:	a1 08       	sbc	r10, r1
     c16:	b1 08       	sbc	r11, r1
     c18:	c1 08       	sbc	r12, r1
     c1a:	d1 08       	sbc	r13, r1
     c1c:	e2 0c       	add	r14, r2
     c1e:	f3 1c       	adc	r15, r3
     c20:	04 1d       	adc	r16, r4
     c22:	15 1d       	adc	r17, r5
     c24:	e2 14       	cp	r14, r2
     c26:	f3 04       	cpc	r15, r3
     c28:	04 05       	cpc	r16, r4
     c2a:	15 05       	cpc	r17, r5
     c2c:	50 f0       	brcs	.+20     	; 0xc42 <__stack+0x3e3>
     c2e:	e2 16       	cp	r14, r18
     c30:	f3 06       	cpc	r15, r19
     c32:	04 07       	cpc	r16, r20
     c34:	15 07       	cpc	r17, r21
     c36:	28 f4       	brcc	.+10     	; 0xc42 <__stack+0x3e3>
     c38:	08 94       	sec
     c3a:	a1 08       	sbc	r10, r1
     c3c:	b1 08       	sbc	r11, r1
     c3e:	c1 08       	sbc	r12, r1
     c40:	d1 08       	sbc	r13, r1
     c42:	61 96       	adiw	r28, 0x11	; 17
     c44:	ec ac       	ldd	r14, Y+60	; 0x3c
     c46:	fd ac       	ldd	r15, Y+61	; 0x3d
     c48:	0e ad       	ldd	r16, Y+62	; 0x3e
     c4a:	1f ad       	ldd	r17, Y+63	; 0x3f
     c4c:	61 97       	sbiw	r28, 0x11	; 17
     c4e:	d7 01       	movw	r26, r14
     c50:	99 27       	eor	r25, r25
     c52:	88 27       	eor	r24, r24
     c54:	96 01       	movw	r18, r12
     c56:	85 01       	movw	r16, r10
     c58:	08 2b       	or	r16, r24
     c5a:	19 2b       	or	r17, r25
     c5c:	2a 2b       	or	r18, r26
     c5e:	3b 2b       	or	r19, r27
     c60:	09 ab       	std	Y+49, r16	; 0x31
     c62:	1a ab       	std	Y+50, r17	; 0x32
     c64:	2b ab       	std	Y+51, r18	; 0x33
     c66:	3c ab       	std	Y+52, r19	; 0x34
     c68:	62 c2       	rjmp	.+1220   	; 0x112e <__stack+0x8cf>
     c6a:	6e 14       	cp	r6, r14
     c6c:	7f 04       	cpc	r7, r15
     c6e:	80 06       	cpc	r8, r16
     c70:	91 06       	cpc	r9, r17
     c72:	08 f4       	brcc	.+2      	; 0xc76 <__stack+0x417>
     c74:	51 c2       	rjmp	.+1186   	; 0x1118 <__stack+0x8b9>
     c76:	20 e0       	ldi	r18, 0x00	; 0
     c78:	e2 16       	cp	r14, r18
     c7a:	20 e0       	ldi	r18, 0x00	; 0
     c7c:	f2 06       	cpc	r15, r18
     c7e:	21 e0       	ldi	r18, 0x01	; 1
     c80:	02 07       	cpc	r16, r18
     c82:	20 e0       	ldi	r18, 0x00	; 0
     c84:	12 07       	cpc	r17, r18
     c86:	88 f4       	brcc	.+34     	; 0xcaa <__stack+0x44b>
     c88:	3f ef       	ldi	r19, 0xFF	; 255
     c8a:	e3 16       	cp	r14, r19
     c8c:	f1 04       	cpc	r15, r1
     c8e:	01 05       	cpc	r16, r1
     c90:	11 05       	cpc	r17, r1
     c92:	31 f0       	breq	.+12     	; 0xca0 <__stack+0x441>
     c94:	28 f0       	brcs	.+10     	; 0xca0 <__stack+0x441>
     c96:	48 e0       	ldi	r20, 0x08	; 8
     c98:	50 e0       	ldi	r21, 0x00	; 0
     c9a:	60 e0       	ldi	r22, 0x00	; 0
     c9c:	70 e0       	ldi	r23, 0x00	; 0
     c9e:	17 c0       	rjmp	.+46     	; 0xcce <__stack+0x46f>
     ca0:	40 e0       	ldi	r20, 0x00	; 0
     ca2:	50 e0       	ldi	r21, 0x00	; 0
     ca4:	60 e0       	ldi	r22, 0x00	; 0
     ca6:	70 e0       	ldi	r23, 0x00	; 0
     ca8:	12 c0       	rjmp	.+36     	; 0xcce <__stack+0x46f>
     caa:	40 e0       	ldi	r20, 0x00	; 0
     cac:	e4 16       	cp	r14, r20
     cae:	40 e0       	ldi	r20, 0x00	; 0
     cb0:	f4 06       	cpc	r15, r20
     cb2:	40 e0       	ldi	r20, 0x00	; 0
     cb4:	04 07       	cpc	r16, r20
     cb6:	41 e0       	ldi	r20, 0x01	; 1
     cb8:	14 07       	cpc	r17, r20
     cba:	28 f0       	brcs	.+10     	; 0xcc6 <__stack+0x467>
     cbc:	48 e1       	ldi	r20, 0x18	; 24
     cbe:	50 e0       	ldi	r21, 0x00	; 0
     cc0:	60 e0       	ldi	r22, 0x00	; 0
     cc2:	70 e0       	ldi	r23, 0x00	; 0
     cc4:	04 c0       	rjmp	.+8      	; 0xcce <__stack+0x46f>
     cc6:	40 e1       	ldi	r20, 0x10	; 16
     cc8:	50 e0       	ldi	r21, 0x00	; 0
     cca:	60 e0       	ldi	r22, 0x00	; 0
     ccc:	70 e0       	ldi	r23, 0x00	; 0
     cce:	d8 01       	movw	r26, r16
     cd0:	c7 01       	movw	r24, r14
     cd2:	04 2e       	mov	r0, r20
     cd4:	04 c0       	rjmp	.+8      	; 0xcde <__stack+0x47f>
     cd6:	b6 95       	lsr	r27
     cd8:	a7 95       	ror	r26
     cda:	97 95       	ror	r25
     cdc:	87 95       	ror	r24
     cde:	0a 94       	dec	r0
     ce0:	d2 f7       	brpl	.-12     	; 0xcd6 <__stack+0x477>
     ce2:	80 5a       	subi	r24, 0xA0	; 160
     ce4:	9f 4f       	sbci	r25, 0xFF	; 255
     ce6:	dc 01       	movw	r26, r24
     ce8:	2c 91       	ld	r18, X
     cea:	30 e2       	ldi	r19, 0x20	; 32
     cec:	a3 2e       	mov	r10, r19
     cee:	b1 2c       	mov	r11, r1
     cf0:	c1 2c       	mov	r12, r1
     cf2:	d1 2c       	mov	r13, r1
     cf4:	d6 01       	movw	r26, r12
     cf6:	c5 01       	movw	r24, r10
     cf8:	84 1b       	sub	r24, r20
     cfa:	95 0b       	sbc	r25, r21
     cfc:	a6 0b       	sbc	r26, r22
     cfe:	b7 0b       	sbc	r27, r23
     d00:	82 1b       	sub	r24, r18
     d02:	91 09       	sbc	r25, r1
     d04:	a1 09       	sbc	r26, r1
     d06:	b1 09       	sbc	r27, r1
     d08:	00 97       	sbiw	r24, 0x00	; 0
     d0a:	a1 05       	cpc	r26, r1
     d0c:	b1 05       	cpc	r27, r1
     d0e:	89 f4       	brne	.+34     	; 0xd32 <__stack+0x4d3>
     d10:	e6 14       	cp	r14, r6
     d12:	f7 04       	cpc	r15, r7
     d14:	08 05       	cpc	r16, r8
     d16:	19 05       	cpc	r17, r9
     d18:	08 f4       	brcc	.+2      	; 0xd1c <__stack+0x4bd>
     d1a:	f2 c1       	rjmp	.+996    	; 0x1100 <__stack+0x8a1>
     d1c:	6d a4       	ldd	r6, Y+45	; 0x2d
     d1e:	7e a4       	ldd	r7, Y+46	; 0x2e
     d20:	8f a4       	ldd	r8, Y+47	; 0x2f
     d22:	98 a8       	ldd	r9, Y+48	; 0x30
     d24:	62 14       	cp	r6, r2
     d26:	73 04       	cpc	r7, r3
     d28:	84 04       	cpc	r8, r4
     d2a:	95 04       	cpc	r9, r5
     d2c:	08 f0       	brcs	.+2      	; 0xd30 <__stack+0x4d1>
     d2e:	e8 c1       	rjmp	.+976    	; 0x1100 <__stack+0x8a1>
     d30:	f3 c1       	rjmp	.+998    	; 0x1118 <__stack+0x8b9>
     d32:	6e 96       	adiw	r28, 0x1e	; 30
     d34:	8f af       	std	Y+63, r24	; 0x3f
     d36:	6e 97       	sbiw	r28, 0x1e	; 30
     d38:	08 2e       	mov	r0, r24
     d3a:	04 c0       	rjmp	.+8      	; 0xd44 <__stack+0x4e5>
     d3c:	ee 0c       	add	r14, r14
     d3e:	ff 1c       	adc	r15, r15
     d40:	00 1f       	adc	r16, r16
     d42:	11 1f       	adc	r17, r17
     d44:	0a 94       	dec	r0
     d46:	d2 f7       	brpl	.-12     	; 0xd3c <__stack+0x4dd>
     d48:	6a 2d       	mov	r22, r10
     d4a:	68 1b       	sub	r22, r24
     d4c:	d2 01       	movw	r26, r4
     d4e:	c1 01       	movw	r24, r2
     d50:	06 2e       	mov	r0, r22
     d52:	04 c0       	rjmp	.+8      	; 0xd5c <__stack+0x4fd>
     d54:	b6 95       	lsr	r27
     d56:	a7 95       	ror	r26
     d58:	97 95       	ror	r25
     d5a:	87 95       	ror	r24
     d5c:	0a 94       	dec	r0
     d5e:	d2 f7       	brpl	.-12     	; 0xd54 <__stack+0x4f5>
     d60:	5c 01       	movw	r10, r24
     d62:	6d 01       	movw	r12, r26
     d64:	ae 28       	or	r10, r14
     d66:	bf 28       	or	r11, r15
     d68:	c0 2a       	or	r12, r16
     d6a:	d1 2a       	or	r13, r17
     d6c:	ad a2       	std	Y+37, r10	; 0x25
     d6e:	be a2       	std	Y+38, r11	; 0x26
     d70:	cf a2       	std	Y+39, r12	; 0x27
     d72:	d8 a6       	std	Y+40, r13	; 0x28
     d74:	72 01       	movw	r14, r4
     d76:	61 01       	movw	r12, r2
     d78:	6e 96       	adiw	r28, 0x1e	; 30
     d7a:	0f ac       	ldd	r0, Y+63	; 0x3f
     d7c:	6e 97       	sbiw	r28, 0x1e	; 30
     d7e:	04 c0       	rjmp	.+8      	; 0xd88 <__stack+0x529>
     d80:	cc 0c       	add	r12, r12
     d82:	dd 1c       	adc	r13, r13
     d84:	ee 1c       	adc	r14, r14
     d86:	ff 1c       	adc	r15, r15
     d88:	0a 94       	dec	r0
     d8a:	d2 f7       	brpl	.-12     	; 0xd80 <__stack+0x521>
     d8c:	c9 a2       	std	Y+33, r12	; 0x21
     d8e:	da a2       	std	Y+34, r13	; 0x22
     d90:	eb a2       	std	Y+35, r14	; 0x23
     d92:	fc a2       	std	Y+36, r15	; 0x24
     d94:	64 01       	movw	r12, r8
     d96:	53 01       	movw	r10, r6
     d98:	06 2e       	mov	r0, r22
     d9a:	04 c0       	rjmp	.+8      	; 0xda4 <__stack+0x545>
     d9c:	d6 94       	lsr	r13
     d9e:	c7 94       	ror	r12
     da0:	b7 94       	ror	r11
     da2:	a7 94       	ror	r10
     da4:	0a 94       	dec	r0
     da6:	d2 f7       	brpl	.-12     	; 0xd9c <__stack+0x53d>
     da8:	d4 01       	movw	r26, r8
     daa:	c3 01       	movw	r24, r6
     dac:	6e 96       	adiw	r28, 0x1e	; 30
     dae:	0f ac       	ldd	r0, Y+63	; 0x3f
     db0:	6e 97       	sbiw	r28, 0x1e	; 30
     db2:	04 c0       	rjmp	.+8      	; 0xdbc <__stack+0x55d>
     db4:	88 0f       	add	r24, r24
     db6:	99 1f       	adc	r25, r25
     db8:	aa 1f       	adc	r26, r26
     dba:	bb 1f       	adc	r27, r27
     dbc:	0a 94       	dec	r0
     dbe:	d2 f7       	brpl	.-12     	; 0xdb4 <__stack+0x555>
     dc0:	ed a4       	ldd	r14, Y+45	; 0x2d
     dc2:	fe a4       	ldd	r15, Y+46	; 0x2e
     dc4:	0f a5       	ldd	r16, Y+47	; 0x2f
     dc6:	18 a9       	ldd	r17, Y+48	; 0x30
     dc8:	04 c0       	rjmp	.+8      	; 0xdd2 <__stack+0x573>
     dca:	16 95       	lsr	r17
     dcc:	07 95       	ror	r16
     dce:	f7 94       	ror	r15
     dd0:	e7 94       	ror	r14
     dd2:	6a 95       	dec	r22
     dd4:	d2 f7       	brpl	.-12     	; 0xdca <__stack+0x56b>
     dd6:	37 01       	movw	r6, r14
     dd8:	48 01       	movw	r8, r16
     dda:	68 2a       	or	r6, r24
     ddc:	79 2a       	or	r7, r25
     dde:	8a 2a       	or	r8, r26
     de0:	9b 2a       	or	r9, r27
     de2:	6d 8e       	std	Y+29, r6	; 0x1d
     de4:	7e 8e       	std	Y+30, r7	; 0x1e
     de6:	8f 8e       	std	Y+31, r8	; 0x1f
     de8:	98 a2       	std	Y+32, r9	; 0x20
     dea:	ed a0       	ldd	r14, Y+37	; 0x25
     dec:	fe a0       	ldd	r15, Y+38	; 0x26
     dee:	0f a1       	ldd	r16, Y+39	; 0x27
     df0:	18 a5       	ldd	r17, Y+40	; 0x28
     df2:	38 01       	movw	r6, r16
     df4:	88 24       	eor	r8, r8
     df6:	99 24       	eor	r9, r9
     df8:	98 01       	movw	r18, r16
     dfa:	87 01       	movw	r16, r14
     dfc:	20 70       	andi	r18, 0x00	; 0
     dfe:	30 70       	andi	r19, 0x00	; 0
     e00:	65 96       	adiw	r28, 0x15	; 21
     e02:	0c af       	std	Y+60, r16	; 0x3c
     e04:	1d af       	std	Y+61, r17	; 0x3d
     e06:	2e af       	std	Y+62, r18	; 0x3e
     e08:	3f af       	std	Y+63, r19	; 0x3f
     e0a:	65 97       	sbiw	r28, 0x15	; 21
     e0c:	c6 01       	movw	r24, r12
     e0e:	b5 01       	movw	r22, r10
     e10:	a4 01       	movw	r20, r8
     e12:	93 01       	movw	r18, r6
     e14:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <__udivmodsi4>
     e18:	7b 01       	movw	r14, r22
     e1a:	8c 01       	movw	r16, r24
     e1c:	c6 01       	movw	r24, r12
     e1e:	b5 01       	movw	r22, r10
     e20:	a4 01       	movw	r20, r8
     e22:	93 01       	movw	r18, r6
     e24:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <__udivmodsi4>
     e28:	c9 01       	movw	r24, r18
     e2a:	da 01       	movw	r26, r20
     e2c:	1c 01       	movw	r2, r24
     e2e:	2d 01       	movw	r4, r26
     e30:	c2 01       	movw	r24, r4
     e32:	b1 01       	movw	r22, r2
     e34:	65 96       	adiw	r28, 0x15	; 21
     e36:	2c ad       	ldd	r18, Y+60	; 0x3c
     e38:	3d ad       	ldd	r19, Y+61	; 0x3d
     e3a:	4e ad       	ldd	r20, Y+62	; 0x3e
     e3c:	5f ad       	ldd	r21, Y+63	; 0x3f
     e3e:	65 97       	sbiw	r28, 0x15	; 21
     e40:	0e 94 c5 10 	call	0x218a	; 0x218a <__mulsi3>
     e44:	9b 01       	movw	r18, r22
     e46:	ac 01       	movw	r20, r24
     e48:	87 01       	movw	r16, r14
     e4a:	ff 24       	eor	r15, r15
     e4c:	ee 24       	eor	r14, r14
     e4e:	ad 8c       	ldd	r10, Y+29	; 0x1d
     e50:	be 8c       	ldd	r11, Y+30	; 0x1e
     e52:	cf 8c       	ldd	r12, Y+31	; 0x1f
     e54:	d8 a0       	ldd	r13, Y+32	; 0x20
     e56:	c6 01       	movw	r24, r12
     e58:	aa 27       	eor	r26, r26
     e5a:	bb 27       	eor	r27, r27
     e5c:	57 01       	movw	r10, r14
     e5e:	68 01       	movw	r12, r16
     e60:	a8 2a       	or	r10, r24
     e62:	b9 2a       	or	r11, r25
     e64:	ca 2a       	or	r12, r26
     e66:	db 2a       	or	r13, r27
     e68:	a2 16       	cp	r10, r18
     e6a:	b3 06       	cpc	r11, r19
     e6c:	c4 06       	cpc	r12, r20
     e6e:	d5 06       	cpc	r13, r21
     e70:	00 f5       	brcc	.+64     	; 0xeb2 <__stack+0x653>
     e72:	08 94       	sec
     e74:	21 08       	sbc	r2, r1
     e76:	31 08       	sbc	r3, r1
     e78:	41 08       	sbc	r4, r1
     e7a:	51 08       	sbc	r5, r1
     e7c:	ed a0       	ldd	r14, Y+37	; 0x25
     e7e:	fe a0       	ldd	r15, Y+38	; 0x26
     e80:	0f a1       	ldd	r16, Y+39	; 0x27
     e82:	18 a5       	ldd	r17, Y+40	; 0x28
     e84:	ae 0c       	add	r10, r14
     e86:	bf 1c       	adc	r11, r15
     e88:	c0 1e       	adc	r12, r16
     e8a:	d1 1e       	adc	r13, r17
     e8c:	ae 14       	cp	r10, r14
     e8e:	bf 04       	cpc	r11, r15
     e90:	c0 06       	cpc	r12, r16
     e92:	d1 06       	cpc	r13, r17
     e94:	70 f0       	brcs	.+28     	; 0xeb2 <__stack+0x653>
     e96:	a2 16       	cp	r10, r18
     e98:	b3 06       	cpc	r11, r19
     e9a:	c4 06       	cpc	r12, r20
     e9c:	d5 06       	cpc	r13, r21
     e9e:	48 f4       	brcc	.+18     	; 0xeb2 <__stack+0x653>
     ea0:	08 94       	sec
     ea2:	21 08       	sbc	r2, r1
     ea4:	31 08       	sbc	r3, r1
     ea6:	41 08       	sbc	r4, r1
     ea8:	51 08       	sbc	r5, r1
     eaa:	ae 0c       	add	r10, r14
     eac:	bf 1c       	adc	r11, r15
     eae:	c0 1e       	adc	r12, r16
     eb0:	d1 1e       	adc	r13, r17
     eb2:	a2 1a       	sub	r10, r18
     eb4:	b3 0a       	sbc	r11, r19
     eb6:	c4 0a       	sbc	r12, r20
     eb8:	d5 0a       	sbc	r13, r21
     eba:	c6 01       	movw	r24, r12
     ebc:	b5 01       	movw	r22, r10
     ebe:	a4 01       	movw	r20, r8
     ec0:	93 01       	movw	r18, r6
     ec2:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <__udivmodsi4>
     ec6:	7b 01       	movw	r14, r22
     ec8:	8c 01       	movw	r16, r24
     eca:	c6 01       	movw	r24, r12
     ecc:	b5 01       	movw	r22, r10
     ece:	a4 01       	movw	r20, r8
     ed0:	93 01       	movw	r18, r6
     ed2:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <__udivmodsi4>
     ed6:	c9 01       	movw	r24, r18
     ed8:	da 01       	movw	r26, r20
     eda:	3c 01       	movw	r6, r24
     edc:	4d 01       	movw	r8, r26
     ede:	c4 01       	movw	r24, r8
     ee0:	b3 01       	movw	r22, r6
     ee2:	65 96       	adiw	r28, 0x15	; 21
     ee4:	2c ad       	ldd	r18, Y+60	; 0x3c
     ee6:	3d ad       	ldd	r19, Y+61	; 0x3d
     ee8:	4e ad       	ldd	r20, Y+62	; 0x3e
     eea:	5f ad       	ldd	r21, Y+63	; 0x3f
     eec:	65 97       	sbiw	r28, 0x15	; 21
     eee:	0e 94 c5 10 	call	0x218a	; 0x218a <__mulsi3>
     ef2:	9b 01       	movw	r18, r22
     ef4:	ac 01       	movw	r20, r24
     ef6:	87 01       	movw	r16, r14
     ef8:	ff 24       	eor	r15, r15
     efa:	ee 24       	eor	r14, r14
     efc:	8d 8d       	ldd	r24, Y+29	; 0x1d
     efe:	9e 8d       	ldd	r25, Y+30	; 0x1e
     f00:	af 8d       	ldd	r26, Y+31	; 0x1f
     f02:	b8 a1       	ldd	r27, Y+32	; 0x20
     f04:	a0 70       	andi	r26, 0x00	; 0
     f06:	b0 70       	andi	r27, 0x00	; 0
     f08:	57 01       	movw	r10, r14
     f0a:	68 01       	movw	r12, r16
     f0c:	a8 2a       	or	r10, r24
     f0e:	b9 2a       	or	r11, r25
     f10:	ca 2a       	or	r12, r26
     f12:	db 2a       	or	r13, r27
     f14:	a2 16       	cp	r10, r18
     f16:	b3 06       	cpc	r11, r19
     f18:	c4 06       	cpc	r12, r20
     f1a:	d5 06       	cpc	r13, r21
     f1c:	00 f5       	brcc	.+64     	; 0xf5e <__stack+0x6ff>
     f1e:	08 94       	sec
     f20:	61 08       	sbc	r6, r1
     f22:	71 08       	sbc	r7, r1
     f24:	81 08       	sbc	r8, r1
     f26:	91 08       	sbc	r9, r1
     f28:	6d a1       	ldd	r22, Y+37	; 0x25
     f2a:	7e a1       	ldd	r23, Y+38	; 0x26
     f2c:	8f a1       	ldd	r24, Y+39	; 0x27
     f2e:	98 a5       	ldd	r25, Y+40	; 0x28
     f30:	a6 0e       	add	r10, r22
     f32:	b7 1e       	adc	r11, r23
     f34:	c8 1e       	adc	r12, r24
     f36:	d9 1e       	adc	r13, r25
     f38:	a6 16       	cp	r10, r22
     f3a:	b7 06       	cpc	r11, r23
     f3c:	c8 06       	cpc	r12, r24
     f3e:	d9 06       	cpc	r13, r25
     f40:	70 f0       	brcs	.+28     	; 0xf5e <__stack+0x6ff>
     f42:	a2 16       	cp	r10, r18
     f44:	b3 06       	cpc	r11, r19
     f46:	c4 06       	cpc	r12, r20
     f48:	d5 06       	cpc	r13, r21
     f4a:	48 f4       	brcc	.+18     	; 0xf5e <__stack+0x6ff>
     f4c:	08 94       	sec
     f4e:	61 08       	sbc	r6, r1
     f50:	71 08       	sbc	r7, r1
     f52:	81 08       	sbc	r8, r1
     f54:	91 08       	sbc	r9, r1
     f56:	a6 0e       	add	r10, r22
     f58:	b7 1e       	adc	r11, r23
     f5a:	c8 1e       	adc	r12, r24
     f5c:	d9 1e       	adc	r13, r25
     f5e:	d6 01       	movw	r26, r12
     f60:	c5 01       	movw	r24, r10
     f62:	82 1b       	sub	r24, r18
     f64:	93 0b       	sbc	r25, r19
     f66:	a4 0b       	sbc	r26, r20
     f68:	b5 0b       	sbc	r27, r21
     f6a:	89 8f       	std	Y+25, r24	; 0x19
     f6c:	9a 8f       	std	Y+26, r25	; 0x1a
     f6e:	ab 8f       	std	Y+27, r26	; 0x1b
     f70:	bc 8f       	std	Y+28, r27	; 0x1c
     f72:	d1 01       	movw	r26, r2
     f74:	99 27       	eor	r25, r25
     f76:	88 27       	eor	r24, r24
     f78:	64 01       	movw	r12, r8
     f7a:	53 01       	movw	r10, r6
     f7c:	a8 2a       	or	r10, r24
     f7e:	b9 2a       	or	r11, r25
     f80:	ca 2a       	or	r12, r26
     f82:	db 2a       	or	r13, r27
     f84:	a9 aa       	std	Y+49, r10	; 0x31
     f86:	ba aa       	std	Y+50, r11	; 0x32
     f88:	cb aa       	std	Y+51, r12	; 0x33
     f8a:	dc aa       	std	Y+52, r13	; 0x34
     f8c:	86 01       	movw	r16, r12
     f8e:	75 01       	movw	r14, r10
     f90:	2f ef       	ldi	r18, 0xFF	; 255
     f92:	3f ef       	ldi	r19, 0xFF	; 255
     f94:	40 e0       	ldi	r20, 0x00	; 0
     f96:	50 e0       	ldi	r21, 0x00	; 0
     f98:	e2 22       	and	r14, r18
     f9a:	f3 22       	and	r15, r19
     f9c:	04 23       	and	r16, r20
     f9e:	15 23       	and	r17, r21
     fa0:	a6 01       	movw	r20, r12
     fa2:	66 27       	eor	r22, r22
     fa4:	77 27       	eor	r23, r23
     fa6:	6d 96       	adiw	r28, 0x1d	; 29
     fa8:	4c af       	std	Y+60, r20	; 0x3c
     faa:	5d af       	std	Y+61, r21	; 0x3d
     fac:	6e af       	std	Y+62, r22	; 0x3e
     fae:	7f af       	std	Y+63, r23	; 0x3f
     fb0:	6d 97       	sbiw	r28, 0x1d	; 29
     fb2:	a9 a0       	ldd	r10, Y+33	; 0x21
     fb4:	ba a0       	ldd	r11, Y+34	; 0x22
     fb6:	cb a0       	ldd	r12, Y+35	; 0x23
     fb8:	dc a0       	ldd	r13, Y+36	; 0x24
     fba:	6f ef       	ldi	r22, 0xFF	; 255
     fbc:	7f ef       	ldi	r23, 0xFF	; 255
     fbe:	80 e0       	ldi	r24, 0x00	; 0
     fc0:	90 e0       	ldi	r25, 0x00	; 0
     fc2:	a6 22       	and	r10, r22
     fc4:	b7 22       	and	r11, r23
     fc6:	c8 22       	and	r12, r24
     fc8:	d9 22       	and	r13, r25
     fca:	89 a1       	ldd	r24, Y+33	; 0x21
     fcc:	9a a1       	ldd	r25, Y+34	; 0x22
     fce:	ab a1       	ldd	r26, Y+35	; 0x23
     fd0:	bc a1       	ldd	r27, Y+36	; 0x24
     fd2:	1d 01       	movw	r2, r26
     fd4:	44 24       	eor	r4, r4
     fd6:	55 24       	eor	r5, r5
     fd8:	c8 01       	movw	r24, r16
     fda:	b7 01       	movw	r22, r14
     fdc:	a6 01       	movw	r20, r12
     fde:	95 01       	movw	r18, r10
     fe0:	0e 94 c5 10 	call	0x218a	; 0x218a <__mulsi3>
     fe4:	69 96       	adiw	r28, 0x19	; 25
     fe6:	6c af       	std	Y+60, r22	; 0x3c
     fe8:	7d af       	std	Y+61, r23	; 0x3d
     fea:	8e af       	std	Y+62, r24	; 0x3e
     fec:	9f af       	std	Y+63, r25	; 0x3f
     fee:	69 97       	sbiw	r28, 0x19	; 25
     ff0:	c8 01       	movw	r24, r16
     ff2:	b7 01       	movw	r22, r14
     ff4:	a2 01       	movw	r20, r4
     ff6:	91 01       	movw	r18, r2
     ff8:	0e 94 c5 10 	call	0x218a	; 0x218a <__mulsi3>
     ffc:	3b 01       	movw	r6, r22
     ffe:	4c 01       	movw	r8, r24
    1000:	6d 96       	adiw	r28, 0x1d	; 29
    1002:	6c ad       	ldd	r22, Y+60	; 0x3c
    1004:	7d ad       	ldd	r23, Y+61	; 0x3d
    1006:	8e ad       	ldd	r24, Y+62	; 0x3e
    1008:	9f ad       	ldd	r25, Y+63	; 0x3f
    100a:	6d 97       	sbiw	r28, 0x1d	; 29
    100c:	a6 01       	movw	r20, r12
    100e:	95 01       	movw	r18, r10
    1010:	0e 94 c5 10 	call	0x218a	; 0x218a <__mulsi3>
    1014:	7b 01       	movw	r14, r22
    1016:	8c 01       	movw	r16, r24
    1018:	6d 96       	adiw	r28, 0x1d	; 29
    101a:	6c ad       	ldd	r22, Y+60	; 0x3c
    101c:	7d ad       	ldd	r23, Y+61	; 0x3d
    101e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1020:	9f ad       	ldd	r25, Y+63	; 0x3f
    1022:	6d 97       	sbiw	r28, 0x1d	; 29
    1024:	a2 01       	movw	r20, r4
    1026:	91 01       	movw	r18, r2
    1028:	0e 94 c5 10 	call	0x218a	; 0x218a <__mulsi3>
    102c:	5b 01       	movw	r10, r22
    102e:	6c 01       	movw	r12, r24
    1030:	a8 01       	movw	r20, r16
    1032:	97 01       	movw	r18, r14
    1034:	26 0d       	add	r18, r6
    1036:	37 1d       	adc	r19, r7
    1038:	48 1d       	adc	r20, r8
    103a:	59 1d       	adc	r21, r9
    103c:	69 96       	adiw	r28, 0x19	; 25
    103e:	6c ac       	ldd	r6, Y+60	; 0x3c
    1040:	7d ac       	ldd	r7, Y+61	; 0x3d
    1042:	8e ac       	ldd	r8, Y+62	; 0x3e
    1044:	9f ac       	ldd	r9, Y+63	; 0x3f
    1046:	69 97       	sbiw	r28, 0x19	; 25
    1048:	c4 01       	movw	r24, r8
    104a:	aa 27       	eor	r26, r26
    104c:	bb 27       	eor	r27, r27
    104e:	28 0f       	add	r18, r24
    1050:	39 1f       	adc	r19, r25
    1052:	4a 1f       	adc	r20, r26
    1054:	5b 1f       	adc	r21, r27
    1056:	2e 15       	cp	r18, r14
    1058:	3f 05       	cpc	r19, r15
    105a:	40 07       	cpc	r20, r16
    105c:	51 07       	cpc	r21, r17
    105e:	48 f4       	brcc	.+18     	; 0x1072 <__stack+0x813>
    1060:	e1 2c       	mov	r14, r1
    1062:	f1 2c       	mov	r15, r1
    1064:	61 e0       	ldi	r22, 0x01	; 1
    1066:	06 2f       	mov	r16, r22
    1068:	11 2d       	mov	r17, r1
    106a:	ae 0c       	add	r10, r14
    106c:	bf 1c       	adc	r11, r15
    106e:	c0 1e       	adc	r12, r16
    1070:	d1 1e       	adc	r13, r17
    1072:	ca 01       	movw	r24, r20
    1074:	aa 27       	eor	r26, r26
    1076:	bb 27       	eor	r27, r27
    1078:	bc 01       	movw	r22, r24
    107a:	cd 01       	movw	r24, r26
    107c:	6a 0d       	add	r22, r10
    107e:	7b 1d       	adc	r23, r11
    1080:	8c 1d       	adc	r24, r12
    1082:	9d 1d       	adc	r25, r13
    1084:	69 8c       	ldd	r6, Y+25	; 0x19
    1086:	7a 8c       	ldd	r7, Y+26	; 0x1a
    1088:	8b 8c       	ldd	r8, Y+27	; 0x1b
    108a:	9c 8c       	ldd	r9, Y+28	; 0x1c
    108c:	66 16       	cp	r6, r22
    108e:	77 06       	cpc	r7, r23
    1090:	88 06       	cpc	r8, r24
    1092:	99 06       	cpc	r9, r25
    1094:	40 f1       	brcs	.+80     	; 0x10e6 <__stack+0x887>
    1096:	66 15       	cp	r22, r6
    1098:	77 05       	cpc	r23, r7
    109a:	88 05       	cpc	r24, r8
    109c:	99 05       	cpc	r25, r9
    109e:	09 f0       	breq	.+2      	; 0x10a2 <__stack+0x843>
    10a0:	43 c0       	rjmp	.+134    	; 0x1128 <__stack+0x8c9>
    10a2:	d9 01       	movw	r26, r18
    10a4:	99 27       	eor	r25, r25
    10a6:	88 27       	eor	r24, r24
    10a8:	69 96       	adiw	r28, 0x19	; 25
    10aa:	2c ad       	ldd	r18, Y+60	; 0x3c
    10ac:	3d ad       	ldd	r19, Y+61	; 0x3d
    10ae:	4e ad       	ldd	r20, Y+62	; 0x3e
    10b0:	5f ad       	ldd	r21, Y+63	; 0x3f
    10b2:	69 97       	sbiw	r28, 0x19	; 25
    10b4:	40 70       	andi	r20, 0x00	; 0
    10b6:	50 70       	andi	r21, 0x00	; 0
    10b8:	82 0f       	add	r24, r18
    10ba:	93 1f       	adc	r25, r19
    10bc:	a4 1f       	adc	r26, r20
    10be:	b5 1f       	adc	r27, r21
    10c0:	2d a5       	ldd	r18, Y+45	; 0x2d
    10c2:	3e a5       	ldd	r19, Y+46	; 0x2e
    10c4:	4f a5       	ldd	r20, Y+47	; 0x2f
    10c6:	58 a9       	ldd	r21, Y+48	; 0x30
    10c8:	6e 96       	adiw	r28, 0x1e	; 30
    10ca:	0f ac       	ldd	r0, Y+63	; 0x3f
    10cc:	6e 97       	sbiw	r28, 0x1e	; 30
    10ce:	04 c0       	rjmp	.+8      	; 0x10d8 <__stack+0x879>
    10d0:	22 0f       	add	r18, r18
    10d2:	33 1f       	adc	r19, r19
    10d4:	44 1f       	adc	r20, r20
    10d6:	55 1f       	adc	r21, r21
    10d8:	0a 94       	dec	r0
    10da:	d2 f7       	brpl	.-12     	; 0x10d0 <__stack+0x871>
    10dc:	28 17       	cp	r18, r24
    10de:	39 07       	cpc	r19, r25
    10e0:	4a 07       	cpc	r20, r26
    10e2:	5b 07       	cpc	r21, r27
    10e4:	08 f5       	brcc	.+66     	; 0x1128 <__stack+0x8c9>
    10e6:	09 a9       	ldd	r16, Y+49	; 0x31
    10e8:	1a a9       	ldd	r17, Y+50	; 0x32
    10ea:	2b a9       	ldd	r18, Y+51	; 0x33
    10ec:	3c a9       	ldd	r19, Y+52	; 0x34
    10ee:	01 50       	subi	r16, 0x01	; 1
    10f0:	10 40       	sbci	r17, 0x00	; 0
    10f2:	20 40       	sbci	r18, 0x00	; 0
    10f4:	30 40       	sbci	r19, 0x00	; 0
    10f6:	09 ab       	std	Y+49, r16	; 0x31
    10f8:	1a ab       	std	Y+50, r17	; 0x32
    10fa:	2b ab       	std	Y+51, r18	; 0x33
    10fc:	3c ab       	std	Y+52, r19	; 0x34
    10fe:	14 c0       	rjmp	.+40     	; 0x1128 <__stack+0x8c9>
    1100:	66 24       	eor	r6, r6
    1102:	77 24       	eor	r7, r7
    1104:	43 01       	movw	r8, r6
    1106:	21 e0       	ldi	r18, 0x01	; 1
    1108:	30 e0       	ldi	r19, 0x00	; 0
    110a:	40 e0       	ldi	r20, 0x00	; 0
    110c:	50 e0       	ldi	r21, 0x00	; 0
    110e:	29 ab       	std	Y+49, r18	; 0x31
    1110:	3a ab       	std	Y+50, r19	; 0x32
    1112:	4b ab       	std	Y+51, r20	; 0x33
    1114:	5c ab       	std	Y+52, r21	; 0x34
    1116:	0b c0       	rjmp	.+22     	; 0x112e <__stack+0x8cf>
    1118:	66 24       	eor	r6, r6
    111a:	77 24       	eor	r7, r7
    111c:	43 01       	movw	r8, r6
    111e:	19 aa       	std	Y+49, r1	; 0x31
    1120:	1a aa       	std	Y+50, r1	; 0x32
    1122:	1b aa       	std	Y+51, r1	; 0x33
    1124:	1c aa       	std	Y+52, r1	; 0x34
    1126:	03 c0       	rjmp	.+6      	; 0x112e <__stack+0x8cf>
    1128:	66 24       	eor	r6, r6
    112a:	77 24       	eor	r7, r7
    112c:	43 01       	movw	r8, r6
    112e:	fe 01       	movw	r30, r28
    1130:	71 96       	adiw	r30, 0x11	; 17
    1132:	88 e0       	ldi	r24, 0x08	; 8
    1134:	df 01       	movw	r26, r30
    1136:	1d 92       	st	X+, r1
    1138:	8a 95       	dec	r24
    113a:	e9 f7       	brne	.-6      	; 0x1136 <__stack+0x8d7>
    113c:	a9 a8       	ldd	r10, Y+49	; 0x31
    113e:	ba a8       	ldd	r11, Y+50	; 0x32
    1140:	cb a8       	ldd	r12, Y+51	; 0x33
    1142:	dc a8       	ldd	r13, Y+52	; 0x34
    1144:	a9 8a       	std	Y+17, r10	; 0x11
    1146:	ba 8a       	std	Y+18, r11	; 0x12
    1148:	cb 8a       	std	Y+19, r12	; 0x13
    114a:	dc 8a       	std	Y+20, r13	; 0x14
    114c:	6d 8a       	std	Y+21, r6	; 0x15
    114e:	7e 8a       	std	Y+22, r7	; 0x16
    1150:	8f 8a       	std	Y+23, r8	; 0x17
    1152:	98 8e       	std	Y+24, r9	; 0x18
    1154:	29 a9       	ldd	r18, Y+49	; 0x31
    1156:	3a 89       	ldd	r19, Y+18	; 0x12
    1158:	4b 89       	ldd	r20, Y+19	; 0x13
    115a:	5c 89       	ldd	r21, Y+20	; 0x14
    115c:	66 2d       	mov	r22, r6
    115e:	7e 89       	ldd	r23, Y+22	; 0x16
    1160:	8f 89       	ldd	r24, Y+23	; 0x17
    1162:	98 8d       	ldd	r25, Y+24	; 0x18
    1164:	c2 5a       	subi	r28, 0xA2	; 162
    1166:	df 4f       	sbci	r29, 0xFF	; 255
    1168:	e2 e1       	ldi	r30, 0x12	; 18
    116a:	0c 94 22 11 	jmp	0x2244	; 0x2244 <__epilogue_restores__>

0000116e <dio_vid_set_port_direction>:
#include <avr/io.h>
#include "types.h"
#include "macros.h"

void dio_vid_set_port_direction (u8 portNumber, u8 direction) {
	switch (portNumber) {
    116e:	81 30       	cpi	r24, 0x01	; 1
    1170:	49 f0       	breq	.+18     	; 0x1184 <dio_vid_set_port_direction+0x16>
    1172:	81 30       	cpi	r24, 0x01	; 1
    1174:	28 f0       	brcs	.+10     	; 0x1180 <dio_vid_set_port_direction+0x12>
    1176:	82 30       	cpi	r24, 0x02	; 2
    1178:	39 f0       	breq	.+14     	; 0x1188 <dio_vid_set_port_direction+0x1a>
    117a:	83 30       	cpi	r24, 0x03	; 3
    117c:	41 f4       	brne	.+16     	; 0x118e <dio_vid_set_port_direction+0x20>
    117e:	06 c0       	rjmp	.+12     	; 0x118c <dio_vid_set_port_direction+0x1e>
	case 0:
		DDRA = direction;
    1180:	6a bb       	out	0x1a, r22	; 26
    1182:	08 95       	ret
		break;
	case 1:
		DDRB = direction;
    1184:	67 bb       	out	0x17, r22	; 23
    1186:	08 95       	ret
		break;
	case 2:
		DDRC = direction;
    1188:	64 bb       	out	0x14, r22	; 20
    118a:	08 95       	ret
		break;
	case 3:
		DDRD = direction;
    118c:	61 bb       	out	0x11, r22	; 17
    118e:	08 95       	ret

00001190 <dio_vid_set_port_value>:
	}
}


void dio_vid_set_port_value (u8 portNumber, u8 value) {
	switch (portNumber) {
    1190:	81 30       	cpi	r24, 0x01	; 1
    1192:	49 f0       	breq	.+18     	; 0x11a6 <dio_vid_set_port_value+0x16>
    1194:	81 30       	cpi	r24, 0x01	; 1
    1196:	28 f0       	brcs	.+10     	; 0x11a2 <dio_vid_set_port_value+0x12>
    1198:	82 30       	cpi	r24, 0x02	; 2
    119a:	39 f0       	breq	.+14     	; 0x11aa <dio_vid_set_port_value+0x1a>
    119c:	83 30       	cpi	r24, 0x03	; 3
    119e:	41 f4       	brne	.+16     	; 0x11b0 <dio_vid_set_port_value+0x20>
    11a0:	06 c0       	rjmp	.+12     	; 0x11ae <dio_vid_set_port_value+0x1e>
	case 0:
		PORTA = value;
    11a2:	6b bb       	out	0x1b, r22	; 27
    11a4:	08 95       	ret
		break;
	case 1:
		PORTB = value;
    11a6:	68 bb       	out	0x18, r22	; 24
    11a8:	08 95       	ret
		break;
	case 2:
		PORTC = value;
    11aa:	65 bb       	out	0x15, r22	; 21
    11ac:	08 95       	ret
		break;
	case 3:
		PORTD = value;
    11ae:	62 bb       	out	0x12, r22	; 18
    11b0:	08 95       	ret

000011b2 <dio_vid_set_pin_value>:
	u8 port = dio_u8_read_port_value(portNumber);
	return getBit(port, index);
}

void dio_vid_set_pin_value (u8 portNumber, u8 index, u8 value) {
	switch (portNumber) {
    11b2:	81 30       	cpi	r24, 0x01	; 1
    11b4:	49 f1       	breq	.+82     	; 0x1208 <dio_vid_set_pin_value+0x56>
    11b6:	81 30       	cpi	r24, 0x01	; 1
    11b8:	38 f0       	brcs	.+14     	; 0x11c8 <dio_vid_set_pin_value+0x16>
    11ba:	82 30       	cpi	r24, 0x02	; 2
    11bc:	09 f4       	brne	.+2      	; 0x11c0 <dio_vid_set_pin_value+0xe>
    11be:	44 c0       	rjmp	.+136    	; 0x1248 <dio_vid_set_pin_value+0x96>
    11c0:	83 30       	cpi	r24, 0x03	; 3
    11c2:	09 f0       	breq	.+2      	; 0x11c6 <dio_vid_set_pin_value+0x14>
    11c4:	7e c0       	rjmp	.+252    	; 0x12c2 <dio_vid_set_pin_value+0x110>
    11c6:	5f c0       	rjmp	.+190    	; 0x1286 <dio_vid_set_pin_value+0xd4>
	case 0:
		if (value == 1)
    11c8:	41 30       	cpi	r20, 0x01	; 1
    11ca:	69 f4       	brne	.+26     	; 0x11e6 <dio_vid_set_pin_value+0x34>
			setBit(PORTA, index);
    11cc:	eb e3       	ldi	r30, 0x3B	; 59
    11ce:	f0 e0       	ldi	r31, 0x00	; 0
    11d0:	20 81       	ld	r18, Z
    11d2:	81 e0       	ldi	r24, 0x01	; 1
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	02 c0       	rjmp	.+4      	; 0x11dc <dio_vid_set_pin_value+0x2a>
    11d8:	88 0f       	add	r24, r24
    11da:	99 1f       	adc	r25, r25
    11dc:	6a 95       	dec	r22
    11de:	e2 f7       	brpl	.-8      	; 0x11d8 <dio_vid_set_pin_value+0x26>
    11e0:	28 2b       	or	r18, r24
    11e2:	20 83       	st	Z, r18
    11e4:	08 95       	ret
		else if (value == 0)
    11e6:	44 23       	and	r20, r20
    11e8:	09 f0       	breq	.+2      	; 0x11ec <dio_vid_set_pin_value+0x3a>
    11ea:	6b c0       	rjmp	.+214    	; 0x12c2 <dio_vid_set_pin_value+0x110>
			clrBit(PORTA, index);
    11ec:	eb e3       	ldi	r30, 0x3B	; 59
    11ee:	f0 e0       	ldi	r31, 0x00	; 0
    11f0:	20 81       	ld	r18, Z
    11f2:	81 e0       	ldi	r24, 0x01	; 1
    11f4:	90 e0       	ldi	r25, 0x00	; 0
    11f6:	02 c0       	rjmp	.+4      	; 0x11fc <dio_vid_set_pin_value+0x4a>
    11f8:	88 0f       	add	r24, r24
    11fa:	99 1f       	adc	r25, r25
    11fc:	6a 95       	dec	r22
    11fe:	e2 f7       	brpl	.-8      	; 0x11f8 <dio_vid_set_pin_value+0x46>
    1200:	80 95       	com	r24
    1202:	82 23       	and	r24, r18
    1204:	80 83       	st	Z, r24
    1206:	08 95       	ret
		break;
	case 1:
		if (value == 1)
    1208:	41 30       	cpi	r20, 0x01	; 1
    120a:	69 f4       	brne	.+26     	; 0x1226 <dio_vid_set_pin_value+0x74>
			setBit(PORTB, index);
    120c:	e8 e3       	ldi	r30, 0x38	; 56
    120e:	f0 e0       	ldi	r31, 0x00	; 0
    1210:	20 81       	ld	r18, Z
    1212:	81 e0       	ldi	r24, 0x01	; 1
    1214:	90 e0       	ldi	r25, 0x00	; 0
    1216:	02 c0       	rjmp	.+4      	; 0x121c <dio_vid_set_pin_value+0x6a>
    1218:	88 0f       	add	r24, r24
    121a:	99 1f       	adc	r25, r25
    121c:	6a 95       	dec	r22
    121e:	e2 f7       	brpl	.-8      	; 0x1218 <dio_vid_set_pin_value+0x66>
    1220:	28 2b       	or	r18, r24
    1222:	20 83       	st	Z, r18
    1224:	08 95       	ret
		else if (value == 0)
    1226:	44 23       	and	r20, r20
    1228:	09 f0       	breq	.+2      	; 0x122c <dio_vid_set_pin_value+0x7a>
    122a:	4b c0       	rjmp	.+150    	; 0x12c2 <dio_vid_set_pin_value+0x110>
			clrBit(PORTB, index);
    122c:	e8 e3       	ldi	r30, 0x38	; 56
    122e:	f0 e0       	ldi	r31, 0x00	; 0
    1230:	20 81       	ld	r18, Z
    1232:	81 e0       	ldi	r24, 0x01	; 1
    1234:	90 e0       	ldi	r25, 0x00	; 0
    1236:	02 c0       	rjmp	.+4      	; 0x123c <dio_vid_set_pin_value+0x8a>
    1238:	88 0f       	add	r24, r24
    123a:	99 1f       	adc	r25, r25
    123c:	6a 95       	dec	r22
    123e:	e2 f7       	brpl	.-8      	; 0x1238 <dio_vid_set_pin_value+0x86>
    1240:	80 95       	com	r24
    1242:	82 23       	and	r24, r18
    1244:	80 83       	st	Z, r24
    1246:	08 95       	ret
		break;
	case 2:
		if (value == 1)
    1248:	41 30       	cpi	r20, 0x01	; 1
    124a:	69 f4       	brne	.+26     	; 0x1266 <dio_vid_set_pin_value+0xb4>
			setBit(PORTC, index);
    124c:	e5 e3       	ldi	r30, 0x35	; 53
    124e:	f0 e0       	ldi	r31, 0x00	; 0
    1250:	20 81       	ld	r18, Z
    1252:	81 e0       	ldi	r24, 0x01	; 1
    1254:	90 e0       	ldi	r25, 0x00	; 0
    1256:	02 c0       	rjmp	.+4      	; 0x125c <dio_vid_set_pin_value+0xaa>
    1258:	88 0f       	add	r24, r24
    125a:	99 1f       	adc	r25, r25
    125c:	6a 95       	dec	r22
    125e:	e2 f7       	brpl	.-8      	; 0x1258 <dio_vid_set_pin_value+0xa6>
    1260:	28 2b       	or	r18, r24
    1262:	20 83       	st	Z, r18
    1264:	08 95       	ret
		else if (value == 0)
    1266:	44 23       	and	r20, r20
    1268:	61 f5       	brne	.+88     	; 0x12c2 <dio_vid_set_pin_value+0x110>
			clrBit(PORTC, index);
    126a:	e5 e3       	ldi	r30, 0x35	; 53
    126c:	f0 e0       	ldi	r31, 0x00	; 0
    126e:	20 81       	ld	r18, Z
    1270:	81 e0       	ldi	r24, 0x01	; 1
    1272:	90 e0       	ldi	r25, 0x00	; 0
    1274:	02 c0       	rjmp	.+4      	; 0x127a <dio_vid_set_pin_value+0xc8>
    1276:	88 0f       	add	r24, r24
    1278:	99 1f       	adc	r25, r25
    127a:	6a 95       	dec	r22
    127c:	e2 f7       	brpl	.-8      	; 0x1276 <dio_vid_set_pin_value+0xc4>
    127e:	80 95       	com	r24
    1280:	82 23       	and	r24, r18
    1282:	80 83       	st	Z, r24
    1284:	08 95       	ret
		break;
	case 3:
		if (value == 1)
    1286:	41 30       	cpi	r20, 0x01	; 1
    1288:	69 f4       	brne	.+26     	; 0x12a4 <dio_vid_set_pin_value+0xf2>
			setBit(PORTD, index);
    128a:	e2 e3       	ldi	r30, 0x32	; 50
    128c:	f0 e0       	ldi	r31, 0x00	; 0
    128e:	20 81       	ld	r18, Z
    1290:	81 e0       	ldi	r24, 0x01	; 1
    1292:	90 e0       	ldi	r25, 0x00	; 0
    1294:	02 c0       	rjmp	.+4      	; 0x129a <dio_vid_set_pin_value+0xe8>
    1296:	88 0f       	add	r24, r24
    1298:	99 1f       	adc	r25, r25
    129a:	6a 95       	dec	r22
    129c:	e2 f7       	brpl	.-8      	; 0x1296 <dio_vid_set_pin_value+0xe4>
    129e:	28 2b       	or	r18, r24
    12a0:	20 83       	st	Z, r18
    12a2:	08 95       	ret
		else if (value == 0)
    12a4:	44 23       	and	r20, r20
    12a6:	69 f4       	brne	.+26     	; 0x12c2 <dio_vid_set_pin_value+0x110>
			clrBit(PORTD, index);
    12a8:	e2 e3       	ldi	r30, 0x32	; 50
    12aa:	f0 e0       	ldi	r31, 0x00	; 0
    12ac:	20 81       	ld	r18, Z
    12ae:	81 e0       	ldi	r24, 0x01	; 1
    12b0:	90 e0       	ldi	r25, 0x00	; 0
    12b2:	02 c0       	rjmp	.+4      	; 0x12b8 <dio_vid_set_pin_value+0x106>
    12b4:	88 0f       	add	r24, r24
    12b6:	99 1f       	adc	r25, r25
    12b8:	6a 95       	dec	r22
    12ba:	e2 f7       	brpl	.-8      	; 0x12b4 <dio_vid_set_pin_value+0x102>
    12bc:	80 95       	com	r24
    12be:	82 23       	and	r24, r18
    12c0:	80 83       	st	Z, r24
    12c2:	08 95       	ret

000012c4 <dio_vid_set_pin_direction>:
	}
}


void dio_vid_set_pin_direction (u8 portNumber, u8 index, u8 direction) {
	switch (portNumber) {
    12c4:	81 30       	cpi	r24, 0x01	; 1
    12c6:	49 f1       	breq	.+82     	; 0x131a <dio_vid_set_pin_direction+0x56>
    12c8:	81 30       	cpi	r24, 0x01	; 1
    12ca:	38 f0       	brcs	.+14     	; 0x12da <dio_vid_set_pin_direction+0x16>
    12cc:	82 30       	cpi	r24, 0x02	; 2
    12ce:	09 f4       	brne	.+2      	; 0x12d2 <dio_vid_set_pin_direction+0xe>
    12d0:	44 c0       	rjmp	.+136    	; 0x135a <dio_vid_set_pin_direction+0x96>
    12d2:	83 30       	cpi	r24, 0x03	; 3
    12d4:	09 f0       	breq	.+2      	; 0x12d8 <dio_vid_set_pin_direction+0x14>
    12d6:	7e c0       	rjmp	.+252    	; 0x13d4 <dio_vid_set_pin_direction+0x110>
    12d8:	5f c0       	rjmp	.+190    	; 0x1398 <dio_vid_set_pin_direction+0xd4>
	case 0:
		if (direction == 1)
    12da:	41 30       	cpi	r20, 0x01	; 1
    12dc:	69 f4       	brne	.+26     	; 0x12f8 <dio_vid_set_pin_direction+0x34>
			setBit(DDRA, index);
    12de:	ea e3       	ldi	r30, 0x3A	; 58
    12e0:	f0 e0       	ldi	r31, 0x00	; 0
    12e2:	20 81       	ld	r18, Z
    12e4:	81 e0       	ldi	r24, 0x01	; 1
    12e6:	90 e0       	ldi	r25, 0x00	; 0
    12e8:	02 c0       	rjmp	.+4      	; 0x12ee <dio_vid_set_pin_direction+0x2a>
    12ea:	88 0f       	add	r24, r24
    12ec:	99 1f       	adc	r25, r25
    12ee:	6a 95       	dec	r22
    12f0:	e2 f7       	brpl	.-8      	; 0x12ea <dio_vid_set_pin_direction+0x26>
    12f2:	28 2b       	or	r18, r24
    12f4:	20 83       	st	Z, r18
    12f6:	08 95       	ret
		else if (direction == 0)
    12f8:	44 23       	and	r20, r20
    12fa:	09 f0       	breq	.+2      	; 0x12fe <dio_vid_set_pin_direction+0x3a>
    12fc:	6b c0       	rjmp	.+214    	; 0x13d4 <dio_vid_set_pin_direction+0x110>
			clrBit(DDRA, index);
    12fe:	ea e3       	ldi	r30, 0x3A	; 58
    1300:	f0 e0       	ldi	r31, 0x00	; 0
    1302:	20 81       	ld	r18, Z
    1304:	81 e0       	ldi	r24, 0x01	; 1
    1306:	90 e0       	ldi	r25, 0x00	; 0
    1308:	02 c0       	rjmp	.+4      	; 0x130e <dio_vid_set_pin_direction+0x4a>
    130a:	88 0f       	add	r24, r24
    130c:	99 1f       	adc	r25, r25
    130e:	6a 95       	dec	r22
    1310:	e2 f7       	brpl	.-8      	; 0x130a <dio_vid_set_pin_direction+0x46>
    1312:	80 95       	com	r24
    1314:	82 23       	and	r24, r18
    1316:	80 83       	st	Z, r24
    1318:	08 95       	ret
		break;
	case 1:
		if (direction == 1)
    131a:	41 30       	cpi	r20, 0x01	; 1
    131c:	69 f4       	brne	.+26     	; 0x1338 <dio_vid_set_pin_direction+0x74>
			setBit(DDRB, index);
    131e:	e7 e3       	ldi	r30, 0x37	; 55
    1320:	f0 e0       	ldi	r31, 0x00	; 0
    1322:	20 81       	ld	r18, Z
    1324:	81 e0       	ldi	r24, 0x01	; 1
    1326:	90 e0       	ldi	r25, 0x00	; 0
    1328:	02 c0       	rjmp	.+4      	; 0x132e <dio_vid_set_pin_direction+0x6a>
    132a:	88 0f       	add	r24, r24
    132c:	99 1f       	adc	r25, r25
    132e:	6a 95       	dec	r22
    1330:	e2 f7       	brpl	.-8      	; 0x132a <dio_vid_set_pin_direction+0x66>
    1332:	28 2b       	or	r18, r24
    1334:	20 83       	st	Z, r18
    1336:	08 95       	ret
		else if (direction == 0)
    1338:	44 23       	and	r20, r20
    133a:	09 f0       	breq	.+2      	; 0x133e <dio_vid_set_pin_direction+0x7a>
    133c:	4b c0       	rjmp	.+150    	; 0x13d4 <dio_vid_set_pin_direction+0x110>
			clrBit(DDRB, index);
    133e:	e7 e3       	ldi	r30, 0x37	; 55
    1340:	f0 e0       	ldi	r31, 0x00	; 0
    1342:	20 81       	ld	r18, Z
    1344:	81 e0       	ldi	r24, 0x01	; 1
    1346:	90 e0       	ldi	r25, 0x00	; 0
    1348:	02 c0       	rjmp	.+4      	; 0x134e <dio_vid_set_pin_direction+0x8a>
    134a:	88 0f       	add	r24, r24
    134c:	99 1f       	adc	r25, r25
    134e:	6a 95       	dec	r22
    1350:	e2 f7       	brpl	.-8      	; 0x134a <dio_vid_set_pin_direction+0x86>
    1352:	80 95       	com	r24
    1354:	82 23       	and	r24, r18
    1356:	80 83       	st	Z, r24
    1358:	08 95       	ret
		break;
	case 2:
		if (direction == 1)
    135a:	41 30       	cpi	r20, 0x01	; 1
    135c:	69 f4       	brne	.+26     	; 0x1378 <dio_vid_set_pin_direction+0xb4>
			setBit(DDRC, index);
    135e:	e4 e3       	ldi	r30, 0x34	; 52
    1360:	f0 e0       	ldi	r31, 0x00	; 0
    1362:	20 81       	ld	r18, Z
    1364:	81 e0       	ldi	r24, 0x01	; 1
    1366:	90 e0       	ldi	r25, 0x00	; 0
    1368:	02 c0       	rjmp	.+4      	; 0x136e <dio_vid_set_pin_direction+0xaa>
    136a:	88 0f       	add	r24, r24
    136c:	99 1f       	adc	r25, r25
    136e:	6a 95       	dec	r22
    1370:	e2 f7       	brpl	.-8      	; 0x136a <dio_vid_set_pin_direction+0xa6>
    1372:	28 2b       	or	r18, r24
    1374:	20 83       	st	Z, r18
    1376:	08 95       	ret
		else if (direction == 0)
    1378:	44 23       	and	r20, r20
    137a:	61 f5       	brne	.+88     	; 0x13d4 <dio_vid_set_pin_direction+0x110>
			clrBit(DDRC, index);
    137c:	e4 e3       	ldi	r30, 0x34	; 52
    137e:	f0 e0       	ldi	r31, 0x00	; 0
    1380:	20 81       	ld	r18, Z
    1382:	81 e0       	ldi	r24, 0x01	; 1
    1384:	90 e0       	ldi	r25, 0x00	; 0
    1386:	02 c0       	rjmp	.+4      	; 0x138c <dio_vid_set_pin_direction+0xc8>
    1388:	88 0f       	add	r24, r24
    138a:	99 1f       	adc	r25, r25
    138c:	6a 95       	dec	r22
    138e:	e2 f7       	brpl	.-8      	; 0x1388 <dio_vid_set_pin_direction+0xc4>
    1390:	80 95       	com	r24
    1392:	82 23       	and	r24, r18
    1394:	80 83       	st	Z, r24
    1396:	08 95       	ret
		break;
	case 3:
		if (direction == 1)
    1398:	41 30       	cpi	r20, 0x01	; 1
    139a:	69 f4       	brne	.+26     	; 0x13b6 <dio_vid_set_pin_direction+0xf2>
			setBit(DDRD, index);
    139c:	e1 e3       	ldi	r30, 0x31	; 49
    139e:	f0 e0       	ldi	r31, 0x00	; 0
    13a0:	20 81       	ld	r18, Z
    13a2:	81 e0       	ldi	r24, 0x01	; 1
    13a4:	90 e0       	ldi	r25, 0x00	; 0
    13a6:	02 c0       	rjmp	.+4      	; 0x13ac <dio_vid_set_pin_direction+0xe8>
    13a8:	88 0f       	add	r24, r24
    13aa:	99 1f       	adc	r25, r25
    13ac:	6a 95       	dec	r22
    13ae:	e2 f7       	brpl	.-8      	; 0x13a8 <dio_vid_set_pin_direction+0xe4>
    13b0:	28 2b       	or	r18, r24
    13b2:	20 83       	st	Z, r18
    13b4:	08 95       	ret
		else if (direction == 0)
    13b6:	44 23       	and	r20, r20
    13b8:	69 f4       	brne	.+26     	; 0x13d4 <dio_vid_set_pin_direction+0x110>
			clrBit(DDRD, index);
    13ba:	e1 e3       	ldi	r30, 0x31	; 49
    13bc:	f0 e0       	ldi	r31, 0x00	; 0
    13be:	20 81       	ld	r18, Z
    13c0:	81 e0       	ldi	r24, 0x01	; 1
    13c2:	90 e0       	ldi	r25, 0x00	; 0
    13c4:	02 c0       	rjmp	.+4      	; 0x13ca <dio_vid_set_pin_direction+0x106>
    13c6:	88 0f       	add	r24, r24
    13c8:	99 1f       	adc	r25, r25
    13ca:	6a 95       	dec	r22
    13cc:	e2 f7       	brpl	.-8      	; 0x13c6 <dio_vid_set_pin_direction+0x102>
    13ce:	80 95       	com	r24
    13d0:	82 23       	and	r24, r18
    13d2:	80 83       	st	Z, r24
    13d4:	08 95       	ret

000013d6 <moveRobot>:
		_delay_us(20000-duartion);
	}
}

void moveRobot (u8 moveCommand) {
	switch (moveCommand) {
    13d6:	82 33       	cpi	r24, 0x32	; 50
    13d8:	89 f0       	breq	.+34     	; 0x13fc <moveRobot+0x26>
    13da:	83 33       	cpi	r24, 0x33	; 51
    13dc:	28 f4       	brcc	.+10     	; 0x13e8 <moveRobot+0x12>
    13de:	80 33       	cpi	r24, 0x30	; 48
    13e0:	41 f0       	breq	.+16     	; 0x13f2 <moveRobot+0x1c>
    13e2:	81 33       	cpi	r24, 0x31	; 49
    13e4:	f1 f4       	brne	.+60     	; 0x1422 <moveRobot+0x4c>
    13e6:	0f c0       	rjmp	.+30     	; 0x1406 <moveRobot+0x30>
    13e8:	83 33       	cpi	r24, 0x33	; 51
    13ea:	91 f0       	breq	.+36     	; 0x1410 <moveRobot+0x3a>
    13ec:	84 33       	cpi	r24, 0x34	; 52
    13ee:	c9 f4       	brne	.+50     	; 0x1422 <moveRobot+0x4c>
    13f0:	14 c0       	rjmp	.+40     	; 0x141a <moveRobot+0x44>
		case STOP:
		dio_vid_set_port_value(ROBOT_PORT, 0x00);
    13f2:	80 e0       	ldi	r24, 0x00	; 0
    13f4:	60 e0       	ldi	r22, 0x00	; 0
    13f6:	0e 94 c8 08 	call	0x1190	; 0x1190 <dio_vid_set_port_value>
    13fa:	08 95       	ret
		break;
		case BACKWARD:
		dio_vid_set_port_value(ROBOT_PORT, 0x05);
    13fc:	80 e0       	ldi	r24, 0x00	; 0
    13fe:	65 e0       	ldi	r22, 0x05	; 5
    1400:	0e 94 c8 08 	call	0x1190	; 0x1190 <dio_vid_set_port_value>
    1404:	08 95       	ret
		break;
		case FORWARD:
		dio_vid_set_port_value(ROBOT_PORT, 0x0A);
    1406:	80 e0       	ldi	r24, 0x00	; 0
    1408:	6a e0       	ldi	r22, 0x0A	; 10
    140a:	0e 94 c8 08 	call	0x1190	; 0x1190 <dio_vid_set_port_value>
    140e:	08 95       	ret
		break;
		case RIGHT:
		dio_vid_set_port_value(ROBOT_PORT, 0x08);
    1410:	80 e0       	ldi	r24, 0x00	; 0
    1412:	68 e0       	ldi	r22, 0x08	; 8
    1414:	0e 94 c8 08 	call	0x1190	; 0x1190 <dio_vid_set_port_value>
    1418:	08 95       	ret
		break;
		case LEFT:
		dio_vid_set_port_value(ROBOT_PORT, 0x02);
    141a:	80 e0       	ldi	r24, 0x00	; 0
    141c:	62 e0       	ldi	r22, 0x02	; 2
    141e:	0e 94 c8 08 	call	0x1190	; 0x1190 <dio_vid_set_port_value>
    1422:	08 95       	ret

00001424 <setServoDuty>:
	BACKWARD = '2',
	RIGHT = '3',
	LEFT = '4'
};

void setServoDuty(u16 duartion) {
    1424:	2f 92       	push	r2
    1426:	3f 92       	push	r3
    1428:	4f 92       	push	r4
    142a:	5f 92       	push	r5
    142c:	6f 92       	push	r6
    142e:	7f 92       	push	r7
    1430:	9f 92       	push	r9
    1432:	af 92       	push	r10
    1434:	bf 92       	push	r11
    1436:	cf 92       	push	r12
    1438:	df 92       	push	r13
    143a:	ef 92       	push	r14
    143c:	ff 92       	push	r15
    143e:	0f 93       	push	r16
    1440:	1f 93       	push	r17
    1442:	df 93       	push	r29
    1444:	cf 93       	push	r28
    1446:	00 d0       	rcall	.+0      	; 0x1448 <setServoDuty+0x24>
    1448:	00 d0       	rcall	.+0      	; 0x144a <setServoDuty+0x26>
    144a:	cd b7       	in	r28, 0x3d	; 61
    144c:	de b7       	in	r29, 0x3e	; 62
    144e:	99 24       	eor	r9, r9
	u8 i;
	for (i=0; i<5; i++) {
		dio_vid_set_pin_value(SERVO_SIGNAL_PORT, SERVO_SIGNAL_PIN, HIGH);
		_delay_us(duartion);
    1450:	9c 01       	movw	r18, r24
    1452:	40 e0       	ldi	r20, 0x00	; 0
    1454:	50 e0       	ldi	r21, 0x00	; 0
    1456:	29 83       	std	Y+1, r18	; 0x01
    1458:	3a 83       	std	Y+2, r19	; 0x02
    145a:	4b 83       	std	Y+3, r20	; 0x03
    145c:	5c 83       	std	Y+4, r21	; 0x04
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
    145e:	22 24       	eor	r2, r2
    1460:	33 24       	eor	r3, r3
    1462:	23 94       	inc	r2
		dio_vid_set_pin_value(SERVO_SIGNAL_PORT, SERVO_SIGNAL_PIN, LOW);
		_delay_us(20000-duartion);
    1464:	20 e2       	ldi	r18, 0x20	; 32
    1466:	3e e4       	ldi	r19, 0x4E	; 78
    1468:	28 1b       	sub	r18, r24
    146a:	39 0b       	sbc	r19, r25
    146c:	29 01       	movw	r4, r18
    146e:	66 24       	eor	r6, r6
    1470:	77 24       	eor	r7, r7
};

void setServoDuty(u16 duartion) {
	u8 i;
	for (i=0; i<5; i++) {
		dio_vid_set_pin_value(SERVO_SIGNAL_PORT, SERVO_SIGNAL_PIN, HIGH);
    1472:	83 e0       	ldi	r24, 0x03	; 3
    1474:	60 e0       	ldi	r22, 0x00	; 0
    1476:	41 e0       	ldi	r20, 0x01	; 1
    1478:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <dio_vid_set_pin_value>
		_delay_us(duartion);
    147c:	69 81       	ldd	r22, Y+1	; 0x01
    147e:	7a 81       	ldd	r23, Y+2	; 0x02
    1480:	8b 81       	ldd	r24, Y+3	; 0x03
    1482:	9c 81       	ldd	r25, Y+4	; 0x04
    1484:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__floatunsisf>
    1488:	5b 01       	movw	r10, r22
    148a:	6c 01       	movw	r12, r24
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    148c:	2b ea       	ldi	r18, 0xAB	; 171
    148e:	3a ea       	ldi	r19, 0xAA	; 170
    1490:	4a e2       	ldi	r20, 0x2A	; 42
    1492:	50 e4       	ldi	r21, 0x40	; 64
    1494:	0e 94 62 10 	call	0x20c4	; 0x20c4 <__mulsf3>
    1498:	7b 01       	movw	r14, r22
    149a:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
    149c:	20 e0       	ldi	r18, 0x00	; 0
    149e:	30 e0       	ldi	r19, 0x00	; 0
    14a0:	40 e8       	ldi	r20, 0x80	; 128
    14a2:	5f e3       	ldi	r21, 0x3F	; 63
    14a4:	0e 94 14 0f 	call	0x1e28	; 0x1e28 <__cmpsf2>
    14a8:	88 23       	and	r24, r24
    14aa:	14 f4       	brge	.+4      	; 0x14b0 <setServoDuty+0x8c>
    14ac:	61 e0       	ldi	r22, 0x01	; 1
    14ae:	51 c0       	rjmp	.+162    	; 0x1552 <setServoDuty+0x12e>
		__ticks = 1;
	else if (__tmp > 255)
    14b0:	c8 01       	movw	r24, r16
    14b2:	b7 01       	movw	r22, r14
    14b4:	20 e0       	ldi	r18, 0x00	; 0
    14b6:	30 e0       	ldi	r19, 0x00	; 0
    14b8:	4f e7       	ldi	r20, 0x7F	; 127
    14ba:	53 e4       	ldi	r21, 0x43	; 67
    14bc:	0e 94 5e 10 	call	0x20bc	; 0x20bc <__gesf2>
    14c0:	18 16       	cp	r1, r24
    14c2:	0c f0       	brlt	.+2      	; 0x14c6 <setServoDuty+0xa2>
    14c4:	42 c0       	rjmp	.+132    	; 0x154a <setServoDuty+0x126>
	{
		_delay_ms(__us / 1000.0);
    14c6:	c6 01       	movw	r24, r12
    14c8:	b5 01       	movw	r22, r10
    14ca:	20 e0       	ldi	r18, 0x00	; 0
    14cc:	30 e0       	ldi	r19, 0x00	; 0
    14ce:	4a e7       	ldi	r20, 0x7A	; 122
    14d0:	54 e4       	ldi	r21, 0x44	; 68
    14d2:	0e 94 18 0f 	call	0x1e30	; 0x1e30 <__divsf3>
    14d6:	5b 01       	movw	r10, r22
    14d8:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    14da:	20 e0       	ldi	r18, 0x00	; 0
    14dc:	30 e0       	ldi	r19, 0x00	; 0
    14de:	4a ef       	ldi	r20, 0xFA	; 250
    14e0:	54 e4       	ldi	r21, 0x44	; 68
    14e2:	0e 94 62 10 	call	0x20c4	; 0x20c4 <__mulsf3>
    14e6:	7b 01       	movw	r14, r22
    14e8:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
    14ea:	20 e0       	ldi	r18, 0x00	; 0
    14ec:	30 e0       	ldi	r19, 0x00	; 0
    14ee:	40 e8       	ldi	r20, 0x80	; 128
    14f0:	5f e3       	ldi	r21, 0x3F	; 63
    14f2:	0e 94 14 0f 	call	0x1e28	; 0x1e28 <__cmpsf2>
    14f6:	88 23       	and	r24, r24
    14f8:	14 f4       	brge	.+4      	; 0x14fe <setServoDuty+0xda>
    14fa:	b1 01       	movw	r22, r2
    14fc:	22 c0       	rjmp	.+68     	; 0x1542 <setServoDuty+0x11e>
		__ticks = 1;
	else if (__tmp > 65535)
    14fe:	c8 01       	movw	r24, r16
    1500:	b7 01       	movw	r22, r14
    1502:	20 e0       	ldi	r18, 0x00	; 0
    1504:	3f ef       	ldi	r19, 0xFF	; 255
    1506:	4f e7       	ldi	r20, 0x7F	; 127
    1508:	57 e4       	ldi	r21, 0x47	; 71
    150a:	0e 94 5e 10 	call	0x20bc	; 0x20bc <__gesf2>
    150e:	18 16       	cp	r1, r24
    1510:	a4 f4       	brge	.+40     	; 0x153a <setServoDuty+0x116>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1512:	c6 01       	movw	r24, r12
    1514:	b5 01       	movw	r22, r10
    1516:	20 e0       	ldi	r18, 0x00	; 0
    1518:	30 e0       	ldi	r19, 0x00	; 0
    151a:	40 e2       	ldi	r20, 0x20	; 32
    151c:	51 e4       	ldi	r21, 0x41	; 65
    151e:	0e 94 62 10 	call	0x20c4	; 0x20c4 <__mulsf3>
    1522:	0e 94 80 0f 	call	0x1f00	; 0x1f00 <__fixunssfsi>
    1526:	cb 01       	movw	r24, r22
		while(__ticks)
    1528:	67 2b       	or	r22, r23
    152a:	a9 f0       	breq	.+42     	; 0x1556 <setServoDuty+0x132>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    152c:	e8 ec       	ldi	r30, 0xC8	; 200
    152e:	f0 e0       	ldi	r31, 0x00	; 0
    1530:	31 97       	sbiw	r30, 0x01	; 1
    1532:	f1 f7       	brne	.-4      	; 0x1530 <setServoDuty+0x10c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1534:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1536:	d1 f7       	brne	.-12     	; 0x152c <setServoDuty+0x108>
    1538:	0e c0       	rjmp	.+28     	; 0x1556 <setServoDuty+0x132>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    153a:	c8 01       	movw	r24, r16
    153c:	b7 01       	movw	r22, r14
    153e:	0e 94 80 0f 	call	0x1f00	; 0x1f00 <__fixunssfsi>
    1542:	cb 01       	movw	r24, r22
    1544:	01 97       	sbiw	r24, 0x01	; 1
    1546:	f1 f7       	brne	.-4      	; 0x1544 <setServoDuty+0x120>
    1548:	06 c0       	rjmp	.+12     	; 0x1556 <setServoDuty+0x132>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    154a:	c8 01       	movw	r24, r16
    154c:	b7 01       	movw	r22, r14
    154e:	0e 94 80 0f 	call	0x1f00	; 0x1f00 <__fixunssfsi>
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1552:	6a 95       	dec	r22
    1554:	f1 f7       	brne	.-4      	; 0x1552 <setServoDuty+0x12e>
		dio_vid_set_pin_value(SERVO_SIGNAL_PORT, SERVO_SIGNAL_PIN, LOW);
    1556:	83 e0       	ldi	r24, 0x03	; 3
    1558:	60 e0       	ldi	r22, 0x00	; 0
    155a:	40 e0       	ldi	r20, 0x00	; 0
    155c:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <dio_vid_set_pin_value>
		_delay_us(20000-duartion);
    1560:	c3 01       	movw	r24, r6
    1562:	b2 01       	movw	r22, r4
    1564:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__floatunsisf>
    1568:	5b 01       	movw	r10, r22
    156a:	6c 01       	movw	r12, r24
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    156c:	2b ea       	ldi	r18, 0xAB	; 171
    156e:	3a ea       	ldi	r19, 0xAA	; 170
    1570:	4a e2       	ldi	r20, 0x2A	; 42
    1572:	50 e4       	ldi	r21, 0x40	; 64
    1574:	0e 94 62 10 	call	0x20c4	; 0x20c4 <__mulsf3>
    1578:	7b 01       	movw	r14, r22
    157a:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
    157c:	20 e0       	ldi	r18, 0x00	; 0
    157e:	30 e0       	ldi	r19, 0x00	; 0
    1580:	40 e8       	ldi	r20, 0x80	; 128
    1582:	5f e3       	ldi	r21, 0x3F	; 63
    1584:	0e 94 14 0f 	call	0x1e28	; 0x1e28 <__cmpsf2>
    1588:	88 23       	and	r24, r24
    158a:	14 f4       	brge	.+4      	; 0x1590 <setServoDuty+0x16c>
    158c:	61 e0       	ldi	r22, 0x01	; 1
    158e:	51 c0       	rjmp	.+162    	; 0x1632 <setServoDuty+0x20e>
		__ticks = 1;
	else if (__tmp > 255)
    1590:	c8 01       	movw	r24, r16
    1592:	b7 01       	movw	r22, r14
    1594:	20 e0       	ldi	r18, 0x00	; 0
    1596:	30 e0       	ldi	r19, 0x00	; 0
    1598:	4f e7       	ldi	r20, 0x7F	; 127
    159a:	53 e4       	ldi	r21, 0x43	; 67
    159c:	0e 94 5e 10 	call	0x20bc	; 0x20bc <__gesf2>
    15a0:	18 16       	cp	r1, r24
    15a2:	0c f0       	brlt	.+2      	; 0x15a6 <setServoDuty+0x182>
    15a4:	42 c0       	rjmp	.+132    	; 0x162a <setServoDuty+0x206>
	{
		_delay_ms(__us / 1000.0);
    15a6:	c6 01       	movw	r24, r12
    15a8:	b5 01       	movw	r22, r10
    15aa:	20 e0       	ldi	r18, 0x00	; 0
    15ac:	30 e0       	ldi	r19, 0x00	; 0
    15ae:	4a e7       	ldi	r20, 0x7A	; 122
    15b0:	54 e4       	ldi	r21, 0x44	; 68
    15b2:	0e 94 18 0f 	call	0x1e30	; 0x1e30 <__divsf3>
    15b6:	5b 01       	movw	r10, r22
    15b8:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    15ba:	20 e0       	ldi	r18, 0x00	; 0
    15bc:	30 e0       	ldi	r19, 0x00	; 0
    15be:	4a ef       	ldi	r20, 0xFA	; 250
    15c0:	54 e4       	ldi	r21, 0x44	; 68
    15c2:	0e 94 62 10 	call	0x20c4	; 0x20c4 <__mulsf3>
    15c6:	7b 01       	movw	r14, r22
    15c8:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
    15ca:	20 e0       	ldi	r18, 0x00	; 0
    15cc:	30 e0       	ldi	r19, 0x00	; 0
    15ce:	40 e8       	ldi	r20, 0x80	; 128
    15d0:	5f e3       	ldi	r21, 0x3F	; 63
    15d2:	0e 94 14 0f 	call	0x1e28	; 0x1e28 <__cmpsf2>
    15d6:	88 23       	and	r24, r24
    15d8:	14 f4       	brge	.+4      	; 0x15de <setServoDuty+0x1ba>
    15da:	b1 01       	movw	r22, r2
    15dc:	22 c0       	rjmp	.+68     	; 0x1622 <setServoDuty+0x1fe>
		__ticks = 1;
	else if (__tmp > 65535)
    15de:	c8 01       	movw	r24, r16
    15e0:	b7 01       	movw	r22, r14
    15e2:	20 e0       	ldi	r18, 0x00	; 0
    15e4:	3f ef       	ldi	r19, 0xFF	; 255
    15e6:	4f e7       	ldi	r20, 0x7F	; 127
    15e8:	57 e4       	ldi	r21, 0x47	; 71
    15ea:	0e 94 5e 10 	call	0x20bc	; 0x20bc <__gesf2>
    15ee:	18 16       	cp	r1, r24
    15f0:	a4 f4       	brge	.+40     	; 0x161a <setServoDuty+0x1f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15f2:	c6 01       	movw	r24, r12
    15f4:	b5 01       	movw	r22, r10
    15f6:	20 e0       	ldi	r18, 0x00	; 0
    15f8:	30 e0       	ldi	r19, 0x00	; 0
    15fa:	40 e2       	ldi	r20, 0x20	; 32
    15fc:	51 e4       	ldi	r21, 0x41	; 65
    15fe:	0e 94 62 10 	call	0x20c4	; 0x20c4 <__mulsf3>
    1602:	0e 94 80 0f 	call	0x1f00	; 0x1f00 <__fixunssfsi>
    1606:	cb 01       	movw	r24, r22
		while(__ticks)
    1608:	67 2b       	or	r22, r23
    160a:	a9 f0       	breq	.+42     	; 0x1636 <setServoDuty+0x212>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    160c:	e8 ec       	ldi	r30, 0xC8	; 200
    160e:	f0 e0       	ldi	r31, 0x00	; 0
    1610:	31 97       	sbiw	r30, 0x01	; 1
    1612:	f1 f7       	brne	.-4      	; 0x1610 <setServoDuty+0x1ec>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1614:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1616:	d1 f7       	brne	.-12     	; 0x160c <setServoDuty+0x1e8>
    1618:	0e c0       	rjmp	.+28     	; 0x1636 <setServoDuty+0x212>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    161a:	c8 01       	movw	r24, r16
    161c:	b7 01       	movw	r22, r14
    161e:	0e 94 80 0f 	call	0x1f00	; 0x1f00 <__fixunssfsi>
    1622:	cb 01       	movw	r24, r22
    1624:	01 97       	sbiw	r24, 0x01	; 1
    1626:	f1 f7       	brne	.-4      	; 0x1624 <setServoDuty+0x200>
    1628:	06 c0       	rjmp	.+12     	; 0x1636 <setServoDuty+0x212>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    162a:	c8 01       	movw	r24, r16
    162c:	b7 01       	movw	r22, r14
    162e:	0e 94 80 0f 	call	0x1f00	; 0x1f00 <__fixunssfsi>
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1632:	6a 95       	dec	r22
    1634:	f1 f7       	brne	.-4      	; 0x1632 <setServoDuty+0x20e>
	LEFT = '4'
};

void setServoDuty(u16 duartion) {
	u8 i;
	for (i=0; i<5; i++) {
    1636:	93 94       	inc	r9
    1638:	35 e0       	ldi	r19, 0x05	; 5
    163a:	93 16       	cp	r9, r19
    163c:	09 f0       	breq	.+2      	; 0x1640 <setServoDuty+0x21c>
    163e:	19 cf       	rjmp	.-462    	; 0x1472 <setServoDuty+0x4e>
		dio_vid_set_pin_value(SERVO_SIGNAL_PORT, SERVO_SIGNAL_PIN, HIGH);
		_delay_us(duartion);
		dio_vid_set_pin_value(SERVO_SIGNAL_PORT, SERVO_SIGNAL_PIN, LOW);
		_delay_us(20000-duartion);
	}
}
    1640:	0f 90       	pop	r0
    1642:	0f 90       	pop	r0
    1644:	0f 90       	pop	r0
    1646:	0f 90       	pop	r0
    1648:	cf 91       	pop	r28
    164a:	df 91       	pop	r29
    164c:	1f 91       	pop	r17
    164e:	0f 91       	pop	r16
    1650:	ff 90       	pop	r15
    1652:	ef 90       	pop	r14
    1654:	df 90       	pop	r13
    1656:	cf 90       	pop	r12
    1658:	bf 90       	pop	r11
    165a:	af 90       	pop	r10
    165c:	9f 90       	pop	r9
    165e:	7f 90       	pop	r7
    1660:	6f 90       	pop	r6
    1662:	5f 90       	pop	r5
    1664:	4f 90       	pop	r4
    1666:	3f 90       	pop	r3
    1668:	2f 90       	pop	r2
    166a:	08 95       	ret

0000166c <main>:
}



int main (void)
{
    166c:	6f 92       	push	r6
    166e:	7f 92       	push	r7
    1670:	8f 92       	push	r8
    1672:	9f 92       	push	r9
    1674:	af 92       	push	r10
    1676:	bf 92       	push	r11
    1678:	cf 92       	push	r12
    167a:	df 92       	push	r13
    167c:	ef 92       	push	r14
    167e:	ff 92       	push	r15
    1680:	0f 93       	push	r16
    1682:	1f 93       	push	r17
    1684:	cf 93       	push	r28
    1686:	df 93       	push	r29
	
	u16 distance = 0, rightDistance = 0, leftDistance = 0;
	dio_vid_set_port_direction(ROBOT_PORT, 0xff);
    1688:	80 e0       	ldi	r24, 0x00	; 0
    168a:	6f ef       	ldi	r22, 0xFF	; 255
    168c:	0e 94 b7 08 	call	0x116e	; 0x116e <dio_vid_set_port_direction>
	dio_vid_set_port_value(ROBOT_PORT, 0x00);
    1690:	80 e0       	ldi	r24, 0x00	; 0
    1692:	60 e0       	ldi	r22, 0x00	; 0
    1694:	0e 94 c8 08 	call	0x1190	; 0x1190 <dio_vid_set_port_value>
	dio_vid_set_pin_direction(SERVO_SIGNAL_PORT, SERVO_SIGNAL_PIN, OUTPUT);
    1698:	83 e0       	ldi	r24, 0x03	; 3
    169a:	60 e0       	ldi	r22, 0x00	; 0
    169c:	41 e0       	ldi	r20, 0x01	; 1
    169e:	0e 94 62 09 	call	0x12c4	; 0x12c4 <dio_vid_set_pin_direction>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    16a2:	c8 ec       	ldi	r28, 0xC8	; 200
    16a4:	d0 e0       	ldi	r29, 0x00	; 0
					break;
				}
				else {
					moveRobot(FORWARD);
					setServoDuty(FORWARD_DURATION);
					moveRobot(BACKWARD);
    16a6:	0f 2e       	mov	r0, r31
    16a8:	f0 e4       	ldi	r31, 0x40	; 64
    16aa:	8f 2e       	mov	r8, r31
    16ac:	ff e1       	ldi	r31, 0x1F	; 31
    16ae:	9f 2e       	mov	r9, r31
    16b0:	f0 2d       	mov	r31, r0
			moveRobot(FORWARD);
		}
		else {
			while (1) {
				moveRobot(STOP);
				setServoDuty(1000);
    16b2:	84 ef       	ldi	r24, 0xF4	; 244
    16b4:	91 e0       	ldi	r25, 0x01	; 1
    16b6:	d8 2e       	mov	r13, r24
    16b8:	c9 2e       	mov	r12, r25
				if (rightDistance>20 || leftDistance>20) {
					setServoDuty(FORWARD_DURATION);
					moveRobot(BACKWARD);
					_delay_ms(800);
					moveRobot(STOP);
					rightDistance>leftDistance? moveRobot(RIGHT) : moveRobot(LEFT);
    16ba:	0f 2e       	mov	r0, r31
    16bc:	f8 e9       	ldi	r31, 0x98	; 152
    16be:	6f 2e       	mov	r6, r31
    16c0:	fa e3       	ldi	r31, 0x3A	; 58
    16c2:	7f 2e       	mov	r7, r31
    16c4:	f0 2d       	mov	r31, r0
					break;
				}
				else {
					moveRobot(FORWARD);
					setServoDuty(FORWARD_DURATION);
					moveRobot(BACKWARD);
    16c6:	c4 01       	movw	r24, r8
    16c8:	b8 2c       	mov	r11, r8
    16ca:	a9 2e       	mov	r10, r25
	u16 distance = 0, rightDistance = 0, leftDistance = 0;
	dio_vid_set_port_direction(ROBOT_PORT, 0xff);
	dio_vid_set_port_value(ROBOT_PORT, 0x00);
	dio_vid_set_pin_direction(SERVO_SIGNAL_PORT, SERVO_SIGNAL_PIN, OUTPUT);
	while (1) {
		setServoDuty(FORWARD_DURATION);
    16cc:	8c e6       	ldi	r24, 0x6C	; 108
    16ce:	97 e0       	ldi	r25, 0x07	; 7
    16d0:	0e 94 12 0a 	call	0x1424	; 0x1424 <setServoDuty>
		distance = ultrasonic_u16_get_distance();
    16d4:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <ultrasonic_u16_get_distance>
// 		setServoDuty(1500);
// 		rightDistance = ultrasonic_u16_get_distance();
// 		setServoDuty(2300);
// 		leftDistance = ultrasonic_u16_get_distance();

		if (distance>20) {
    16d8:	45 97       	sbiw	r24, 0x15	; 21
    16da:	20 f0       	brcs	.+8      	; 0x16e4 <main+0x78>
			moveRobot(FORWARD);
    16dc:	81 e3       	ldi	r24, 0x31	; 49
    16de:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <moveRobot>
    16e2:	f4 cf       	rjmp	.-24     	; 0x16cc <main+0x60>
		}
		else {
			while (1) {
				moveRobot(STOP);
    16e4:	80 e3       	ldi	r24, 0x30	; 48
    16e6:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <moveRobot>
				setServoDuty(1000);
    16ea:	88 ee       	ldi	r24, 0xE8	; 232
    16ec:	93 e0       	ldi	r25, 0x03	; 3
    16ee:	0e 94 12 0a 	call	0x1424	; 0x1424 <setServoDuty>
    16f2:	8d 2d       	mov	r24, r13
    16f4:	9c 2d       	mov	r25, r12
    16f6:	fe 01       	movw	r30, r28
    16f8:	31 97       	sbiw	r30, 0x01	; 1
    16fa:	f1 f7       	brne	.-4      	; 0x16f8 <main+0x8c>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16fc:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16fe:	d9 f7       	brne	.-10     	; 0x16f6 <main+0x8a>
				_delay_ms(50);
				rightDistance = ultrasonic_u16_get_distance();
    1700:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <ultrasonic_u16_get_distance>
    1704:	7c 01       	movw	r14, r24
				setServoDuty(2500);
    1706:	84 ec       	ldi	r24, 0xC4	; 196
    1708:	99 e0       	ldi	r25, 0x09	; 9
    170a:	0e 94 12 0a 	call	0x1424	; 0x1424 <setServoDuty>
    170e:	8d 2d       	mov	r24, r13
    1710:	9c 2d       	mov	r25, r12
    1712:	fe 01       	movw	r30, r28
    1714:	31 97       	sbiw	r30, 0x01	; 1
    1716:	f1 f7       	brne	.-4      	; 0x1714 <main+0xa8>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1718:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    171a:	d9 f7       	brne	.-10     	; 0x1712 <main+0xa6>
				_delay_ms(50);
				leftDistance = ultrasonic_u16_get_distance();
    171c:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <ultrasonic_u16_get_distance>
    1720:	8c 01       	movw	r16, r24
				if (rightDistance>20 || leftDistance>20) {
    1722:	85 e1       	ldi	r24, 0x15	; 21
    1724:	e8 16       	cp	r14, r24
    1726:	f1 04       	cpc	r15, r1
    1728:	18 f4       	brcc	.+6      	; 0x1730 <main+0xc4>
    172a:	05 31       	cpi	r16, 0x15	; 21
    172c:	11 05       	cpc	r17, r1
    172e:	38 f1       	brcs	.+78     	; 0x177e <main+0x112>
					setServoDuty(FORWARD_DURATION);
    1730:	8c e6       	ldi	r24, 0x6C	; 108
    1732:	97 e0       	ldi	r25, 0x07	; 7
    1734:	0e 94 12 0a 	call	0x1424	; 0x1424 <setServoDuty>
					moveRobot(BACKWARD);
    1738:	82 e3       	ldi	r24, 0x32	; 50
    173a:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <moveRobot>
    173e:	94 01       	movw	r18, r8
    1740:	ce 01       	movw	r24, r28
    1742:	01 97       	sbiw	r24, 0x01	; 1
    1744:	f1 f7       	brne	.-4      	; 0x1742 <main+0xd6>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1746:	21 50       	subi	r18, 0x01	; 1
    1748:	30 40       	sbci	r19, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    174a:	d1 f7       	brne	.-12     	; 0x1740 <main+0xd4>
					_delay_ms(800);
					moveRobot(STOP);
    174c:	80 e3       	ldi	r24, 0x30	; 48
    174e:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <moveRobot>
					rightDistance>leftDistance? moveRobot(RIGHT) : moveRobot(LEFT);
    1752:	0e 15       	cp	r16, r14
    1754:	1f 05       	cpc	r17, r15
    1756:	28 f4       	brcc	.+10     	; 0x1762 <main+0xf6>
    1758:	83 e3       	ldi	r24, 0x33	; 51
    175a:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <moveRobot>
    175e:	93 01       	movw	r18, r6
    1760:	04 c0       	rjmp	.+8      	; 0x176a <main+0xfe>
    1762:	84 e3       	ldi	r24, 0x34	; 52
    1764:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <moveRobot>
    1768:	93 01       	movw	r18, r6
    176a:	ce 01       	movw	r24, r28
    176c:	01 97       	sbiw	r24, 0x01	; 1
    176e:	f1 f7       	brne	.-4      	; 0x176c <main+0x100>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1770:	21 50       	subi	r18, 0x01	; 1
    1772:	30 40       	sbci	r19, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1774:	d1 f7       	brne	.-12     	; 0x176a <main+0xfe>
					_delay_ms(1500);
					moveRobot(STOP);
    1776:	80 e3       	ldi	r24, 0x30	; 48
    1778:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <moveRobot>
    177c:	a7 cf       	rjmp	.-178    	; 0x16cc <main+0x60>
					break;
				}
				else {
					moveRobot(FORWARD);
    177e:	81 e3       	ldi	r24, 0x31	; 49
    1780:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <moveRobot>
					setServoDuty(FORWARD_DURATION);
    1784:	8c e6       	ldi	r24, 0x6C	; 108
    1786:	97 e0       	ldi	r25, 0x07	; 7
    1788:	0e 94 12 0a 	call	0x1424	; 0x1424 <setServoDuty>
					moveRobot(BACKWARD);
    178c:	82 e3       	ldi	r24, 0x32	; 50
    178e:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <moveRobot>
    1792:	8b 2d       	mov	r24, r11
    1794:	9a 2d       	mov	r25, r10
    1796:	fe 01       	movw	r30, r28
    1798:	31 97       	sbiw	r30, 0x01	; 1
    179a:	f1 f7       	brne	.-4      	; 0x1798 <main+0x12c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    179c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    179e:	d9 f7       	brne	.-10     	; 0x1796 <main+0x12a>
					_delay_ms(800);
					moveRobot(STOP);
    17a0:	80 e3       	ldi	r24, 0x30	; 48
    17a2:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <moveRobot>
    17a6:	9e cf       	rjmp	.-196    	; 0x16e4 <main+0x78>

000017a8 <timer_vid_set_isr_timer0_ctc>:
void(*timer1a_ctc_isr)(void);
void(*timer1b_ctc_isr)(void);
void(*timer2_ctc_isr)(void);
void timer_vid_set_isr_timer0_ctc (void (*callback_function) (void))
{
	timer0_ctc_isr=callback_function;
    17a8:	90 93 6f 01 	sts	0x016F, r25
    17ac:	80 93 6e 01 	sts	0x016E, r24
}
    17b0:	08 95       	ret

000017b2 <__vector_10>:
}


void __vector_10 (void) __attribute__ ((signal,__INTR_ATTRS)) ;
void __vector_10 (void)
{
    17b2:	1f 92       	push	r1
    17b4:	0f 92       	push	r0
    17b6:	0f b6       	in	r0, 0x3f	; 63
    17b8:	0f 92       	push	r0
    17ba:	11 24       	eor	r1, r1
    17bc:	2f 93       	push	r18
    17be:	3f 93       	push	r19
    17c0:	4f 93       	push	r20
    17c2:	5f 93       	push	r21
    17c4:	6f 93       	push	r22
    17c6:	7f 93       	push	r23
    17c8:	8f 93       	push	r24
    17ca:	9f 93       	push	r25
    17cc:	af 93       	push	r26
    17ce:	bf 93       	push	r27
    17d0:	ef 93       	push	r30
    17d2:	ff 93       	push	r31
	timer0_ctc_isr();
    17d4:	e0 91 6e 01 	lds	r30, 0x016E
    17d8:	f0 91 6f 01 	lds	r31, 0x016F
    17dc:	09 95       	icall
}
    17de:	ff 91       	pop	r31
    17e0:	ef 91       	pop	r30
    17e2:	bf 91       	pop	r27
    17e4:	af 91       	pop	r26
    17e6:	9f 91       	pop	r25
    17e8:	8f 91       	pop	r24
    17ea:	7f 91       	pop	r23
    17ec:	6f 91       	pop	r22
    17ee:	5f 91       	pop	r21
    17f0:	4f 91       	pop	r20
    17f2:	3f 91       	pop	r19
    17f4:	2f 91       	pop	r18
    17f6:	0f 90       	pop	r0
    17f8:	0f be       	out	0x3f, r0	; 63
    17fa:	0f 90       	pop	r0
    17fc:	1f 90       	pop	r1
    17fe:	18 95       	reti

00001800 <__vector_7>:
void __vector_7(void) __attribute__ ((signal,__INTR_ATTRS)) ;
void __vector_7 (void)
{
    1800:	1f 92       	push	r1
    1802:	0f 92       	push	r0
    1804:	0f b6       	in	r0, 0x3f	; 63
    1806:	0f 92       	push	r0
    1808:	11 24       	eor	r1, r1
    180a:	2f 93       	push	r18
    180c:	3f 93       	push	r19
    180e:	4f 93       	push	r20
    1810:	5f 93       	push	r21
    1812:	6f 93       	push	r22
    1814:	7f 93       	push	r23
    1816:	8f 93       	push	r24
    1818:	9f 93       	push	r25
    181a:	af 93       	push	r26
    181c:	bf 93       	push	r27
    181e:	ef 93       	push	r30
    1820:	ff 93       	push	r31
	timer1a_ctc_isr();
    1822:	e0 91 68 01 	lds	r30, 0x0168
    1826:	f0 91 69 01 	lds	r31, 0x0169
    182a:	09 95       	icall
}
    182c:	ff 91       	pop	r31
    182e:	ef 91       	pop	r30
    1830:	bf 91       	pop	r27
    1832:	af 91       	pop	r26
    1834:	9f 91       	pop	r25
    1836:	8f 91       	pop	r24
    1838:	7f 91       	pop	r23
    183a:	6f 91       	pop	r22
    183c:	5f 91       	pop	r21
    183e:	4f 91       	pop	r20
    1840:	3f 91       	pop	r19
    1842:	2f 91       	pop	r18
    1844:	0f 90       	pop	r0
    1846:	0f be       	out	0x3f, r0	; 63
    1848:	0f 90       	pop	r0
    184a:	1f 90       	pop	r1
    184c:	18 95       	reti

0000184e <__vector_8>:
void __vector_8(void) __attribute__ ((signal,__INTR_ATTRS)) ;
void __vector_8 (void)
{
    184e:	1f 92       	push	r1
    1850:	0f 92       	push	r0
    1852:	0f b6       	in	r0, 0x3f	; 63
    1854:	0f 92       	push	r0
    1856:	11 24       	eor	r1, r1
    1858:	2f 93       	push	r18
    185a:	3f 93       	push	r19
    185c:	4f 93       	push	r20
    185e:	5f 93       	push	r21
    1860:	6f 93       	push	r22
    1862:	7f 93       	push	r23
    1864:	8f 93       	push	r24
    1866:	9f 93       	push	r25
    1868:	af 93       	push	r26
    186a:	bf 93       	push	r27
    186c:	ef 93       	push	r30
    186e:	ff 93       	push	r31
	timer1b_ctc_isr();
    1870:	e0 91 6a 01 	lds	r30, 0x016A
    1874:	f0 91 6b 01 	lds	r31, 0x016B
    1878:	09 95       	icall
}
    187a:	ff 91       	pop	r31
    187c:	ef 91       	pop	r30
    187e:	bf 91       	pop	r27
    1880:	af 91       	pop	r26
    1882:	9f 91       	pop	r25
    1884:	8f 91       	pop	r24
    1886:	7f 91       	pop	r23
    1888:	6f 91       	pop	r22
    188a:	5f 91       	pop	r21
    188c:	4f 91       	pop	r20
    188e:	3f 91       	pop	r19
    1890:	2f 91       	pop	r18
    1892:	0f 90       	pop	r0
    1894:	0f be       	out	0x3f, r0	; 63
    1896:	0f 90       	pop	r0
    1898:	1f 90       	pop	r1
    189a:	18 95       	reti

0000189c <__vector_4>:
void __vector_4(void) __attribute__ ((signal,__INTR_ATTRS)) ;
void __vector_4 (void)
{
    189c:	1f 92       	push	r1
    189e:	0f 92       	push	r0
    18a0:	0f b6       	in	r0, 0x3f	; 63
    18a2:	0f 92       	push	r0
    18a4:	11 24       	eor	r1, r1
    18a6:	2f 93       	push	r18
    18a8:	3f 93       	push	r19
    18aa:	4f 93       	push	r20
    18ac:	5f 93       	push	r21
    18ae:	6f 93       	push	r22
    18b0:	7f 93       	push	r23
    18b2:	8f 93       	push	r24
    18b4:	9f 93       	push	r25
    18b6:	af 93       	push	r26
    18b8:	bf 93       	push	r27
    18ba:	ef 93       	push	r30
    18bc:	ff 93       	push	r31
	timer2_ctc_isr();
    18be:	e0 91 6c 01 	lds	r30, 0x016C
    18c2:	f0 91 6d 01 	lds	r31, 0x016D
    18c6:	09 95       	icall
}
    18c8:	ff 91       	pop	r31
    18ca:	ef 91       	pop	r30
    18cc:	bf 91       	pop	r27
    18ce:	af 91       	pop	r26
    18d0:	9f 91       	pop	r25
    18d2:	8f 91       	pop	r24
    18d4:	7f 91       	pop	r23
    18d6:	6f 91       	pop	r22
    18d8:	5f 91       	pop	r21
    18da:	4f 91       	pop	r20
    18dc:	3f 91       	pop	r19
    18de:	2f 91       	pop	r18
    18e0:	0f 90       	pop	r0
    18e2:	0f be       	out	0x3f, r0	; 63
    18e4:	0f 90       	pop	r0
    18e6:	1f 90       	pop	r1
    18e8:	18 95       	reti

000018ea <timer_vid_init0_ctc>:




void timer_vid_init0_ctc (u16 prescalar, u8 top, u8 interrupt)
{
    18ea:	9c 01       	movw	r18, r24
	/*CTC MODE*/
	setBit(TCCR0, WGM01);
    18ec:	e3 e5       	ldi	r30, 0x53	; 83
    18ee:	f0 e0       	ldi	r31, 0x00	; 0
    18f0:	80 81       	ld	r24, Z
    18f2:	88 60       	ori	r24, 0x08	; 8
    18f4:	80 83       	st	Z, r24
	clrBit(TCCR0, WGM00);
    18f6:	80 81       	ld	r24, Z
    18f8:	8f 7b       	andi	r24, 0xBF	; 191
    18fa:	80 83       	st	Z, r24
	
	/*SETTING PRESCALAR*/
	switch (prescalar) {
    18fc:	20 34       	cpi	r18, 0x40	; 64
    18fe:	31 05       	cpc	r19, r1
    1900:	f1 f0       	breq	.+60     	; 0x193e <timer_vid_init0_ctc+0x54>
    1902:	21 34       	cpi	r18, 0x41	; 65
    1904:	31 05       	cpc	r19, r1
    1906:	38 f4       	brcc	.+14     	; 0x1916 <timer_vid_init0_ctc+0x2c>
    1908:	21 30       	cpi	r18, 0x01	; 1
    190a:	31 05       	cpc	r19, r1
    190c:	61 f0       	breq	.+24     	; 0x1926 <timer_vid_init0_ctc+0x3c>
    190e:	28 30       	cpi	r18, 0x08	; 8
    1910:	31 05       	cpc	r19, r1
    1912:	31 f5       	brne	.+76     	; 0x1960 <timer_vid_init0_ctc+0x76>
    1914:	0e c0       	rjmp	.+28     	; 0x1932 <timer_vid_init0_ctc+0x48>
    1916:	81 e0       	ldi	r24, 0x01	; 1
    1918:	20 30       	cpi	r18, 0x00	; 0
    191a:	38 07       	cpc	r19, r24
    191c:	b1 f0       	breq	.+44     	; 0x194a <timer_vid_init0_ctc+0x60>
    191e:	20 50       	subi	r18, 0x00	; 0
    1920:	34 40       	sbci	r19, 0x04	; 4
    1922:	f1 f4       	brne	.+60     	; 0x1960 <timer_vid_init0_ctc+0x76>
    1924:	18 c0       	rjmp	.+48     	; 0x1956 <timer_vid_init0_ctc+0x6c>
		case 1:
		TCCR0 = TCCR0| 0b00000001;
    1926:	e3 e5       	ldi	r30, 0x53	; 83
    1928:	f0 e0       	ldi	r31, 0x00	; 0
    192a:	80 81       	ld	r24, Z
    192c:	81 60       	ori	r24, 0x01	; 1
    192e:	80 83       	st	Z, r24
    1930:	17 c0       	rjmp	.+46     	; 0x1960 <timer_vid_init0_ctc+0x76>
		break;
		case 8:
		TCCR0 = TCCR0| 0b00000010;
    1932:	e3 e5       	ldi	r30, 0x53	; 83
    1934:	f0 e0       	ldi	r31, 0x00	; 0
    1936:	80 81       	ld	r24, Z
    1938:	82 60       	ori	r24, 0x02	; 2
    193a:	80 83       	st	Z, r24
    193c:	11 c0       	rjmp	.+34     	; 0x1960 <timer_vid_init0_ctc+0x76>
		break;
		case 64:
		TCCR0 = TCCR0| 0b00000011;
    193e:	e3 e5       	ldi	r30, 0x53	; 83
    1940:	f0 e0       	ldi	r31, 0x00	; 0
    1942:	80 81       	ld	r24, Z
    1944:	83 60       	ori	r24, 0x03	; 3
    1946:	80 83       	st	Z, r24
    1948:	0b c0       	rjmp	.+22     	; 0x1960 <timer_vid_init0_ctc+0x76>
		break;
		case 256:
		TCCR0 = TCCR0| 0b00000100;
    194a:	e3 e5       	ldi	r30, 0x53	; 83
    194c:	f0 e0       	ldi	r31, 0x00	; 0
    194e:	80 81       	ld	r24, Z
    1950:	84 60       	ori	r24, 0x04	; 4
    1952:	80 83       	st	Z, r24
    1954:	05 c0       	rjmp	.+10     	; 0x1960 <timer_vid_init0_ctc+0x76>
		break;
		case 1024:
		TCCR0 = TCCR0| 0b00000101;
    1956:	e3 e5       	ldi	r30, 0x53	; 83
    1958:	f0 e0       	ldi	r31, 0x00	; 0
    195a:	80 81       	ld	r24, Z
    195c:	85 60       	ori	r24, 0x05	; 5
    195e:	80 83       	st	Z, r24
		default:
		break;
	}
	
	/*SETTING THE TOP VALUE*/
	OCR0 = top;
    1960:	6c bf       	out	0x3c, r22	; 60
	
	/*ENABLE INTERRUPT*/
	if (interrupt) {
    1962:	44 23       	and	r20, r20
    1964:	59 f0       	breq	.+22     	; 0x197c <timer_vid_init0_ctc+0x92>
		/*ENABLE GLOBAL INTERRUPT*/
		setBit(SREG, 7);
    1966:	ef e5       	ldi	r30, 0x5F	; 95
    1968:	f0 e0       	ldi	r31, 0x00	; 0
    196a:	80 81       	ld	r24, Z
    196c:	80 68       	ori	r24, 0x80	; 128
    196e:	80 83       	st	Z, r24
		/*ENABLE TIMER0 INTERRUPT*/
		setBit(TIMSK, OCIE0);
    1970:	e9 e5       	ldi	r30, 0x59	; 89
    1972:	f0 e0       	ldi	r31, 0x00	; 0
    1974:	80 81       	ld	r24, Z
    1976:	82 60       	ori	r24, 0x02	; 2
    1978:	80 83       	st	Z, r24
    197a:	08 95       	ret
	}
	else {
		clrBit(TIMSK, OCIE0);
    197c:	e9 e5       	ldi	r30, 0x59	; 89
    197e:	f0 e0       	ldi	r31, 0x00	; 0
    1980:	80 81       	ld	r24, Z
    1982:	8d 7f       	andi	r24, 0xFD	; 253
    1984:	80 83       	st	Z, r24
    1986:	08 95       	ret

00001988 <ultrasonic_timer>:
#include "dio.h"
#include "timer.h"
#include "ultrasonic_sensor_cfg.h"
volatile u64 ultrasonic_counter=0;

void ultrasonic_timer (void) {
    1988:	1f 93       	push	r17
	ultrasonic_counter++;
    198a:	80 91 60 01 	lds	r24, 0x0160
    198e:	20 91 61 01 	lds	r18, 0x0161
    1992:	30 91 62 01 	lds	r19, 0x0162
    1996:	40 91 63 01 	lds	r20, 0x0163
    199a:	60 91 64 01 	lds	r22, 0x0164
    199e:	f0 91 65 01 	lds	r31, 0x0165
    19a2:	a0 91 66 01 	lds	r26, 0x0166
    19a6:	10 91 67 01 	lds	r17, 0x0167
    19aa:	b8 2f       	mov	r27, r24
    19ac:	bf 5f       	subi	r27, 0xFF	; 255
    19ae:	91 e0       	ldi	r25, 0x01	; 1
    19b0:	b8 17       	cp	r27, r24
    19b2:	08 f0       	brcs	.+2      	; 0x19b6 <ultrasonic_timer+0x2e>
    19b4:	90 e0       	ldi	r25, 0x00	; 0
    19b6:	e2 2f       	mov	r30, r18
    19b8:	81 e0       	ldi	r24, 0x01	; 1
    19ba:	22 17       	cp	r18, r18
    19bc:	08 f0       	brcs	.+2      	; 0x19c0 <ultrasonic_timer+0x38>
    19be:	80 e0       	ldi	r24, 0x00	; 0
    19c0:	29 2f       	mov	r18, r25
    19c2:	2e 0f       	add	r18, r30
    19c4:	91 e0       	ldi	r25, 0x01	; 1
    19c6:	2e 17       	cp	r18, r30
    19c8:	08 f0       	brcs	.+2      	; 0x19cc <ultrasonic_timer+0x44>
    19ca:	90 e0       	ldi	r25, 0x00	; 0
    19cc:	89 2b       	or	r24, r25
    19ce:	e2 2f       	mov	r30, r18
    19d0:	73 2f       	mov	r23, r19
    19d2:	91 e0       	ldi	r25, 0x01	; 1
    19d4:	33 17       	cp	r19, r19
    19d6:	08 f0       	brcs	.+2      	; 0x19da <ultrasonic_timer+0x52>
    19d8:	90 e0       	ldi	r25, 0x00	; 0
    19da:	28 2f       	mov	r18, r24
    19dc:	27 0f       	add	r18, r23
    19de:	81 e0       	ldi	r24, 0x01	; 1
    19e0:	27 17       	cp	r18, r23
    19e2:	08 f0       	brcs	.+2      	; 0x19e6 <ultrasonic_timer+0x5e>
    19e4:	80 e0       	ldi	r24, 0x00	; 0
    19e6:	98 2b       	or	r25, r24
    19e8:	72 2f       	mov	r23, r18
    19ea:	54 2f       	mov	r21, r20
    19ec:	81 e0       	ldi	r24, 0x01	; 1
    19ee:	44 17       	cp	r20, r20
    19f0:	08 f0       	brcs	.+2      	; 0x19f4 <ultrasonic_timer+0x6c>
    19f2:	80 e0       	ldi	r24, 0x00	; 0
    19f4:	29 2f       	mov	r18, r25
    19f6:	25 0f       	add	r18, r21
    19f8:	91 e0       	ldi	r25, 0x01	; 1
    19fa:	25 17       	cp	r18, r21
    19fc:	08 f0       	brcs	.+2      	; 0x1a00 <ultrasonic_timer+0x78>
    19fe:	90 e0       	ldi	r25, 0x00	; 0
    1a00:	89 2b       	or	r24, r25
    1a02:	52 2f       	mov	r21, r18
    1a04:	46 2f       	mov	r20, r22
    1a06:	91 e0       	ldi	r25, 0x01	; 1
    1a08:	66 17       	cp	r22, r22
    1a0a:	08 f0       	brcs	.+2      	; 0x1a0e <ultrasonic_timer+0x86>
    1a0c:	90 e0       	ldi	r25, 0x00	; 0
    1a0e:	28 2f       	mov	r18, r24
    1a10:	24 0f       	add	r18, r20
    1a12:	81 e0       	ldi	r24, 0x01	; 1
    1a14:	24 17       	cp	r18, r20
    1a16:	08 f0       	brcs	.+2      	; 0x1a1a <ultrasonic_timer+0x92>
    1a18:	80 e0       	ldi	r24, 0x00	; 0
    1a1a:	98 2b       	or	r25, r24
    1a1c:	42 2f       	mov	r20, r18
    1a1e:	3f 2f       	mov	r19, r31
    1a20:	21 e0       	ldi	r18, 0x01	; 1
    1a22:	ff 17       	cp	r31, r31
    1a24:	08 f0       	brcs	.+2      	; 0x1a28 <ultrasonic_timer+0xa0>
    1a26:	20 e0       	ldi	r18, 0x00	; 0
    1a28:	93 0f       	add	r25, r19
    1a2a:	81 e0       	ldi	r24, 0x01	; 1
    1a2c:	93 17       	cp	r25, r19
    1a2e:	08 f0       	brcs	.+2      	; 0x1a32 <ultrasonic_timer+0xaa>
    1a30:	80 e0       	ldi	r24, 0x00	; 0
    1a32:	28 2b       	or	r18, r24
    1a34:	39 2f       	mov	r19, r25
    1a36:	9a 2f       	mov	r25, r26
    1a38:	81 e0       	ldi	r24, 0x01	; 1
    1a3a:	aa 17       	cp	r26, r26
    1a3c:	08 f0       	brcs	.+2      	; 0x1a40 <ultrasonic_timer+0xb8>
    1a3e:	80 e0       	ldi	r24, 0x00	; 0
    1a40:	62 2f       	mov	r22, r18
    1a42:	69 0f       	add	r22, r25
    1a44:	21 e0       	ldi	r18, 0x01	; 1
    1a46:	69 17       	cp	r22, r25
    1a48:	08 f0       	brcs	.+2      	; 0x1a4c <ultrasonic_timer+0xc4>
    1a4a:	20 e0       	ldi	r18, 0x00	; 0
    1a4c:	82 2b       	or	r24, r18
    1a4e:	81 0f       	add	r24, r17
    1a50:	b0 93 60 01 	sts	0x0160, r27
    1a54:	e0 93 61 01 	sts	0x0161, r30
    1a58:	70 93 62 01 	sts	0x0162, r23
    1a5c:	50 93 63 01 	sts	0x0163, r21
    1a60:	40 93 64 01 	sts	0x0164, r20
    1a64:	30 93 65 01 	sts	0x0165, r19
    1a68:	60 93 66 01 	sts	0x0166, r22
    1a6c:	80 93 67 01 	sts	0x0167, r24
}
    1a70:	1f 91       	pop	r17
    1a72:	08 95       	ret

00001a74 <ultrasonic_u16_get_distance>:

u16 ultrasonic_u16_get_distance () {
    1a74:	5f 92       	push	r5
    1a76:	6f 92       	push	r6
    1a78:	7f 92       	push	r7
    1a7a:	8f 92       	push	r8
    1a7c:	9f 92       	push	r9
    1a7e:	af 92       	push	r10
    1a80:	bf 92       	push	r11
    1a82:	cf 92       	push	r12
    1a84:	df 92       	push	r13
    1a86:	ef 92       	push	r14
    1a88:	ff 92       	push	r15
    1a8a:	0f 93       	push	r16
    1a8c:	1f 93       	push	r17
	u64 ultrasonic_timer_ticks = 0;
	u16 distance = 0;
	dio_vid_set_pin_direction(TRIG_PORT, TRIG_PIN, OUTPUT);
    1a8e:	83 e0       	ldi	r24, 0x03	; 3
    1a90:	61 e0       	ldi	r22, 0x01	; 1
    1a92:	41 e0       	ldi	r20, 0x01	; 1
    1a94:	0e 94 62 09 	call	0x12c4	; 0x12c4 <dio_vid_set_pin_direction>
	/*INT0, ECHO*/
	dio_vid_set_pin_direction(ECHO_PORT, ECHO_PIN, INPUT);
    1a98:	83 e0       	ldi	r24, 0x03	; 3
    1a9a:	62 e0       	ldi	r22, 0x02	; 2
    1a9c:	40 e0       	ldi	r20, 0x00	; 0
    1a9e:	0e 94 62 09 	call	0x12c4	; 0x12c4 <dio_vid_set_pin_direction>
	dio_vid_set_pin_value(ECHO_PORT, ECHO_PIN, HIGH);
    1aa2:	83 e0       	ldi	r24, 0x03	; 3
    1aa4:	62 e0       	ldi	r22, 0x02	; 2
    1aa6:	41 e0       	ldi	r20, 0x01	; 1
    1aa8:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <dio_vid_set_pin_value>
	timer_vid_init0_ctc(1,255,1);
    1aac:	81 e0       	ldi	r24, 0x01	; 1
    1aae:	90 e0       	ldi	r25, 0x00	; 0
    1ab0:	6f ef       	ldi	r22, 0xFF	; 255
    1ab2:	41 e0       	ldi	r20, 0x01	; 1
    1ab4:	0e 94 75 0c 	call	0x18ea	; 0x18ea <timer_vid_init0_ctc>
	timer_vid_set_isr_timer0_ctc(ultrasonic_timer);
    1ab8:	84 ec       	ldi	r24, 0xC4	; 196
    1aba:	9c e0       	ldi	r25, 0x0C	; 12
    1abc:	0e 94 d4 0b 	call	0x17a8	; 0x17a8 <timer_vid_set_isr_timer0_ctc>
	/* Give 10us trigger pulse on trig pin */
	dio_vid_set_pin_value(TRIG_PORT, TRIG_PIN, HIGH);
    1ac0:	83 e0       	ldi	r24, 0x03	; 3
    1ac2:	61 e0       	ldi	r22, 0x01	; 1
    1ac4:	41 e0       	ldi	r20, 0x01	; 1
    1ac6:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <dio_vid_set_pin_value>
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1aca:	8a e1       	ldi	r24, 0x1A	; 26
    1acc:	8a 95       	dec	r24
    1ace:	f1 f7       	brne	.-4      	; 0x1acc <ultrasonic_u16_get_distance+0x58>
	_delay_us(10);
	dio_vid_set_pin_value(TRIG_PORT, TRIG_PIN, LOW);
    1ad0:	83 e0       	ldi	r24, 0x03	; 3
    1ad2:	61 e0       	ldi	r22, 0x01	; 1
    1ad4:	40 e0       	ldi	r20, 0x00	; 0
    1ad6:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <dio_vid_set_pin_value>
	TCNT0 = 0;	/* Clear Timer counter */
    1ada:	12 be       	out	0x32, r1	; 50
	MCUCR = 0x03; /*The rising edge of INT0 generates an interrupt request*/
    1adc:	83 e0       	ldi	r24, 0x03	; 3
    1ade:	85 bf       	out	0x35, r24	; 53
	while (!getBit(GIFR, INTF0));  /*Wait for rising edge */
    1ae0:	ea e5       	ldi	r30, 0x5A	; 90
    1ae2:	f0 e0       	ldi	r31, 0x00	; 0
    1ae4:	80 81       	ld	r24, Z
    1ae6:	86 ff       	sbrs	r24, 6
    1ae8:	fd cf       	rjmp	.-6      	; 0x1ae4 <ultrasonic_u16_get_distance+0x70>
	setBit(GIFR, INTF0); /*Clear the interrupt flag*/
    1aea:	ea e5       	ldi	r30, 0x5A	; 90
    1aec:	f0 e0       	ldi	r31, 0x00	; 0
    1aee:	80 81       	ld	r24, Z
    1af0:	80 64       	ori	r24, 0x40	; 64
    1af2:	80 83       	st	Z, r24
	TCNT0 = 0;	 /*Clear Timer counter */
    1af4:	12 be       	out	0x32, r1	; 50
	ultrasonic_counter = 0;
    1af6:	10 92 60 01 	sts	0x0160, r1
    1afa:	10 92 61 01 	sts	0x0161, r1
    1afe:	10 92 62 01 	sts	0x0162, r1
    1b02:	10 92 63 01 	sts	0x0163, r1
    1b06:	10 92 64 01 	sts	0x0164, r1
    1b0a:	10 92 65 01 	sts	0x0165, r1
    1b0e:	10 92 66 01 	sts	0x0166, r1
    1b12:	10 92 67 01 	sts	0x0167, r1
	MCUCR = 0x02; /*The falling edge of INT0 generates an interrupt request*/
    1b16:	82 e0       	ldi	r24, 0x02	; 2
    1b18:	85 bf       	out	0x35, r24	; 53
	while (!getBit(GIFR, INTF0));  /*Wait for falling edge */
    1b1a:	80 81       	ld	r24, Z
    1b1c:	86 ff       	sbrs	r24, 6
    1b1e:	fd cf       	rjmp	.-6      	; 0x1b1a <ultrasonic_u16_get_distance+0xa6>
	setBit(GIFR, INTF0); /*Clear the interrupt flag*/
    1b20:	ea e5       	ldi	r30, 0x5A	; 90
    1b22:	f0 e0       	ldi	r31, 0x00	; 0
    1b24:	80 81       	ld	r24, Z
    1b26:	80 64       	ori	r24, 0x40	; 64
    1b28:	80 83       	st	Z, r24
	ultrasonic_timer_ticks = TCNT0 + (255 * ultrasonic_counter);
    1b2a:	52 b6       	in	r5, 0x32	; 50
    1b2c:	10 91 60 01 	lds	r17, 0x0160
    1b30:	f0 90 61 01 	lds	r15, 0x0161
    1b34:	e0 90 62 01 	lds	r14, 0x0162
    1b38:	d0 90 63 01 	lds	r13, 0x0163
    1b3c:	c0 90 64 01 	lds	r12, 0x0164
    1b40:	b0 90 65 01 	lds	r11, 0x0165
    1b44:	90 90 66 01 	lds	r9, 0x0166
    1b48:	80 90 67 01 	lds	r8, 0x0167
	clrBit(SREG, 7);
    1b4c:	ef e5       	ldi	r30, 0x5F	; 95
    1b4e:	f0 e0       	ldi	r31, 0x00	; 0
    1b50:	80 81       	ld	r24, Z
    1b52:	8f 77       	andi	r24, 0x7F	; 127
    1b54:	80 83       	st	Z, r24
    1b56:	28 ee       	ldi	r18, 0xE8	; 232
    1b58:	33 e0       	ldi	r19, 0x03	; 3
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1b5a:	48 ec       	ldi	r20, 0xC8	; 200
    1b5c:	50 e0       	ldi	r21, 0x00	; 0
    1b5e:	ca 01       	movw	r24, r20
    1b60:	01 97       	sbiw	r24, 0x01	; 1
    1b62:	f1 f7       	brne	.-4      	; 0x1b60 <ultrasonic_u16_get_distance+0xec>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b64:	21 50       	subi	r18, 0x01	; 1
    1b66:	30 40       	sbci	r19, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b68:	d1 f7       	brne	.-12     	; 0x1b5e <ultrasonic_u16_get_distance+0xea>
    1b6a:	21 2f       	mov	r18, r17
    1b6c:	3f 2d       	mov	r19, r15
    1b6e:	4e 2d       	mov	r20, r14
    1b70:	5d 2d       	mov	r21, r13
    1b72:	6c 2d       	mov	r22, r12
    1b74:	7b 2d       	mov	r23, r11
    1b76:	89 2d       	mov	r24, r9
    1b78:	98 2d       	mov	r25, r8
    1b7a:	04 e0       	ldi	r16, 0x04	; 4
    1b7c:	0e 94 c3 01 	call	0x386	; 0x386 <__ashldi3>
    1b80:	a2 2e       	mov	r10, r18
    1b82:	a1 1a       	sub	r10, r17
    1b84:	e1 e0       	ldi	r30, 0x01	; 1
    1b86:	2a 15       	cp	r18, r10
    1b88:	08 f0       	brcs	.+2      	; 0x1b8c <ultrasonic_u16_get_distance+0x118>
    1b8a:	e0 e0       	ldi	r30, 0x00	; 0
    1b8c:	13 2f       	mov	r17, r19
    1b8e:	1f 19       	sub	r17, r15
    1b90:	21 e0       	ldi	r18, 0x01	; 1
    1b92:	31 17       	cp	r19, r17
    1b94:	08 f0       	brcs	.+2      	; 0x1b98 <ultrasonic_u16_get_distance+0x124>
    1b96:	20 e0       	ldi	r18, 0x00	; 0
    1b98:	31 2f       	mov	r19, r17
    1b9a:	3e 1b       	sub	r19, r30
    1b9c:	e3 2f       	mov	r30, r19
    1b9e:	31 e0       	ldi	r19, 0x01	; 1
    1ba0:	1e 17       	cp	r17, r30
    1ba2:	08 f0       	brcs	.+2      	; 0x1ba6 <ultrasonic_u16_get_distance+0x132>
    1ba4:	30 e0       	ldi	r19, 0x00	; 0
    1ba6:	23 2b       	or	r18, r19
    1ba8:	1e 2f       	mov	r17, r30
    1baa:	f4 2e       	mov	r15, r20
    1bac:	fe 18       	sub	r15, r14
    1bae:	31 e0       	ldi	r19, 0x01	; 1
    1bb0:	4f 15       	cp	r20, r15
    1bb2:	08 f0       	brcs	.+2      	; 0x1bb6 <ultrasonic_u16_get_distance+0x142>
    1bb4:	30 e0       	ldi	r19, 0x00	; 0
    1bb6:	4f 2d       	mov	r20, r15
    1bb8:	42 1b       	sub	r20, r18
    1bba:	21 e0       	ldi	r18, 0x01	; 1
    1bbc:	f4 16       	cp	r15, r20
    1bbe:	08 f0       	brcs	.+2      	; 0x1bc2 <ultrasonic_u16_get_distance+0x14e>
    1bc0:	20 e0       	ldi	r18, 0x00	; 0
    1bc2:	32 2b       	or	r19, r18
    1bc4:	f4 2e       	mov	r15, r20
    1bc6:	e5 2e       	mov	r14, r21
    1bc8:	ed 18       	sub	r14, r13
    1bca:	21 e0       	ldi	r18, 0x01	; 1
    1bcc:	5e 15       	cp	r21, r14
    1bce:	08 f0       	brcs	.+2      	; 0x1bd2 <ultrasonic_u16_get_distance+0x15e>
    1bd0:	20 e0       	ldi	r18, 0x00	; 0
    1bd2:	4e 2d       	mov	r20, r14
    1bd4:	43 1b       	sub	r20, r19
    1bd6:	31 e0       	ldi	r19, 0x01	; 1
    1bd8:	e4 16       	cp	r14, r20
    1bda:	08 f0       	brcs	.+2      	; 0x1bde <ultrasonic_u16_get_distance+0x16a>
    1bdc:	30 e0       	ldi	r19, 0x00	; 0
    1bde:	23 2b       	or	r18, r19
    1be0:	e4 2e       	mov	r14, r20
    1be2:	d6 2e       	mov	r13, r22
    1be4:	dc 18       	sub	r13, r12
    1be6:	31 e0       	ldi	r19, 0x01	; 1
    1be8:	6d 15       	cp	r22, r13
    1bea:	08 f0       	brcs	.+2      	; 0x1bee <ultrasonic_u16_get_distance+0x17a>
    1bec:	30 e0       	ldi	r19, 0x00	; 0
    1bee:	4d 2d       	mov	r20, r13
    1bf0:	42 1b       	sub	r20, r18
    1bf2:	21 e0       	ldi	r18, 0x01	; 1
    1bf4:	d4 16       	cp	r13, r20
    1bf6:	08 f0       	brcs	.+2      	; 0x1bfa <ultrasonic_u16_get_distance+0x186>
    1bf8:	20 e0       	ldi	r18, 0x00	; 0
    1bfa:	32 2b       	or	r19, r18
    1bfc:	d4 2e       	mov	r13, r20
    1bfe:	c7 2e       	mov	r12, r23
    1c00:	cb 18       	sub	r12, r11
    1c02:	41 e0       	ldi	r20, 0x01	; 1
    1c04:	7c 15       	cp	r23, r12
    1c06:	08 f0       	brcs	.+2      	; 0x1c0a <ultrasonic_u16_get_distance+0x196>
    1c08:	40 e0       	ldi	r20, 0x00	; 0
    1c0a:	2c 2d       	mov	r18, r12
    1c0c:	23 1b       	sub	r18, r19
    1c0e:	32 2f       	mov	r19, r18
    1c10:	21 e0       	ldi	r18, 0x01	; 1
    1c12:	c3 16       	cp	r12, r19
    1c14:	08 f0       	brcs	.+2      	; 0x1c18 <ultrasonic_u16_get_distance+0x1a4>
    1c16:	20 e0       	ldi	r18, 0x00	; 0
    1c18:	42 2b       	or	r20, r18
    1c1a:	c3 2e       	mov	r12, r19
    1c1c:	b8 2e       	mov	r11, r24
    1c1e:	b9 18       	sub	r11, r9
    1c20:	21 e0       	ldi	r18, 0x01	; 1
    1c22:	8b 15       	cp	r24, r11
    1c24:	08 f0       	brcs	.+2      	; 0x1c28 <ultrasonic_u16_get_distance+0x1b4>
    1c26:	20 e0       	ldi	r18, 0x00	; 0
    1c28:	3b 2d       	mov	r19, r11
    1c2a:	34 1b       	sub	r19, r20
    1c2c:	81 e0       	ldi	r24, 0x01	; 1
    1c2e:	b3 16       	cp	r11, r19
    1c30:	08 f0       	brcs	.+2      	; 0x1c34 <ultrasonic_u16_get_distance+0x1c0>
    1c32:	80 e0       	ldi	r24, 0x00	; 0
    1c34:	28 2b       	or	r18, r24
    1c36:	b3 2e       	mov	r11, r19
    1c38:	79 2e       	mov	r7, r25
    1c3a:	78 18       	sub	r7, r8
    1c3c:	72 1a       	sub	r7, r18
    1c3e:	2a 2d       	mov	r18, r10
    1c40:	31 2f       	mov	r19, r17
    1c42:	4f 2d       	mov	r20, r15
    1c44:	5e 2d       	mov	r21, r14
    1c46:	6d 2d       	mov	r22, r13
    1c48:	7c 2d       	mov	r23, r12
    1c4a:	8b 2d       	mov	r24, r11
    1c4c:	97 2d       	mov	r25, r7
    1c4e:	04 e0       	ldi	r16, 0x04	; 4
    1c50:	0e 94 c3 01 	call	0x386	; 0x386 <__ashldi3>
    1c54:	08 2f       	mov	r16, r24
    1c56:	69 2e       	mov	r6, r25
    1c58:	aa 2d       	mov	r26, r10
    1c5a:	a2 0f       	add	r26, r18
    1c5c:	e1 e0       	ldi	r30, 0x01	; 1
    1c5e:	aa 15       	cp	r26, r10
    1c60:	08 f0       	brcs	.+2      	; 0x1c64 <ultrasonic_u16_get_distance+0x1f0>
    1c62:	e0 e0       	ldi	r30, 0x00	; 0
    1c64:	31 0f       	add	r19, r17
    1c66:	21 e0       	ldi	r18, 0x01	; 1
    1c68:	31 17       	cp	r19, r17
    1c6a:	08 f0       	brcs	.+2      	; 0x1c6e <ultrasonic_u16_get_distance+0x1fa>
    1c6c:	20 e0       	ldi	r18, 0x00	; 0
    1c6e:	fe 2f       	mov	r31, r30
    1c70:	f3 0f       	add	r31, r19
    1c72:	e1 e0       	ldi	r30, 0x01	; 1
    1c74:	f3 17       	cp	r31, r19
    1c76:	08 f0       	brcs	.+2      	; 0x1c7a <ultrasonic_u16_get_distance+0x206>
    1c78:	e0 e0       	ldi	r30, 0x00	; 0
    1c7a:	2e 2b       	or	r18, r30
    1c7c:	3f 2f       	mov	r19, r31
    1c7e:	bf 2d       	mov	r27, r15
    1c80:	b4 0f       	add	r27, r20
    1c82:	e1 e0       	ldi	r30, 0x01	; 1
    1c84:	bf 15       	cp	r27, r15
    1c86:	08 f0       	brcs	.+2      	; 0x1c8a <ultrasonic_u16_get_distance+0x216>
    1c88:	e0 e0       	ldi	r30, 0x00	; 0
    1c8a:	f2 2f       	mov	r31, r18
    1c8c:	fb 0f       	add	r31, r27
    1c8e:	21 e0       	ldi	r18, 0x01	; 1
    1c90:	fb 17       	cp	r31, r27
    1c92:	08 f0       	brcs	.+2      	; 0x1c96 <ultrasonic_u16_get_distance+0x222>
    1c94:	20 e0       	ldi	r18, 0x00	; 0
    1c96:	e2 2b       	or	r30, r18
    1c98:	bf 2f       	mov	r27, r31
    1c9a:	8e 2d       	mov	r24, r14
    1c9c:	85 0f       	add	r24, r21
    1c9e:	21 e0       	ldi	r18, 0x01	; 1
    1ca0:	8e 15       	cp	r24, r14
    1ca2:	08 f0       	brcs	.+2      	; 0x1ca6 <ultrasonic_u16_get_distance+0x232>
    1ca4:	20 e0       	ldi	r18, 0x00	; 0
    1ca6:	fe 2f       	mov	r31, r30
    1ca8:	f8 0f       	add	r31, r24
    1caa:	e1 e0       	ldi	r30, 0x01	; 1
    1cac:	f8 17       	cp	r31, r24
    1cae:	08 f0       	brcs	.+2      	; 0x1cb2 <ultrasonic_u16_get_distance+0x23e>
    1cb0:	e0 e0       	ldi	r30, 0x00	; 0
    1cb2:	2e 2b       	or	r18, r30
    1cb4:	8f 2f       	mov	r24, r31
    1cb6:	9d 2d       	mov	r25, r13
    1cb8:	96 0f       	add	r25, r22
    1cba:	e1 e0       	ldi	r30, 0x01	; 1
    1cbc:	9d 15       	cp	r25, r13
    1cbe:	08 f0       	brcs	.+2      	; 0x1cc2 <ultrasonic_u16_get_distance+0x24e>
    1cc0:	e0 e0       	ldi	r30, 0x00	; 0
    1cc2:	f2 2f       	mov	r31, r18
    1cc4:	f9 0f       	add	r31, r25
    1cc6:	21 e0       	ldi	r18, 0x01	; 1
    1cc8:	f9 17       	cp	r31, r25
    1cca:	08 f0       	brcs	.+2      	; 0x1cce <ultrasonic_u16_get_distance+0x25a>
    1ccc:	20 e0       	ldi	r18, 0x00	; 0
    1cce:	e2 2b       	or	r30, r18
    1cd0:	9f 2f       	mov	r25, r31
    1cd2:	9c 2c       	mov	r9, r12
    1cd4:	97 0e       	add	r9, r23
    1cd6:	f1 e0       	ldi	r31, 0x01	; 1
    1cd8:	9c 14       	cp	r9, r12
    1cda:	08 f0       	brcs	.+2      	; 0x1cde <ultrasonic_u16_get_distance+0x26a>
    1cdc:	f0 e0       	ldi	r31, 0x00	; 0
    1cde:	e9 0d       	add	r30, r9
    1ce0:	21 e0       	ldi	r18, 0x01	; 1
    1ce2:	e9 15       	cp	r30, r9
    1ce4:	08 f0       	brcs	.+2      	; 0x1ce8 <ultrasonic_u16_get_distance+0x274>
    1ce6:	20 e0       	ldi	r18, 0x00	; 0
    1ce8:	f2 2b       	or	r31, r18
    1cea:	9e 2e       	mov	r9, r30
    1cec:	8b 2c       	mov	r8, r11
    1cee:	80 0e       	add	r8, r16
    1cf0:	21 e0       	ldi	r18, 0x01	; 1
    1cf2:	8b 14       	cp	r8, r11
    1cf4:	08 f0       	brcs	.+2      	; 0x1cf8 <ultrasonic_u16_get_distance+0x284>
    1cf6:	20 e0       	ldi	r18, 0x00	; 0
    1cf8:	f8 0d       	add	r31, r8
    1cfa:	e1 e0       	ldi	r30, 0x01	; 1
    1cfc:	f8 15       	cp	r31, r8
    1cfe:	08 f0       	brcs	.+2      	; 0x1d02 <ultrasonic_u16_get_distance+0x28e>
    1d00:	e0 e0       	ldi	r30, 0x00	; 0
    1d02:	2e 2b       	or	r18, r30
    1d04:	8f 2e       	mov	r8, r31
    1d06:	67 0c       	add	r6, r7
    1d08:	62 0e       	add	r6, r18
    1d0a:	bb 24       	eor	r11, r11
    1d0c:	cc 24       	eor	r12, r12
    1d0e:	dd 24       	eor	r13, r13
    1d10:	ee 24       	eor	r14, r14
    1d12:	ff 24       	eor	r15, r15
    1d14:	87 01       	movw	r16, r14
    1d16:	2a 2f       	mov	r18, r26
    1d18:	25 0d       	add	r18, r5
    1d1a:	f1 e0       	ldi	r31, 0x01	; 1
    1d1c:	2a 17       	cp	r18, r26
    1d1e:	08 f0       	brcs	.+2      	; 0x1d22 <ultrasonic_u16_get_distance+0x2ae>
    1d20:	f0 e0       	ldi	r31, 0x00	; 0
    1d22:	73 2e       	mov	r7, r19
    1d24:	7b 0c       	add	r7, r11
    1d26:	e1 e0       	ldi	r30, 0x01	; 1
    1d28:	73 16       	cp	r7, r19
    1d2a:	08 f0       	brcs	.+2      	; 0x1d2e <ultrasonic_u16_get_distance+0x2ba>
    1d2c:	e0 e0       	ldi	r30, 0x00	; 0
    1d2e:	af 2f       	mov	r26, r31
    1d30:	a7 0d       	add	r26, r7
    1d32:	f1 e0       	ldi	r31, 0x01	; 1
    1d34:	a7 15       	cp	r26, r7
    1d36:	08 f0       	brcs	.+2      	; 0x1d3a <ultrasonic_u16_get_distance+0x2c6>
    1d38:	f0 e0       	ldi	r31, 0x00	; 0
    1d3a:	ef 2b       	or	r30, r31
    1d3c:	7a 2e       	mov	r7, r26
    1d3e:	4b 2f       	mov	r20, r27
    1d40:	4c 0d       	add	r20, r12
    1d42:	f1 e0       	ldi	r31, 0x01	; 1
    1d44:	4b 17       	cp	r20, r27
    1d46:	08 f0       	brcs	.+2      	; 0x1d4a <ultrasonic_u16_get_distance+0x2d6>
    1d48:	f0 e0       	ldi	r31, 0x00	; 0
    1d4a:	ae 2f       	mov	r26, r30
    1d4c:	a4 0f       	add	r26, r20
    1d4e:	e1 e0       	ldi	r30, 0x01	; 1
    1d50:	a4 17       	cp	r26, r20
    1d52:	08 f0       	brcs	.+2      	; 0x1d56 <ultrasonic_u16_get_distance+0x2e2>
    1d54:	e0 e0       	ldi	r30, 0x00	; 0
    1d56:	fe 2b       	or	r31, r30
    1d58:	4a 2f       	mov	r20, r26
    1d5a:	58 2f       	mov	r21, r24
    1d5c:	5d 0d       	add	r21, r13
    1d5e:	e1 e0       	ldi	r30, 0x01	; 1
    1d60:	58 17       	cp	r21, r24
    1d62:	08 f0       	brcs	.+2      	; 0x1d66 <ultrasonic_u16_get_distance+0x2f2>
    1d64:	e0 e0       	ldi	r30, 0x00	; 0
    1d66:	af 2f       	mov	r26, r31
    1d68:	a5 0f       	add	r26, r21
    1d6a:	f1 e0       	ldi	r31, 0x01	; 1
    1d6c:	a5 17       	cp	r26, r21
    1d6e:	08 f0       	brcs	.+2      	; 0x1d72 <ultrasonic_u16_get_distance+0x2fe>
    1d70:	f0 e0       	ldi	r31, 0x00	; 0
    1d72:	ef 2b       	or	r30, r31
    1d74:	5a 2f       	mov	r21, r26
    1d76:	69 2f       	mov	r22, r25
    1d78:	6e 0d       	add	r22, r14
    1d7a:	f1 e0       	ldi	r31, 0x01	; 1
    1d7c:	69 17       	cp	r22, r25
    1d7e:	08 f0       	brcs	.+2      	; 0x1d82 <ultrasonic_u16_get_distance+0x30e>
    1d80:	f0 e0       	ldi	r31, 0x00	; 0
    1d82:	ae 2f       	mov	r26, r30
    1d84:	a6 0f       	add	r26, r22
    1d86:	e1 e0       	ldi	r30, 0x01	; 1
    1d88:	a6 17       	cp	r26, r22
    1d8a:	08 f0       	brcs	.+2      	; 0x1d8e <ultrasonic_u16_get_distance+0x31a>
    1d8c:	e0 e0       	ldi	r30, 0x00	; 0
    1d8e:	fe 2b       	or	r31, r30
    1d90:	6a 2f       	mov	r22, r26
    1d92:	79 2d       	mov	r23, r9
    1d94:	7f 0d       	add	r23, r15
    1d96:	81 e0       	ldi	r24, 0x01	; 1
    1d98:	79 15       	cp	r23, r9
    1d9a:	08 f0       	brcs	.+2      	; 0x1d9e <ultrasonic_u16_get_distance+0x32a>
    1d9c:	80 e0       	ldi	r24, 0x00	; 0
    1d9e:	f7 0f       	add	r31, r23
    1da0:	e1 e0       	ldi	r30, 0x01	; 1
    1da2:	f7 17       	cp	r31, r23
    1da4:	08 f0       	brcs	.+2      	; 0x1da8 <ultrasonic_u16_get_distance+0x334>
    1da6:	e0 e0       	ldi	r30, 0x00	; 0
    1da8:	8e 2b       	or	r24, r30
    1daa:	7f 2f       	mov	r23, r31
    1dac:	e8 2d       	mov	r30, r8
    1dae:	e0 0f       	add	r30, r16
    1db0:	a1 e0       	ldi	r26, 0x01	; 1
    1db2:	e8 15       	cp	r30, r8
    1db4:	08 f0       	brcs	.+2      	; 0x1db8 <ultrasonic_u16_get_distance+0x344>
    1db6:	a0 e0       	ldi	r26, 0x00	; 0
    1db8:	8e 0f       	add	r24, r30
    1dba:	f1 e0       	ldi	r31, 0x01	; 1
    1dbc:	8e 17       	cp	r24, r30
    1dbe:	08 f0       	brcs	.+2      	; 0x1dc2 <ultrasonic_u16_get_distance+0x34e>
    1dc0:	f0 e0       	ldi	r31, 0x00	; 0
    1dc2:	af 2b       	or	r26, r31
    1dc4:	96 2d       	mov	r25, r6
    1dc6:	91 0f       	add	r25, r17
    1dc8:	37 2d       	mov	r19, r7
    1dca:	9a 0f       	add	r25, r26
    1dcc:	01 e0       	ldi	r16, 0x01	; 1
    1dce:	0e 94 44 01 	call	0x288	; 0x288 <__lshrdi3>
    1dd2:	0f 2e       	mov	r0, r31
    1dd4:	fc ef       	ldi	r31, 0xFC	; 252
    1dd6:	af 2e       	mov	r10, r31
    1dd8:	f0 2d       	mov	r31, r0
    1dda:	0f 2e       	mov	r0, r31
    1ddc:	f5 e8       	ldi	r31, 0x85	; 133
    1dde:	bf 2e       	mov	r11, r31
    1de0:	f0 2d       	mov	r31, r0
    1de2:	cc 24       	eor	r12, r12
    1de4:	dd 24       	eor	r13, r13
    1de6:	ee 24       	eor	r14, r14
    1de8:	ff 24       	eor	r15, r15
    1dea:	00 e0       	ldi	r16, 0x00	; 0
    1dec:	10 e0       	ldi	r17, 0x00	; 0
    1dee:	0e 94 49 00 	call	0x92	; 0x92 <__muldi3>
    1df2:	aa 24       	eor	r10, r10
    1df4:	0f 2e       	mov	r0, r31
    1df6:	f2 e1       	ldi	r31, 0x12	; 18
    1df8:	bf 2e       	mov	r11, r31
    1dfa:	f0 2d       	mov	r31, r0
    1dfc:	0f 2e       	mov	r0, r31
    1dfe:	fa e7       	ldi	r31, 0x7A	; 122
    1e00:	cf 2e       	mov	r12, r31
    1e02:	f0 2d       	mov	r31, r0
    1e04:	0e 94 42 02 	call	0x484	; 0x484 <__udivdi3>
    1e08:	93 2f       	mov	r25, r19
    1e0a:	82 2f       	mov	r24, r18
	distance = (u64)((34300 * (ultrasonic_timer_ticks/2))/8000000); /*distance = velocity*time = velocity/frequency*/
	_delay_ms(100);
	return distance;
}
    1e0c:	1f 91       	pop	r17
    1e0e:	0f 91       	pop	r16
    1e10:	ff 90       	pop	r15
    1e12:	ef 90       	pop	r14
    1e14:	df 90       	pop	r13
    1e16:	cf 90       	pop	r12
    1e18:	bf 90       	pop	r11
    1e1a:	af 90       	pop	r10
    1e1c:	9f 90       	pop	r9
    1e1e:	8f 90       	pop	r8
    1e20:	7f 90       	pop	r7
    1e22:	6f 90       	pop	r6
    1e24:	5f 90       	pop	r5
    1e26:	08 95       	ret

00001e28 <__cmpsf2>:
    1e28:	d4 d0       	rcall	.+424    	; 0x1fd2 <__fp_cmp>
    1e2a:	08 f4       	brcc	.+2      	; 0x1e2e <__cmpsf2+0x6>
    1e2c:	81 e0       	ldi	r24, 0x01	; 1
    1e2e:	08 95       	ret

00001e30 <__divsf3>:
    1e30:	0c d0       	rcall	.+24     	; 0x1e4a <__divsf3x>
    1e32:	0a c1       	rjmp	.+532    	; 0x2048 <__fp_round>
    1e34:	02 d1       	rcall	.+516    	; 0x203a <__fp_pscB>
    1e36:	40 f0       	brcs	.+16     	; 0x1e48 <__divsf3+0x18>
    1e38:	f9 d0       	rcall	.+498    	; 0x202c <__fp_pscA>
    1e3a:	30 f0       	brcs	.+12     	; 0x1e48 <__divsf3+0x18>
    1e3c:	21 f4       	brne	.+8      	; 0x1e46 <__divsf3+0x16>
    1e3e:	5f 3f       	cpi	r21, 0xFF	; 255
    1e40:	19 f0       	breq	.+6      	; 0x1e48 <__divsf3+0x18>
    1e42:	eb c0       	rjmp	.+470    	; 0x201a <__fp_inf>
    1e44:	51 11       	cpse	r21, r1
    1e46:	34 c1       	rjmp	.+616    	; 0x20b0 <__fp_szero>
    1e48:	ee c0       	rjmp	.+476    	; 0x2026 <__fp_nan>

00001e4a <__divsf3x>:
    1e4a:	0f d1       	rcall	.+542    	; 0x206a <__fp_split3>
    1e4c:	98 f3       	brcs	.-26     	; 0x1e34 <__divsf3+0x4>

00001e4e <__divsf3_pse>:
    1e4e:	99 23       	and	r25, r25
    1e50:	c9 f3       	breq	.-14     	; 0x1e44 <__divsf3+0x14>
    1e52:	55 23       	and	r21, r21
    1e54:	b1 f3       	breq	.-20     	; 0x1e42 <__divsf3+0x12>
    1e56:	95 1b       	sub	r25, r21
    1e58:	55 0b       	sbc	r21, r21
    1e5a:	bb 27       	eor	r27, r27
    1e5c:	aa 27       	eor	r26, r26
    1e5e:	62 17       	cp	r22, r18
    1e60:	73 07       	cpc	r23, r19
    1e62:	84 07       	cpc	r24, r20
    1e64:	38 f0       	brcs	.+14     	; 0x1e74 <__divsf3_pse+0x26>
    1e66:	9f 5f       	subi	r25, 0xFF	; 255
    1e68:	5f 4f       	sbci	r21, 0xFF	; 255
    1e6a:	22 0f       	add	r18, r18
    1e6c:	33 1f       	adc	r19, r19
    1e6e:	44 1f       	adc	r20, r20
    1e70:	aa 1f       	adc	r26, r26
    1e72:	a9 f3       	breq	.-22     	; 0x1e5e <__divsf3_pse+0x10>
    1e74:	33 d0       	rcall	.+102    	; 0x1edc <__divsf3_pse+0x8e>
    1e76:	0e 2e       	mov	r0, r30
    1e78:	3a f0       	brmi	.+14     	; 0x1e88 <__divsf3_pse+0x3a>
    1e7a:	e0 e8       	ldi	r30, 0x80	; 128
    1e7c:	30 d0       	rcall	.+96     	; 0x1ede <__divsf3_pse+0x90>
    1e7e:	91 50       	subi	r25, 0x01	; 1
    1e80:	50 40       	sbci	r21, 0x00	; 0
    1e82:	e6 95       	lsr	r30
    1e84:	00 1c       	adc	r0, r0
    1e86:	ca f7       	brpl	.-14     	; 0x1e7a <__divsf3_pse+0x2c>
    1e88:	29 d0       	rcall	.+82     	; 0x1edc <__divsf3_pse+0x8e>
    1e8a:	fe 2f       	mov	r31, r30
    1e8c:	27 d0       	rcall	.+78     	; 0x1edc <__divsf3_pse+0x8e>
    1e8e:	66 0f       	add	r22, r22
    1e90:	77 1f       	adc	r23, r23
    1e92:	88 1f       	adc	r24, r24
    1e94:	bb 1f       	adc	r27, r27
    1e96:	26 17       	cp	r18, r22
    1e98:	37 07       	cpc	r19, r23
    1e9a:	48 07       	cpc	r20, r24
    1e9c:	ab 07       	cpc	r26, r27
    1e9e:	b0 e8       	ldi	r27, 0x80	; 128
    1ea0:	09 f0       	breq	.+2      	; 0x1ea4 <__divsf3_pse+0x56>
    1ea2:	bb 0b       	sbc	r27, r27
    1ea4:	80 2d       	mov	r24, r0
    1ea6:	bf 01       	movw	r22, r30
    1ea8:	ff 27       	eor	r31, r31
    1eaa:	93 58       	subi	r25, 0x83	; 131
    1eac:	5f 4f       	sbci	r21, 0xFF	; 255
    1eae:	2a f0       	brmi	.+10     	; 0x1eba <__divsf3_pse+0x6c>
    1eb0:	9e 3f       	cpi	r25, 0xFE	; 254
    1eb2:	51 05       	cpc	r21, r1
    1eb4:	68 f0       	brcs	.+26     	; 0x1ed0 <__divsf3_pse+0x82>
    1eb6:	b1 c0       	rjmp	.+354    	; 0x201a <__fp_inf>
    1eb8:	fb c0       	rjmp	.+502    	; 0x20b0 <__fp_szero>
    1eba:	5f 3f       	cpi	r21, 0xFF	; 255
    1ebc:	ec f3       	brlt	.-6      	; 0x1eb8 <__divsf3_pse+0x6a>
    1ebe:	98 3e       	cpi	r25, 0xE8	; 232
    1ec0:	dc f3       	brlt	.-10     	; 0x1eb8 <__divsf3_pse+0x6a>
    1ec2:	86 95       	lsr	r24
    1ec4:	77 95       	ror	r23
    1ec6:	67 95       	ror	r22
    1ec8:	b7 95       	ror	r27
    1eca:	f7 95       	ror	r31
    1ecc:	9f 5f       	subi	r25, 0xFF	; 255
    1ece:	c9 f7       	brne	.-14     	; 0x1ec2 <__divsf3_pse+0x74>
    1ed0:	88 0f       	add	r24, r24
    1ed2:	91 1d       	adc	r25, r1
    1ed4:	96 95       	lsr	r25
    1ed6:	87 95       	ror	r24
    1ed8:	97 f9       	bld	r25, 7
    1eda:	08 95       	ret
    1edc:	e1 e0       	ldi	r30, 0x01	; 1
    1ede:	66 0f       	add	r22, r22
    1ee0:	77 1f       	adc	r23, r23
    1ee2:	88 1f       	adc	r24, r24
    1ee4:	bb 1f       	adc	r27, r27
    1ee6:	62 17       	cp	r22, r18
    1ee8:	73 07       	cpc	r23, r19
    1eea:	84 07       	cpc	r24, r20
    1eec:	ba 07       	cpc	r27, r26
    1eee:	20 f0       	brcs	.+8      	; 0x1ef8 <__divsf3_pse+0xaa>
    1ef0:	62 1b       	sub	r22, r18
    1ef2:	73 0b       	sbc	r23, r19
    1ef4:	84 0b       	sbc	r24, r20
    1ef6:	ba 0b       	sbc	r27, r26
    1ef8:	ee 1f       	adc	r30, r30
    1efa:	88 f7       	brcc	.-30     	; 0x1ede <__divsf3_pse+0x90>
    1efc:	e0 95       	com	r30
    1efe:	08 95       	ret

00001f00 <__fixunssfsi>:
    1f00:	bc d0       	rcall	.+376    	; 0x207a <__fp_splitA>
    1f02:	88 f0       	brcs	.+34     	; 0x1f26 <__fixunssfsi+0x26>
    1f04:	9f 57       	subi	r25, 0x7F	; 127
    1f06:	90 f0       	brcs	.+36     	; 0x1f2c <__fixunssfsi+0x2c>
    1f08:	b9 2f       	mov	r27, r25
    1f0a:	99 27       	eor	r25, r25
    1f0c:	b7 51       	subi	r27, 0x17	; 23
    1f0e:	a0 f0       	brcs	.+40     	; 0x1f38 <__fixunssfsi+0x38>
    1f10:	d1 f0       	breq	.+52     	; 0x1f46 <__fixunssfsi+0x46>
    1f12:	66 0f       	add	r22, r22
    1f14:	77 1f       	adc	r23, r23
    1f16:	88 1f       	adc	r24, r24
    1f18:	99 1f       	adc	r25, r25
    1f1a:	1a f0       	brmi	.+6      	; 0x1f22 <__fixunssfsi+0x22>
    1f1c:	ba 95       	dec	r27
    1f1e:	c9 f7       	brne	.-14     	; 0x1f12 <__fixunssfsi+0x12>
    1f20:	12 c0       	rjmp	.+36     	; 0x1f46 <__fixunssfsi+0x46>
    1f22:	b1 30       	cpi	r27, 0x01	; 1
    1f24:	81 f0       	breq	.+32     	; 0x1f46 <__fixunssfsi+0x46>
    1f26:	c3 d0       	rcall	.+390    	; 0x20ae <__fp_zero>
    1f28:	b1 e0       	ldi	r27, 0x01	; 1
    1f2a:	08 95       	ret
    1f2c:	c0 c0       	rjmp	.+384    	; 0x20ae <__fp_zero>
    1f2e:	67 2f       	mov	r22, r23
    1f30:	78 2f       	mov	r23, r24
    1f32:	88 27       	eor	r24, r24
    1f34:	b8 5f       	subi	r27, 0xF8	; 248
    1f36:	39 f0       	breq	.+14     	; 0x1f46 <__fixunssfsi+0x46>
    1f38:	b9 3f       	cpi	r27, 0xF9	; 249
    1f3a:	cc f3       	brlt	.-14     	; 0x1f2e <__fixunssfsi+0x2e>
    1f3c:	86 95       	lsr	r24
    1f3e:	77 95       	ror	r23
    1f40:	67 95       	ror	r22
    1f42:	b3 95       	inc	r27
    1f44:	d9 f7       	brne	.-10     	; 0x1f3c <__fixunssfsi+0x3c>
    1f46:	3e f4       	brtc	.+14     	; 0x1f56 <__fixunssfsi+0x56>
    1f48:	90 95       	com	r25
    1f4a:	80 95       	com	r24
    1f4c:	70 95       	com	r23
    1f4e:	61 95       	neg	r22
    1f50:	7f 4f       	sbci	r23, 0xFF	; 255
    1f52:	8f 4f       	sbci	r24, 0xFF	; 255
    1f54:	9f 4f       	sbci	r25, 0xFF	; 255
    1f56:	08 95       	ret

00001f58 <__floatunsisf>:
    1f58:	e8 94       	clt
    1f5a:	09 c0       	rjmp	.+18     	; 0x1f6e <__floatsisf+0x12>

00001f5c <__floatsisf>:
    1f5c:	97 fb       	bst	r25, 7
    1f5e:	3e f4       	brtc	.+14     	; 0x1f6e <__floatsisf+0x12>
    1f60:	90 95       	com	r25
    1f62:	80 95       	com	r24
    1f64:	70 95       	com	r23
    1f66:	61 95       	neg	r22
    1f68:	7f 4f       	sbci	r23, 0xFF	; 255
    1f6a:	8f 4f       	sbci	r24, 0xFF	; 255
    1f6c:	9f 4f       	sbci	r25, 0xFF	; 255
    1f6e:	99 23       	and	r25, r25
    1f70:	a9 f0       	breq	.+42     	; 0x1f9c <__floatsisf+0x40>
    1f72:	f9 2f       	mov	r31, r25
    1f74:	96 e9       	ldi	r25, 0x96	; 150
    1f76:	bb 27       	eor	r27, r27
    1f78:	93 95       	inc	r25
    1f7a:	f6 95       	lsr	r31
    1f7c:	87 95       	ror	r24
    1f7e:	77 95       	ror	r23
    1f80:	67 95       	ror	r22
    1f82:	b7 95       	ror	r27
    1f84:	f1 11       	cpse	r31, r1
    1f86:	f8 cf       	rjmp	.-16     	; 0x1f78 <__floatsisf+0x1c>
    1f88:	fa f4       	brpl	.+62     	; 0x1fc8 <__floatsisf+0x6c>
    1f8a:	bb 0f       	add	r27, r27
    1f8c:	11 f4       	brne	.+4      	; 0x1f92 <__floatsisf+0x36>
    1f8e:	60 ff       	sbrs	r22, 0
    1f90:	1b c0       	rjmp	.+54     	; 0x1fc8 <__floatsisf+0x6c>
    1f92:	6f 5f       	subi	r22, 0xFF	; 255
    1f94:	7f 4f       	sbci	r23, 0xFF	; 255
    1f96:	8f 4f       	sbci	r24, 0xFF	; 255
    1f98:	9f 4f       	sbci	r25, 0xFF	; 255
    1f9a:	16 c0       	rjmp	.+44     	; 0x1fc8 <__floatsisf+0x6c>
    1f9c:	88 23       	and	r24, r24
    1f9e:	11 f0       	breq	.+4      	; 0x1fa4 <__floatsisf+0x48>
    1fa0:	96 e9       	ldi	r25, 0x96	; 150
    1fa2:	11 c0       	rjmp	.+34     	; 0x1fc6 <__floatsisf+0x6a>
    1fa4:	77 23       	and	r23, r23
    1fa6:	21 f0       	breq	.+8      	; 0x1fb0 <__floatsisf+0x54>
    1fa8:	9e e8       	ldi	r25, 0x8E	; 142
    1faa:	87 2f       	mov	r24, r23
    1fac:	76 2f       	mov	r23, r22
    1fae:	05 c0       	rjmp	.+10     	; 0x1fba <__floatsisf+0x5e>
    1fb0:	66 23       	and	r22, r22
    1fb2:	71 f0       	breq	.+28     	; 0x1fd0 <__floatsisf+0x74>
    1fb4:	96 e8       	ldi	r25, 0x86	; 134
    1fb6:	86 2f       	mov	r24, r22
    1fb8:	70 e0       	ldi	r23, 0x00	; 0
    1fba:	60 e0       	ldi	r22, 0x00	; 0
    1fbc:	2a f0       	brmi	.+10     	; 0x1fc8 <__floatsisf+0x6c>
    1fbe:	9a 95       	dec	r25
    1fc0:	66 0f       	add	r22, r22
    1fc2:	77 1f       	adc	r23, r23
    1fc4:	88 1f       	adc	r24, r24
    1fc6:	da f7       	brpl	.-10     	; 0x1fbe <__floatsisf+0x62>
    1fc8:	88 0f       	add	r24, r24
    1fca:	96 95       	lsr	r25
    1fcc:	87 95       	ror	r24
    1fce:	97 f9       	bld	r25, 7
    1fd0:	08 95       	ret

00001fd2 <__fp_cmp>:
    1fd2:	99 0f       	add	r25, r25
    1fd4:	00 08       	sbc	r0, r0
    1fd6:	55 0f       	add	r21, r21
    1fd8:	aa 0b       	sbc	r26, r26
    1fda:	e0 e8       	ldi	r30, 0x80	; 128
    1fdc:	fe ef       	ldi	r31, 0xFE	; 254
    1fde:	16 16       	cp	r1, r22
    1fe0:	17 06       	cpc	r1, r23
    1fe2:	e8 07       	cpc	r30, r24
    1fe4:	f9 07       	cpc	r31, r25
    1fe6:	c0 f0       	brcs	.+48     	; 0x2018 <__fp_cmp+0x46>
    1fe8:	12 16       	cp	r1, r18
    1fea:	13 06       	cpc	r1, r19
    1fec:	e4 07       	cpc	r30, r20
    1fee:	f5 07       	cpc	r31, r21
    1ff0:	98 f0       	brcs	.+38     	; 0x2018 <__fp_cmp+0x46>
    1ff2:	62 1b       	sub	r22, r18
    1ff4:	73 0b       	sbc	r23, r19
    1ff6:	84 0b       	sbc	r24, r20
    1ff8:	95 0b       	sbc	r25, r21
    1ffa:	39 f4       	brne	.+14     	; 0x200a <__fp_cmp+0x38>
    1ffc:	0a 26       	eor	r0, r26
    1ffe:	61 f0       	breq	.+24     	; 0x2018 <__fp_cmp+0x46>
    2000:	23 2b       	or	r18, r19
    2002:	24 2b       	or	r18, r20
    2004:	25 2b       	or	r18, r21
    2006:	21 f4       	brne	.+8      	; 0x2010 <__fp_cmp+0x3e>
    2008:	08 95       	ret
    200a:	0a 26       	eor	r0, r26
    200c:	09 f4       	brne	.+2      	; 0x2010 <__fp_cmp+0x3e>
    200e:	a1 40       	sbci	r26, 0x01	; 1
    2010:	a6 95       	lsr	r26
    2012:	8f ef       	ldi	r24, 0xFF	; 255
    2014:	81 1d       	adc	r24, r1
    2016:	81 1d       	adc	r24, r1
    2018:	08 95       	ret

0000201a <__fp_inf>:
    201a:	97 f9       	bld	r25, 7
    201c:	9f 67       	ori	r25, 0x7F	; 127
    201e:	80 e8       	ldi	r24, 0x80	; 128
    2020:	70 e0       	ldi	r23, 0x00	; 0
    2022:	60 e0       	ldi	r22, 0x00	; 0
    2024:	08 95       	ret

00002026 <__fp_nan>:
    2026:	9f ef       	ldi	r25, 0xFF	; 255
    2028:	80 ec       	ldi	r24, 0xC0	; 192
    202a:	08 95       	ret

0000202c <__fp_pscA>:
    202c:	00 24       	eor	r0, r0
    202e:	0a 94       	dec	r0
    2030:	16 16       	cp	r1, r22
    2032:	17 06       	cpc	r1, r23
    2034:	18 06       	cpc	r1, r24
    2036:	09 06       	cpc	r0, r25
    2038:	08 95       	ret

0000203a <__fp_pscB>:
    203a:	00 24       	eor	r0, r0
    203c:	0a 94       	dec	r0
    203e:	12 16       	cp	r1, r18
    2040:	13 06       	cpc	r1, r19
    2042:	14 06       	cpc	r1, r20
    2044:	05 06       	cpc	r0, r21
    2046:	08 95       	ret

00002048 <__fp_round>:
    2048:	09 2e       	mov	r0, r25
    204a:	03 94       	inc	r0
    204c:	00 0c       	add	r0, r0
    204e:	11 f4       	brne	.+4      	; 0x2054 <__fp_round+0xc>
    2050:	88 23       	and	r24, r24
    2052:	52 f0       	brmi	.+20     	; 0x2068 <__fp_round+0x20>
    2054:	bb 0f       	add	r27, r27
    2056:	40 f4       	brcc	.+16     	; 0x2068 <__fp_round+0x20>
    2058:	bf 2b       	or	r27, r31
    205a:	11 f4       	brne	.+4      	; 0x2060 <__fp_round+0x18>
    205c:	60 ff       	sbrs	r22, 0
    205e:	04 c0       	rjmp	.+8      	; 0x2068 <__fp_round+0x20>
    2060:	6f 5f       	subi	r22, 0xFF	; 255
    2062:	7f 4f       	sbci	r23, 0xFF	; 255
    2064:	8f 4f       	sbci	r24, 0xFF	; 255
    2066:	9f 4f       	sbci	r25, 0xFF	; 255
    2068:	08 95       	ret

0000206a <__fp_split3>:
    206a:	57 fd       	sbrc	r21, 7
    206c:	90 58       	subi	r25, 0x80	; 128
    206e:	44 0f       	add	r20, r20
    2070:	55 1f       	adc	r21, r21
    2072:	59 f0       	breq	.+22     	; 0x208a <__fp_splitA+0x10>
    2074:	5f 3f       	cpi	r21, 0xFF	; 255
    2076:	71 f0       	breq	.+28     	; 0x2094 <__fp_splitA+0x1a>
    2078:	47 95       	ror	r20

0000207a <__fp_splitA>:
    207a:	88 0f       	add	r24, r24
    207c:	97 fb       	bst	r25, 7
    207e:	99 1f       	adc	r25, r25
    2080:	61 f0       	breq	.+24     	; 0x209a <__fp_splitA+0x20>
    2082:	9f 3f       	cpi	r25, 0xFF	; 255
    2084:	79 f0       	breq	.+30     	; 0x20a4 <__fp_splitA+0x2a>
    2086:	87 95       	ror	r24
    2088:	08 95       	ret
    208a:	12 16       	cp	r1, r18
    208c:	13 06       	cpc	r1, r19
    208e:	14 06       	cpc	r1, r20
    2090:	55 1f       	adc	r21, r21
    2092:	f2 cf       	rjmp	.-28     	; 0x2078 <__fp_split3+0xe>
    2094:	46 95       	lsr	r20
    2096:	f1 df       	rcall	.-30     	; 0x207a <__fp_splitA>
    2098:	08 c0       	rjmp	.+16     	; 0x20aa <__fp_splitA+0x30>
    209a:	16 16       	cp	r1, r22
    209c:	17 06       	cpc	r1, r23
    209e:	18 06       	cpc	r1, r24
    20a0:	99 1f       	adc	r25, r25
    20a2:	f1 cf       	rjmp	.-30     	; 0x2086 <__fp_splitA+0xc>
    20a4:	86 95       	lsr	r24
    20a6:	71 05       	cpc	r23, r1
    20a8:	61 05       	cpc	r22, r1
    20aa:	08 94       	sec
    20ac:	08 95       	ret

000020ae <__fp_zero>:
    20ae:	e8 94       	clt

000020b0 <__fp_szero>:
    20b0:	bb 27       	eor	r27, r27
    20b2:	66 27       	eor	r22, r22
    20b4:	77 27       	eor	r23, r23
    20b6:	cb 01       	movw	r24, r22
    20b8:	97 f9       	bld	r25, 7
    20ba:	08 95       	ret

000020bc <__gesf2>:
    20bc:	8a df       	rcall	.-236    	; 0x1fd2 <__fp_cmp>
    20be:	08 f4       	brcc	.+2      	; 0x20c2 <__gesf2+0x6>
    20c0:	8f ef       	ldi	r24, 0xFF	; 255
    20c2:	08 95       	ret

000020c4 <__mulsf3>:
    20c4:	0b d0       	rcall	.+22     	; 0x20dc <__mulsf3x>
    20c6:	c0 cf       	rjmp	.-128    	; 0x2048 <__fp_round>
    20c8:	b1 df       	rcall	.-158    	; 0x202c <__fp_pscA>
    20ca:	28 f0       	brcs	.+10     	; 0x20d6 <__mulsf3+0x12>
    20cc:	b6 df       	rcall	.-148    	; 0x203a <__fp_pscB>
    20ce:	18 f0       	brcs	.+6      	; 0x20d6 <__mulsf3+0x12>
    20d0:	95 23       	and	r25, r21
    20d2:	09 f0       	breq	.+2      	; 0x20d6 <__mulsf3+0x12>
    20d4:	a2 cf       	rjmp	.-188    	; 0x201a <__fp_inf>
    20d6:	a7 cf       	rjmp	.-178    	; 0x2026 <__fp_nan>
    20d8:	11 24       	eor	r1, r1
    20da:	ea cf       	rjmp	.-44     	; 0x20b0 <__fp_szero>

000020dc <__mulsf3x>:
    20dc:	c6 df       	rcall	.-116    	; 0x206a <__fp_split3>
    20de:	a0 f3       	brcs	.-24     	; 0x20c8 <__mulsf3+0x4>

000020e0 <__mulsf3_pse>:
    20e0:	95 9f       	mul	r25, r21
    20e2:	d1 f3       	breq	.-12     	; 0x20d8 <__mulsf3+0x14>
    20e4:	95 0f       	add	r25, r21
    20e6:	50 e0       	ldi	r21, 0x00	; 0
    20e8:	55 1f       	adc	r21, r21
    20ea:	62 9f       	mul	r22, r18
    20ec:	f0 01       	movw	r30, r0
    20ee:	72 9f       	mul	r23, r18
    20f0:	bb 27       	eor	r27, r27
    20f2:	f0 0d       	add	r31, r0
    20f4:	b1 1d       	adc	r27, r1
    20f6:	63 9f       	mul	r22, r19
    20f8:	aa 27       	eor	r26, r26
    20fa:	f0 0d       	add	r31, r0
    20fc:	b1 1d       	adc	r27, r1
    20fe:	aa 1f       	adc	r26, r26
    2100:	64 9f       	mul	r22, r20
    2102:	66 27       	eor	r22, r22
    2104:	b0 0d       	add	r27, r0
    2106:	a1 1d       	adc	r26, r1
    2108:	66 1f       	adc	r22, r22
    210a:	82 9f       	mul	r24, r18
    210c:	22 27       	eor	r18, r18
    210e:	b0 0d       	add	r27, r0
    2110:	a1 1d       	adc	r26, r1
    2112:	62 1f       	adc	r22, r18
    2114:	73 9f       	mul	r23, r19
    2116:	b0 0d       	add	r27, r0
    2118:	a1 1d       	adc	r26, r1
    211a:	62 1f       	adc	r22, r18
    211c:	83 9f       	mul	r24, r19
    211e:	a0 0d       	add	r26, r0
    2120:	61 1d       	adc	r22, r1
    2122:	22 1f       	adc	r18, r18
    2124:	74 9f       	mul	r23, r20
    2126:	33 27       	eor	r19, r19
    2128:	a0 0d       	add	r26, r0
    212a:	61 1d       	adc	r22, r1
    212c:	23 1f       	adc	r18, r19
    212e:	84 9f       	mul	r24, r20
    2130:	60 0d       	add	r22, r0
    2132:	21 1d       	adc	r18, r1
    2134:	82 2f       	mov	r24, r18
    2136:	76 2f       	mov	r23, r22
    2138:	6a 2f       	mov	r22, r26
    213a:	11 24       	eor	r1, r1
    213c:	9f 57       	subi	r25, 0x7F	; 127
    213e:	50 40       	sbci	r21, 0x00	; 0
    2140:	8a f0       	brmi	.+34     	; 0x2164 <__mulsf3_pse+0x84>
    2142:	e1 f0       	breq	.+56     	; 0x217c <__mulsf3_pse+0x9c>
    2144:	88 23       	and	r24, r24
    2146:	4a f0       	brmi	.+18     	; 0x215a <__mulsf3_pse+0x7a>
    2148:	ee 0f       	add	r30, r30
    214a:	ff 1f       	adc	r31, r31
    214c:	bb 1f       	adc	r27, r27
    214e:	66 1f       	adc	r22, r22
    2150:	77 1f       	adc	r23, r23
    2152:	88 1f       	adc	r24, r24
    2154:	91 50       	subi	r25, 0x01	; 1
    2156:	50 40       	sbci	r21, 0x00	; 0
    2158:	a9 f7       	brne	.-22     	; 0x2144 <__mulsf3_pse+0x64>
    215a:	9e 3f       	cpi	r25, 0xFE	; 254
    215c:	51 05       	cpc	r21, r1
    215e:	70 f0       	brcs	.+28     	; 0x217c <__mulsf3_pse+0x9c>
    2160:	5c cf       	rjmp	.-328    	; 0x201a <__fp_inf>
    2162:	a6 cf       	rjmp	.-180    	; 0x20b0 <__fp_szero>
    2164:	5f 3f       	cpi	r21, 0xFF	; 255
    2166:	ec f3       	brlt	.-6      	; 0x2162 <__mulsf3_pse+0x82>
    2168:	98 3e       	cpi	r25, 0xE8	; 232
    216a:	dc f3       	brlt	.-10     	; 0x2162 <__mulsf3_pse+0x82>
    216c:	86 95       	lsr	r24
    216e:	77 95       	ror	r23
    2170:	67 95       	ror	r22
    2172:	b7 95       	ror	r27
    2174:	f7 95       	ror	r31
    2176:	e7 95       	ror	r30
    2178:	9f 5f       	subi	r25, 0xFF	; 255
    217a:	c1 f7       	brne	.-16     	; 0x216c <__mulsf3_pse+0x8c>
    217c:	fe 2b       	or	r31, r30
    217e:	88 0f       	add	r24, r24
    2180:	91 1d       	adc	r25, r1
    2182:	96 95       	lsr	r25
    2184:	87 95       	ror	r24
    2186:	97 f9       	bld	r25, 7
    2188:	08 95       	ret

0000218a <__mulsi3>:
    218a:	62 9f       	mul	r22, r18
    218c:	d0 01       	movw	r26, r0
    218e:	73 9f       	mul	r23, r19
    2190:	f0 01       	movw	r30, r0
    2192:	82 9f       	mul	r24, r18
    2194:	e0 0d       	add	r30, r0
    2196:	f1 1d       	adc	r31, r1
    2198:	64 9f       	mul	r22, r20
    219a:	e0 0d       	add	r30, r0
    219c:	f1 1d       	adc	r31, r1
    219e:	92 9f       	mul	r25, r18
    21a0:	f0 0d       	add	r31, r0
    21a2:	83 9f       	mul	r24, r19
    21a4:	f0 0d       	add	r31, r0
    21a6:	74 9f       	mul	r23, r20
    21a8:	f0 0d       	add	r31, r0
    21aa:	65 9f       	mul	r22, r21
    21ac:	f0 0d       	add	r31, r0
    21ae:	99 27       	eor	r25, r25
    21b0:	72 9f       	mul	r23, r18
    21b2:	b0 0d       	add	r27, r0
    21b4:	e1 1d       	adc	r30, r1
    21b6:	f9 1f       	adc	r31, r25
    21b8:	63 9f       	mul	r22, r19
    21ba:	b0 0d       	add	r27, r0
    21bc:	e1 1d       	adc	r30, r1
    21be:	f9 1f       	adc	r31, r25
    21c0:	bd 01       	movw	r22, r26
    21c2:	cf 01       	movw	r24, r30
    21c4:	11 24       	eor	r1, r1
    21c6:	08 95       	ret

000021c8 <__udivmodsi4>:
    21c8:	a1 e2       	ldi	r26, 0x21	; 33
    21ca:	1a 2e       	mov	r1, r26
    21cc:	aa 1b       	sub	r26, r26
    21ce:	bb 1b       	sub	r27, r27
    21d0:	fd 01       	movw	r30, r26
    21d2:	0d c0       	rjmp	.+26     	; 0x21ee <__udivmodsi4_ep>

000021d4 <__udivmodsi4_loop>:
    21d4:	aa 1f       	adc	r26, r26
    21d6:	bb 1f       	adc	r27, r27
    21d8:	ee 1f       	adc	r30, r30
    21da:	ff 1f       	adc	r31, r31
    21dc:	a2 17       	cp	r26, r18
    21de:	b3 07       	cpc	r27, r19
    21e0:	e4 07       	cpc	r30, r20
    21e2:	f5 07       	cpc	r31, r21
    21e4:	20 f0       	brcs	.+8      	; 0x21ee <__udivmodsi4_ep>
    21e6:	a2 1b       	sub	r26, r18
    21e8:	b3 0b       	sbc	r27, r19
    21ea:	e4 0b       	sbc	r30, r20
    21ec:	f5 0b       	sbc	r31, r21

000021ee <__udivmodsi4_ep>:
    21ee:	66 1f       	adc	r22, r22
    21f0:	77 1f       	adc	r23, r23
    21f2:	88 1f       	adc	r24, r24
    21f4:	99 1f       	adc	r25, r25
    21f6:	1a 94       	dec	r1
    21f8:	69 f7       	brne	.-38     	; 0x21d4 <__udivmodsi4_loop>
    21fa:	60 95       	com	r22
    21fc:	70 95       	com	r23
    21fe:	80 95       	com	r24
    2200:	90 95       	com	r25
    2202:	9b 01       	movw	r18, r22
    2204:	ac 01       	movw	r20, r24
    2206:	bd 01       	movw	r22, r26
    2208:	cf 01       	movw	r24, r30
    220a:	08 95       	ret

0000220c <__prologue_saves__>:
    220c:	2f 92       	push	r2
    220e:	3f 92       	push	r3
    2210:	4f 92       	push	r4
    2212:	5f 92       	push	r5
    2214:	6f 92       	push	r6
    2216:	7f 92       	push	r7
    2218:	8f 92       	push	r8
    221a:	9f 92       	push	r9
    221c:	af 92       	push	r10
    221e:	bf 92       	push	r11
    2220:	cf 92       	push	r12
    2222:	df 92       	push	r13
    2224:	ef 92       	push	r14
    2226:	ff 92       	push	r15
    2228:	0f 93       	push	r16
    222a:	1f 93       	push	r17
    222c:	cf 93       	push	r28
    222e:	df 93       	push	r29
    2230:	cd b7       	in	r28, 0x3d	; 61
    2232:	de b7       	in	r29, 0x3e	; 62
    2234:	ca 1b       	sub	r28, r26
    2236:	db 0b       	sbc	r29, r27
    2238:	0f b6       	in	r0, 0x3f	; 63
    223a:	f8 94       	cli
    223c:	de bf       	out	0x3e, r29	; 62
    223e:	0f be       	out	0x3f, r0	; 63
    2240:	cd bf       	out	0x3d, r28	; 61
    2242:	09 94       	ijmp

00002244 <__epilogue_restores__>:
    2244:	2a 88       	ldd	r2, Y+18	; 0x12
    2246:	39 88       	ldd	r3, Y+17	; 0x11
    2248:	48 88       	ldd	r4, Y+16	; 0x10
    224a:	5f 84       	ldd	r5, Y+15	; 0x0f
    224c:	6e 84       	ldd	r6, Y+14	; 0x0e
    224e:	7d 84       	ldd	r7, Y+13	; 0x0d
    2250:	8c 84       	ldd	r8, Y+12	; 0x0c
    2252:	9b 84       	ldd	r9, Y+11	; 0x0b
    2254:	aa 84       	ldd	r10, Y+10	; 0x0a
    2256:	b9 84       	ldd	r11, Y+9	; 0x09
    2258:	c8 84       	ldd	r12, Y+8	; 0x08
    225a:	df 80       	ldd	r13, Y+7	; 0x07
    225c:	ee 80       	ldd	r14, Y+6	; 0x06
    225e:	fd 80       	ldd	r15, Y+5	; 0x05
    2260:	0c 81       	ldd	r16, Y+4	; 0x04
    2262:	1b 81       	ldd	r17, Y+3	; 0x03
    2264:	aa 81       	ldd	r26, Y+2	; 0x02
    2266:	b9 81       	ldd	r27, Y+1	; 0x01
    2268:	ce 0f       	add	r28, r30
    226a:	d1 1d       	adc	r29, r1
    226c:	0f b6       	in	r0, 0x3f	; 63
    226e:	f8 94       	cli
    2270:	de bf       	out	0x3e, r29	; 62
    2272:	0f be       	out	0x3f, r0	; 63
    2274:	cd bf       	out	0x3d, r28	; 61
    2276:	ed 01       	movw	r28, r26
    2278:	08 95       	ret

0000227a <_exit>:
    227a:	f8 94       	cli

0000227c <__stop_program>:
    227c:	ff cf       	rjmp	.-2      	; 0x227c <__stop_program>
